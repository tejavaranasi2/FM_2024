; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!695 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!696 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!697 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!698 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!699 Real) )(let ((?x179 (- 9.0)))
 (let ((?x1374 (+ (+ (* 14.0 (rval2 |v0:9_st|)) (* ?x179 (rval2 |v2:7_st|))) (* 18.0 (rval2 |v0:9_st|)))))
 (let ((?x1034 (- 5.0)))
 (let ((?x881 (+ (+ (* (- 19.0) |v7:2|) (* (- 1.0) (rval2 |v8:1_st|))) (* 12.0 (rval2 |v4:5_st|)))))
 (let ((?x465 (- 16.0)))
 (let ((?x708 (+ (+ (* 8.0 (rval2 |v6:3_st|)) (* (- 11.0) |v9:0|)) (* (- 4.0) (rval2 |v4:5_st|)))))
 (let (($x72 (<= (+ (+ (* 4.0 (rval2 |v0:9_st|)) (* 2.0 |v5:4|)) (* 3.0 |v7:2|)) 13.0)))
 (let ((?x1112 (- 18.0)))
 (let ((?x1068 (+ (+ (* (- 2.0) |v7:2|) (* 3.0 (rval2 |v2:7_st|))) (* (- 3.0) (rval2 |v8:1_st|)))))
 (let ((?x792 (rval2 |v4:5_st|)))
 (let ((?x1335 (- 1.0)))
 (let ((?x430 (* ?x1335 ?x792)))
 (let ((?x502 (- 13.0)))
 (let (($x574 (and (<= (+ (+ (* ?x179 |v3:6|) (* 9.0 |v9:0|)) (* ?x1335 |v3:6|)) ?x502) (<= (+ (+ (* ?x179 (rval2 |v2:7_st|)) (* (- 14.0) |v1:8|)) ?x430) 7.0))))
 (let ((?x82 (rval2 |v2:7_st|)))
 (let ((?x369 (* 17.0 ?x82)))
 (let (($x1012 (or (<= (+ (+ (* (- 19.0) (rval2 |v6:3_st|)) ?x82) (* ?x502 |v1:8|)) ?x502) (<= (+ (+ (* 2.0 ?x792) (* 2.0 (rval2 |v6:3_st|))) ?x369) 17.0))))
 (let (($x606 (and (or $x1012 $x574) (and (and (<= ?x1068 ?x1112) $x72) (or (<= ?x708 ?x465) (<= ?x881 ?x1034))))))
 (let ((?x297 (- 6.0)))
 (let (($x458 (<= (+ (+ (* 8.0 ?x792) (* (- 10.0) (rval2 |v8:1_st|))) (* 8.0 |v1:8|)) ?x297)))
 (let ((?x94 (- 11.0)))
 (let (($x444 (or (<= (+ (+ (* 20.0 |v9:0|) (* 11.0 |v5:4|)) (* 0.0 |v7:2|)) ?x94) $x458)))
 (let ((?x994 (- 3.0)))
 (let (($x852 (<= (+ (+ (* 7.0 |v9:0|) (* 0.0 (rval2 |v8:1_st|))) (* ?x465 ?x82)) ?x994)))
 (let (($x715 (and (<= (+ (+ (* 17.0 |v3:6|) (* 19.0 |v7:2|)) (* 11.0 |v9:0|)) ?x1112) $x852)))
 (let (($x1254 (<= (+ (+ (* ?x179 |v9:0|) (* 14.0 (rval2 |v8:1_st|))) (* 0.0 |v5:4|)) 13.0)))
 (let ((?x81 (- 7.0)))
 (let (($x1179 (<= (+ (+ (* 17.0 |v3:6|) (* 20.0 |v3:6|)) (* 3.0 (rval2 |v6:3_st|))) ?x81)))
 (let ((?x1123 (- 12.0)))
 (let ((?x207 (rval2 |v8:1_st|)))
 (let ((?x995 (* 7.0 ?x207)))
 (let (($x860 (and (<= (+ (+ (* 4.0 ?x82) ?x430) (* 19.0 ?x792)) 9.0) (<= (+ (+ (* (- 10.0) |v1:8|) (* (- 15.0) |v5:4|)) ?x995) ?x1123))))
 (let (($x1154 (<= (+ (+ (* (- 15.0) ?x207) (* ?x1112 |v1:8|)) (* (- 4.0) |v9:0|)) 16.0)))
 (let (($x781 (and $x1154 (<= (+ (+ (* 8.0 ?x82) (* 16.0 |v1:8|)) (* 18.0 |v3:6|)) 16.0))))
 (let ((?x1294 (+ (+ (* 7.0 (rval2 |v6:3_st|)) (* 17.0 |v3:6|)) (* 0.0 (rval2 |v0:9_st|)))))
 (let (($x1255 (and (<= (+ (+ (* 3.0 ?x792) (* 19.0 |v1:8|)) (* 16.0 ?x792)) ?x179) (<= ?x1294 17.0))))
 (let (($x1361 (<= (+ (+ (* (- 14.0) ?x792) (* ?x1112 ?x207)) (* 6.0 |v9:0|)) 15.0)))
 (let (($x1151 (<= (+ (+ (* 7.0 |v1:8|) (* (- 15.0) |v1:8|)) (* (- 10.0) |v3:6|)) ?x502)))
 (let ((?x1078 (- 10.0)))
 (let (($x580 (<= (+ (+ (* ?x81 (rval2 |v6:3_st|)) (* (- 4.0) |v1:8|)) (* 12.0 |v7:2|)) ?x1078)))
 (let (($x678 (or $x580 (<= (+ (+ (* ?x1335 |v9:0|) (* ?x1335 |v7:2|)) (* 12.0 |v5:4|)) 0.0))))
 (let (($x202 (and (and (and $x678 (and $x1151 $x1361)) (or $x1255 $x781)) (and (or $x860 (and $x1179 $x1254)) (or $x715 $x444)))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!699)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!698)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!697)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!696)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!695)))))
 (and $x699 $x501 $x655 $x729 $x945 (or $x202 (or $x606 (<= ?x1374 ?x179))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
