; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!600 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!601 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!602 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!603 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!604 Real) )(let ((?x603 (+ (+ (* (- 2.0) (rval2 |v2:7_st|)) (* (- 2.0) (rval2 |v2:7_st|))) (* 14.0 |v3:6|))))
 (let ((?x1267 (- 8.0)))
 (let (($x803 (<= (+ (+ (* 6.0 (rval2 |v8:1_st|)) (* 6.0 |v3:6|)) (* (- 20.0) |v7:2|)) ?x1267)))
 (let ((?x789 (rval2 |v0:9_st|)))
 (let ((?x670 (* 3.0 ?x789)))
 (let (($x121 (<= (+ (+ (* 7.0 (rval2 |v6:3_st|)) (* (- 17.0) (rval2 |v6:3_st|))) ?x670) 12.0)))
 (let (($x100 (<= (+ (+ (* (- 1.0) |v3:6|) (* 13.0 |v1:8|)) (* 3.0 (rval2 |v8:1_st|))) 10.0)))
 (let ((?x862 (- 20.0)))
 (let (($x444 (<= (+ (+ (* ?x1267 (rval2 |v6:3_st|)) (* 5.0 |v5:4|)) (* 15.0 ?x789)) ?x862)))
 (let (($x224 (<= (+ (+ (* (- 6.0) |v9:0|) (rval2 |v2:7_st|)) (* (- 5.0) |v3:6|)) 19.0)))
 (let ((?x82 (rval2 |v2:7_st|)))
 (let ((?x209 (* 4.0 ?x82)))
 (let (($x1180 (<= (+ (+ (* (- 12.0) |v5:4|) (* 7.0 (rval2 |v8:1_st|))) ?x209) 17.0)))
 (let (($x189 (<= (+ (+ (* (- 19.0) ?x82) (* 7.0 |v1:8|)) (* 0.0 |v5:4|)) 16.0)))
 (let ((?x84 (- 11.0)))
 (let ((?x866 (+ (+ (* 15.0 |v1:8|) (* (- 3.0) (rval2 |v8:1_st|))) (* (- 7.0) (rval2 |v6:3_st|)))))
 (let ((?x363 (- 18.0)))
 (let ((?x1153 (* ?x363 |v5:4|)))
 (let (($x104 (or (<= (+ (+ (* ?x1267 |v3:6|) (* (- 12.0) (rval2 |v8:1_st|))) ?x1153) 11.0) (<= (+ (+ ?x789 (* 11.0 |v9:0|)) (* 2.0 ?x82)) (- 3.0)))))
 (let (($x130 (<= (+ (+ (* 14.0 ?x82) (* 8.0 (rval2 |v4:5_st|))) (* (- 3.0) ?x789)) 9.0)))
 (let (($x165 (or $x130 (<= (+ (+ (* (- 13.0) |v1:8|) ?x789) (* 9.0 |v9:0|)) ?x84))))
 (let (($x1289 (and (and (or $x165 $x104) (or (<= ?x866 ?x84) (or $x189 $x1180))) (and (or $x224 (or $x444 $x100)) (or (or $x121 $x803) (<= ?x603 16.0))))))
 (let (($x411 (or (<= (+ (+ ?x1153 (* 16.0 |v3:6|)) (* 16.0 (rval2 |v6:3_st|))) 5.0) (<= (+ (+ (* (- 3.0) ?x82) |v3:6|) (* 5.0 |v1:8|)) 17.0))))
 (let (($x758 (<= (+ (+ (* 0.0 |v3:6|) (* (- 15.0) ?x789)) (* 15.0 |v7:2|)) 14.0)))
 (let (($x737 (<= (+ (+ (* (- 16.0) (rval2 |v6:3_st|)) (* ?x84 |v9:0|)) (* 15.0 |v1:8|)) 3.0)))
 (let ((?x950 (+ (+ (* (- 17.0) (rval2 |v6:3_st|)) (* ?x363 |v1:8|)) (* (- 12.0) (rval2 |v4:5_st|)))))
 (let ((?x1169 (- 10.0)))
 (let (($x1243 (<= (+ (+ (* ?x84 (rval2 |v8:1_st|)) (* (- 7.0) ?x82)) (* 18.0 |v1:8|)) ?x1169)))
 (let (($x523 (<= (+ (+ (* 2.0 |v1:8|) (* 12.0 |v1:8|)) (* (- 7.0) |v5:4|)) 4.0)))
 (let (($x1382 (<= (+ (+ (* (- 6.0) (rval2 |v6:3_st|)) ?x789) (* (- 9.0) ?x82)) 5.0)))
 (let ((?x207 (rval2 |v8:1_st|)))
 (let ((?x1106 (* 11.0 ?x207)))
 (let (($x565 (and (<= (+ (+ (* (- 2.0) (rval2 |v6:3_st|)) (* ?x84 |v7:2|)) ?x1106) 8.0) $x1382)))
 (let (($x1061 (<= (+ (+ (* (- 12.0) (rval2 |v6:3_st|)) (* 11.0 ?x789)) (* 14.0 ?x207)) ?x363)))
 (let (($x252 (or $x1061 (<= (+ (+ (* 2.0 |v9:0|) (* 5.0 |v3:6|)) (* 14.0 ?x82)) 1.0))))
 (let (($x505 (<= (+ (+ (* (- 6.0) |v5:4|) (* (- 19.0) |v5:4|)) (* ?x1267 |v1:8|)) 7.0)))
 (let (($x756 (<= (+ (+ (* 4.0 ?x789) (* 5.0 (rval2 |v6:3_st|))) (* ?x1169 |v9:0|)) 10.0)))
 (let (($x309 (or (or (and (or $x756 $x505) $x252) (and $x565 (and $x523 $x1243))) (or (<= ?x950 19.0) (or (or $x737 $x758) $x411)))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!604)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!603)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!602)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!601)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!600)))))
 (and $x699 $x501 $x655 $x729 $x945 (or $x309 $x1289))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
