; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!1080 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!1081 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!1082 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!1083 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!1084 Real) )(let ((?x815 (+ (+ (* 20.0 (rval2 |v0:9_st|)) (* (- 16.0) |v1:8|)) (* (- 18.0) (rval2 |v0:9_st|)))))
 (let ((?x1124 (- 16.0)))
 (let (($x678 (<= (+ (+ (* 17.0 (rval2 |v6:3_st|)) (* 17.0 |v1:8|)) (rval2 |v8:1_st|)) ?x1124)))
 (let ((?x198 (- 5.0)))
 (let (($x1095 (<= (+ (+ (* 15.0 |v7:2|) (* 3.0 (rval2 |v0:9_st|))) (* (- 6.0) |v5:4|)) ?x198)))
 (let ((?x600 (- 2.0)))
 (let ((?x513 (+ (+ (* (- 7.0) |v3:6|) (* (- 4.0) (rval2 |v6:3_st|))) (* (- 20.0) (rval2 |v8:1_st|)))))
 (let ((?x1306 (+ (+ (* 9.0 |v1:8|) (* (- 6.0) |v9:0|)) (* (- 18.0) (rval2 |v4:5_st|)))))
 (let (($x924 (<= (+ (+ (* (- 11.0) (rval2 |v6:3_st|)) (* 15.0 |v1:8|)) (* ?x600 |v1:8|)) 7.0)))
 (let ((?x671 (- 14.0)))
 (let (($x290 (<= (+ (+ (* 10.0 |v5:4|) (* ?x600 (rval2 |v4:5_st|))) (* 3.0 |v7:2|)) ?x671)))
 (let ((?x280 (+ (+ (* (- 7.0) |v9:0|) (* (- 13.0) (rval2 |v6:3_st|))) (* 8.0 (rval2 |v6:3_st|)))))
 (let (($x582 (and (and (or (<= ?x280 2.0) $x290) (or $x924 (<= ?x1306 19.0))) (and (or (<= ?x513 ?x600) $x1095) (or $x678 (<= ?x815 16.0))))))
 (let ((?x1059 (- 17.0)))
 (let (($x590 (<= (+ (+ (* ?x198 (rval2 |v8:1_st|)) (* 12.0 |v1:8|)) (* ?x1059 (rval2 |v4:5_st|))) ?x1059)))
 (let ((?x494 (+ (+ (* (- 6.0) (rval2 |v0:9_st|)) (* (- 8.0) (rval2 |v2:7_st|))) (* ?x1124 (rval2 |v2:7_st|)))))
 (let ((?x285 (- 7.0)))
 (let (($x543 (or (<= (+ (+ (rval2 |v2:7_st|) (* 3.0 |v7:2|)) (* (- 20.0) |v1:8|)) ?x285) (<= ?x494 ?x1059))))
 (let (($x476 (<= (+ (+ (* (- 13.0) |v9:0|) (* 12.0 |v7:2|)) (* 14.0 |v1:8|)) 6.0)))
 (let ((?x384 (+ (+ (* 9.0 (rval2 |v4:5_st|)) (* (- 12.0) (rval2 |v2:7_st|))) (* ?x285 (rval2 |v4:5_st|)))))
 (let (($x877 (<= (+ (+ (* (- 18.0) |v3:6|) (* (- 1.0) (rval2 |v4:5_st|))) |v3:6|) 11.0)))
 (let ((?x147 (- 9.0)))
 (let (($x832 (or (<= (+ (+ (* ?x1059 |v5:4|) (* ?x147 |v1:8|)) (* ?x671 |v1:8|)) ?x147) $x877)))
 (let ((?x378 (+ (+ (* (- 12.0) (rval2 |v8:1_st|)) (* (- 11.0) |v7:2|)) (* 19.0 (rval2 |v6:3_st|)))))
 (let (($x116 (and (<= (+ (+ (* 19.0 |v1:8|) (* ?x1059 |v1:8|)) (* ?x600 |v3:6|)) ?x147) (<= ?x378 13.0))))
 (let (($x723 (<= (+ (+ (* 10.0 (rval2 |v4:5_st|)) (* ?x600 |v3:6|)) (* ?x285 |v7:2|)) 12.0)))
 (let ((?x409 (- 11.0)))
 (let (($x210 (<= (+ (+ (* 20.0 (rval2 |v4:5_st|)) (* ?x198 |v7:2|)) (* 9.0 |v5:4|)) ?x409)))
 (let ((?x1144 (- 8.0)))
 (let ((?x529 (rval2 |v8:1_st|)))
 (let ((?x1143 (- 12.0)))
 (let ((?x665 (* ?x1143 ?x529)))
 (let ((?x370 (- 15.0)))
 (let (($x563 (<= (+ (+ (* 3.0 (rval2 |v6:3_st|)) (* 13.0 |v9:0|)) (* (- 3.0) ?x529)) ?x370)))
 (let (($x1018 (and $x563 (and (<= (+ (+ (* 9.0 ?x529) (* 18.0 |v3:6|)) ?x665) ?x1144) $x210))))
 (let ((?x320 (- 10.0)))
 (let ((?x310 (+ (+ (* (- 4.0) (rval2 |v2:7_st|)) (* ?x147 |v7:2|)) (* 20.0 (rval2 |v6:3_st|)))))
 (let (($x257 (or (<= ?x310 ?x320) (<= (+ (+ (* ?x1059 ?x529) (* ?x1144 |v5:4|)) (* 4.0 |v3:6|)) 18.0))))
 (let (($x638 (<= (+ (+ (* 6.0 (rval2 |v2:7_st|)) |v3:6|) (* (- 18.0) |v9:0|)) 14.0)))
 (let ((?x764 (- 1.0)))
 (let ((?x1384 (+ (+ (* (- 13.0) (rval2 |v6:3_st|)) (* 3.0 (rval2 |v2:7_st|))) (* (- 4.0) (rval2 |v4:5_st|)))))
 (let (($x263 (or (or (and (and (<= ?x1384 ?x764) $x638) $x257) $x1018) (or $x723 (and $x116 $x832)))))
 (let (($x125 (or $x263 (or (and (and (and (<= ?x384 1.0) $x476) $x543) $x590) $x582))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!1084)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!1083)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!1082)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!1081)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!1080)))))
 (and $x699 $x501 $x655 $x729 $x945 $x125))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
