; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!945 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!946 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!947 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!948 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!949 Real) )(let ((?x294 (+ (+ (* 15.0 (rval2 |v6:3_st|)) (* (- 16.0) |v3:6|)) (* (- 7.0) (rval2 |v4:5_st|)))))
 (let ((?x618 (+ (+ (* (- 20.0) |v5:4|) (* (- 13.0) |v3:6|)) (* (- 8.0) (rval2 |v4:5_st|)))))
 (let ((?x1068 (+ (+ (* (- 18.0) (rval2 |v8:1_st|)) (* (- 9.0) (rval2 |v2:7_st|))) (* (- 4.0) (rval2 |v4:5_st|)))))
 (let ((?x11 (+ (+ (* 5.0 (rval2 |v0:9_st|)) (* (- 16.0) (rval2 |v4:5_st|))) (* 19.0 |v9:0|))))
 (let (($x110 (or (and (<= ?x11 10.0) (<= ?x1068 4.0)) (and (<= ?x618 7.0) (<= ?x294 0.0)))))
 (let ((?x1409 (- 13.0)))
 (let ((?x767 (rval2 |v4:5_st|)))
 (let ((?x700 (- 19.0)))
 (let ((?x566 (* ?x700 ?x767)))
 (let (($x382 (<= (+ (+ (* 19.0 (rval2 |v2:7_st|)) (* 14.0 |v7:2|)) (* 0.0 |v7:2|)) 16.0)))
 (let ((?x810 (rval2 |v6:3_st|)))
 (let ((?x182 (- 18.0)))
 (let ((?x1191 (* ?x182 ?x810)))
 (let (($x1273 (<= (+ (+ (* 0.0 |v7:2|) (* 0.0 (rval2 |v0:9_st|))) (* 13.0 |v3:6|)) 13.0)))
 (let (($x1321 (or $x1273 (<= (+ (+ (* (- 1.0) ?x810) (* (- 9.0) ?x767)) ?x1191) ?x700))))
 (let (($x983 (or $x1321 (and $x382 (<= (+ (+ ?x810 (* (- 10.0) |v3:6|)) ?x566) ?x1409)))))
 (let ((?x31 (- 3.0)))
 (let (($x153 (and (<= (+ (+ ?x1191 (* 12.0 ?x810)) (* (- 11.0) (rval2 |v8:1_st|))) ?x31) (or $x983 $x110))))
 (let (($x1281 (<= (+ (+ (* (- 15.0) ?x767) (* (- 4.0) |v7:2|)) (* 12.0 ?x810)) 11.0)))
 (let (($x74 (<= (+ (+ (* 6.0 |v1:8|) (* 9.0 |v7:2|)) (* (- 14.0) |v1:8|)) 3.0)))
 (let (($x1382 (<= (+ (+ (* 15.0 |v7:2|) (* 8.0 (rval2 |v0:9_st|))) (* 19.0 |v5:4|)) 9.0)))
 (let ((?x470 (- 9.0)))
 (let ((?x980 (+ (+ (* (- 15.0) (rval2 |v2:7_st|)) (* (- 6.0) (rval2 |v8:1_st|))) (* 12.0 ?x767))))
 (let ((?x1162 (+ (+ (* 9.0 |v3:6|) (* ?x1409 (rval2 |v8:1_st|))) (* (- 8.0) (rval2 |v2:7_st|)))))
 (let (($x667 (<= (+ (+ (* 4.0 ?x810) (* (- 20.0) ?x810)) (* 2.0 |v9:0|)) 8.0)))
 (let ((?x705 (rval2 |v8:1_st|)))
 (let ((?x620 (* 2.0 ?x705)))
 (let (($x1002 (<= (+ (+ (* (- 1.0) (rval2 |v2:7_st|)) (* (- 8.0) |v9:0|)) ?x620) 0.0)))
 (let (($x1230 (or (and (and $x1002 $x667) (<= ?x1162 6.0)) (and (or (<= ?x980 ?x470) $x1382) (or $x74 $x1281)))))
 (let (($x561 (or (<= (+ (+ ?x566 (* 3.0 ?x767)) (* ?x1409 |v1:8|)) 8.0) (<= (+ (+ (* 15.0 |v3:6|) (* ?x1409 |v7:2|)) (* 0.0 |v3:6|)) 9.0))))
 (let (($x1165 (<= (+ (+ (* 17.0 |v3:6|) (* (- 8.0) (rval2 |v0:9_st|))) (* 6.0 ?x810)) 11.0)))
 (let ((?x636 (- 1.0)))
 (let (($x1008 (<= (+ (+ (* (- 11.0) ?x767) (* 18.0 ?x705)) (* 7.0 |v1:8|)) ?x636)))
 (let ((?x733 (- 12.0)))
 (let (($x611 (and (<= (+ (+ (* 18.0 |v7:2|) (* 3.0 |v1:8|)) (* 0.0 ?x810)) ?x733) $x1008)))
 (let (($x55 (<= (+ (+ (* ?x470 |v5:4|) (* (- 7.0) (rval2 |v2:7_st|))) (* 15.0 |v5:4|)) 0.0)))
 (let (($x985 (<= (+ (+ (* 16.0 |v7:2|) (* (- 17.0) |v1:8|)) (* (- 16.0) ?x810)) ?x470)))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!949)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!948)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!947)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!946)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!945)))))
 (and $x699 $x501 $x655 $x729 $x945 (or (or (or (or (or $x985 $x55) $x611) (or $x1165 $x561)) $x1230) $x153)))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
