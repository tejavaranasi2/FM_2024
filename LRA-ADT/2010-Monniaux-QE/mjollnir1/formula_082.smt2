; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!1380 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!1381 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!1382 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!1383 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!1384 Real) )(let ((?x402 (- 13.0)))
 (let ((?x169 (+ (+ (* 2.0 (rval2 |v2:7_st|)) (* (- 4.0) (rval2 |v6:3_st|))) (* (- 8.0) (rval2 |v8:1_st|)))))
 (let ((?x357 (- 19.0)))
 (let (($x208 (<= (+ (+ (rval2 |v2:7_st|) (* ?x402 (rval2 |v2:7_st|))) (* (- 10.0) |v3:6|)) ?x357)))
 (let (($x401 (<= (+ (+ (* 17.0 |v9:0|) (* (- 14.0) |v1:8|)) (* 0.0 (rval2 |v4:5_st|))) 5.0)))
 (let ((?x634 (- 8.0)))
 (let ((?x346 (* 4.0 |v3:6|)))
 (let (($x315 (<= (+ (+ (* (- 3.0) |v3:6|) (* (- 10.0) (rval2 |v8:1_st|))) ?x346) ?x634)))
 (let ((?x646 (+ (+ (* (- 20.0) |v1:8|) (* 4.0 (rval2 |v8:1_st|))) (* 3.0 (rval2 |v4:5_st|)))))
 (let ((?x359 (- 20.0)))
 (let (($x1153 (<= (+ (+ (* ?x634 |v5:4|) (* 8.0 |v3:6|)) (* (- 18.0) (rval2 |v0:9_st|))) ?x359)))
 (let ((?x920 (+ (+ (* (- 14.0) |v3:6|) (* (- 1.0) |v1:8|)) (* (- 17.0) |v1:8|))))
 (let ((?x1372 (+ (+ (* 19.0 |v3:6|) (* (- 3.0) |v3:6|)) (* (- 5.0) (rval2 |v2:7_st|)))))
 (let (($x304 (and (and (<= ?x1372 6.0) (<= ?x920 11.0)) (or $x1153 (<= ?x646 16.0)))))
 (let ((?x1015 (rval2 |v4:5_st|)))
 (let (($x1340 (<= (+ (+ (* (- 2.0) (rval2 |v6:3_st|)) (* 6.0 ?x1015)) ?x1015) 3.0)))
 (let ((?x231 (+ (+ (* (- 9.0) (rval2 |v8:1_st|)) (* (- 18.0) |v5:4|)) (* 0.0 |v3:6|))))
 (let ((?x1293 (+ (+ (* (- 1.0) |v3:6|) (* 12.0 |v7:2|)) (* (- 11.0) (rval2 |v6:3_st|)))))
 (let ((?x1040 (- 2.0)))
 (let ((?x769 (rval2 |v6:3_st|)))
 (let ((?x858 (* 5.0 ?x769)))
 (let (($x1191 (or (<= (+ (+ (* 6.0 (rval2 |v0:9_st|)) (* (- 18.0) |v1:8|)) ?x858) ?x1040) (<= ?x1293 19.0))))
 (let (($x1213 (<= (+ (+ (* 3.0 |v7:2|) (* ?x1040 ?x1015)) (* ?x359 (rval2 |v8:1_st|))) 18.0)))
 (let (($x507 (and (<= (+ (+ (* (- 17.0) |v9:0|) ?x346) (* ?x359 (rval2 |v2:7_st|))) 17.0) $x1213)))
 (let (($x600 (<= (+ (+ (* (- 11.0) |v7:2|) (* 16.0 (rval2 |v8:1_st|))) (* 10.0 |v5:4|)) 3.0)))
 (let (($x42 (and $x600 (<= (+ (+ (* 0.0 ?x1015) |v1:8|) (* 20.0 ?x1015)) (- 5.0)))))
 (let (($x1013 (or (and (or $x42 $x507) (and $x1191 (or (<= ?x231 15.0) $x1340))) (and $x304 (and (and $x315 $x401) (and $x208 (<= ?x169 ?x402)))))))
 (let ((?x236 (+ (+ (* 2.0 |v5:4|) (* 17.0 (rval2 |v2:7_st|))) (* (- 17.0) (rval2 |v0:9_st|)))))
 (let ((?x1022 (- 3.0)))
 (let (($x551 (<= (+ (+ (* (- 7.0) |v7:2|) (* 15.0 ?x1015)) (* 15.0 (rval2 |v2:7_st|))) ?x1022)))
 (let ((?x672 (+ (+ (* (- 11.0) |v3:6|) (* (- 18.0) (rval2 |v2:7_st|))) (* (- 17.0) (rval2 |v8:1_st|)))))
 (let ((?x1356 (+ (+ (* (- 14.0) (rval2 |v0:9_st|)) (* (- 17.0) |v3:6|)) (* ?x402 |v9:0|))))
 (let (($x1241 (<= (+ (+ (* 6.0 ?x1015) (* (- 4.0) ?x1015)) (* 3.0 |v9:0|)) 0.0)))
 (let (($x900 (or $x1241 (<= (+ (+ (* ?x359 ?x1015) (* 20.0 ?x1015)) (* 7.0 |v1:8|)) 3.0))))
 (let ((?x1386 (- 18.0)))
 (let (($x719 (<= (+ (+ (* (- 17.0) |v5:4|) (* 0.0 |v7:2|)) (* 19.0 |v3:6|)) ?x1386)))
 (let ((?x523 (* 16.0 |v9:0|)))
 (let (($x1320 (<= (+ (+ (* 9.0 (rval2 |v0:9_st|)) (* (- 16.0) (rval2 |v0:9_st|))) ?x523) 14.0)))
 (let ((?x1407 (* 5.0 |v9:0|)))
 (let (($x1408 (<= (+ (+ (* 4.0 (rval2 |v8:1_st|)) (* (- 15.0) (rval2 |v0:9_st|))) ?x1407) 9.0)))
 (let (($x1214 (or (<= (+ (+ (* 17.0 |v9:0|) (* 4.0 |v5:4|)) (* 6.0 |v9:0|)) ?x359) $x1408)))
 (let (($x879 (and (or $x1214 (and $x1320 $x719)) (or $x900 (or (<= ?x1356 0.0) (<= ?x672 6.0))))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!1384)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!1383)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!1382)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!1381)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!1380)))))
 (and $x699 $x501 $x655 $x729 $x945 (or (or $x879 (and $x551 (<= ?x236 2.0))) $x1013))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
