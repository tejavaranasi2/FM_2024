; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!785 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!786 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!787 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!788 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!789 Real) )(let ((?x195 (- 14.0)))
 (let (($x470 (<= (+ (+ (* (- 8.0) (rval2 |v0:9_st|)) (* 19.0 |v7:2|)) (* 15.0 |v1:8|)) ?x195)))
 (let ((?x1295 (+ (+ (* (- 2.0) |v1:8|) (* 4.0 (rval2 |v8:1_st|))) (* (- 8.0) |v3:6|))))
 (let ((?x188 (+ (+ (* 18.0 |v9:0|) (* (- 9.0) (rval2 |v4:5_st|))) (* (- 18.0) (rval2 |v0:9_st|)))))
 (let ((?x352 (rval2 |v8:1_st|)))
 (let ((?x357 (* 8.0 ?x352)))
 (let (($x710 (<= (+ (+ (* (- 17.0) |v9:0|) (* (- 17.0) (rval2 |v6:3_st|))) ?x357) 15.0)))
 (let ((?x912 (- 8.0)))
 (let (($x1034 (<= (+ (+ (* (- 1.0) |v5:4|) (* (- 2.0) |v9:0|)) (* 7.0 |v3:6|)) ?x912)))
 (let (($x82 (and (<= (+ (+ (* 20.0 |v3:6|) (* 13.0 |v9:0|)) (* 19.0 |v7:2|)) 5.0) $x1034)))
 (let ((?x991 (- 6.0)))
 (let ((?x407 (+ (+ (* 9.0 ?x352) (* 20.0 (rval2 |v4:5_st|))) (* (- 18.0) (rval2 |v4:5_st|)))))
 (let ((?x1326 (- 12.0)))
 (let ((?x620 (+ (+ (* (- 17.0) |v1:8|) (* (- 7.0) |v5:4|)) (* (- 19.0) |v1:8|))))
 (let (($x464 (or (or (or (<= ?x620 ?x1326) (<= ?x407 ?x991)) $x82) (and (or $x710 (<= ?x188 3.0)) (or (<= ?x1295 16.0) $x470)))))
 (let (($x1345 (<= (+ (+ (* (- 18.0) |v9:0|) (* 0.0 |v3:6|)) (* 14.0 (rval2 |v2:7_st|))) 10.0)))
 (let ((?x306 (- 17.0)))
 (let ((?x884 (+ (+ (* (- 11.0) (rval2 |v6:3_st|)) (* 9.0 ?x352)) (* ?x912 (rval2 |v6:3_st|)))))
 (let ((?x878 (+ (+ (* 3.0 (rval2 |v0:9_st|)) (* 0.0 |v1:8|)) (* (- 19.0) (rval2 |v0:9_st|)))))
 (let (($x214 (<= (+ (+ (* 14.0 ?x352) (* (- 3.0) |v5:4|)) (* ?x306 (rval2 |v0:9_st|))) 2.0)))
 (let ((?x502 (+ (+ (* 4.0 |v3:6|) (* 8.0 (rval2 |v0:9_st|))) (* 5.0 (rval2 |v0:9_st|)))))
 (let (($x510 (and (and (<= ?x502 12.0) $x214) (or (<= ?x878 14.0) (<= ?x884 ?x306)))))
 (let ((?x125 (- 4.0)))
 (let (($x953 (<= (+ (+ (* 5.0 |v1:8|) (* 3.0 (rval2 |v4:5_st|))) (* 18.0 |v9:0|)) 12.0)))
 (let ((?x301 (- 10.0)))
 (let (($x158 (<= (+ (+ (* 6.0 |v5:4|) (* (- 7.0) |v3:6|)) (* 14.0 (rval2 |v2:7_st|))) ?x301)))
 (let (($x124 (or (and $x158 $x953) (<= (+ (+ (* ?x306 |v7:2|) (* 8.0 |v1:8|)) (* 0.0 ?x352)) ?x125))))
 (let ((?x862 (rval2 |v2:7_st|)))
 (let ((?x900 (* 7.0 ?x862)))
 (let (($x719 (<= (+ (+ (* 5.0 (rval2 |v4:5_st|)) (* 12.0 (rval2 |v6:3_st|))) ?x900) ?x306)))
 (let (($x1188 (and (<= (+ (+ (* 11.0 |v3:6|) (* 18.0 ?x862)) (* 7.0 |v1:8|)) ?x306) $x719)))
 (let ((?x764 (- 1.0)))
 (let (($x940 (<= (+ (+ (* (- 19.0) (rval2 |v6:3_st|)) (* 0.0 |v3:6|)) (* 13.0 ?x352)) 11.0)))
 (let (($x1261 (and $x940 (<= (+ (+ (* ?x301 |v3:6|) (rval2 |v6:3_st|)) (* ?x764 |v1:8|)) ?x764))))
 (let (($x931 (<= (+ (+ (* 13.0 |v5:4|) (* (- 3.0) |v1:8|)) (* 4.0 |v3:6|)) 20.0)))
 (let ((?x1075 (- 18.0)))
 (let (($x179 (<= (+ (+ (* (- 11.0) (rval2 |v6:3_st|)) (* ?x125 |v9:0|)) (* ?x195 ?x352)) ?x1075)))
 (let (($x831 (<= (+ (+ (* 18.0 |v3:6|) (* (- 16.0) |v5:4|)) (* (- 11.0) |v9:0|)) 2.0)))
 (let ((?x889 (- 13.0)))
 (let ((?x663 (+ (+ (* (- 5.0) |v7:2|) (* (- 11.0) |v3:6|)) (* (- 9.0) (rval2 |v0:9_st|)))))
 (let (($x961 (and (and (or (<= ?x663 ?x889) $x831) (and $x179 $x931)) (and $x1261 $x1188))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!789)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!788)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!787)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!786)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!785)))))
 (and $x699 $x501 $x655 $x729 $x945 (or (and $x961 (or $x124 $x510)) (or $x1345 $x464))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
