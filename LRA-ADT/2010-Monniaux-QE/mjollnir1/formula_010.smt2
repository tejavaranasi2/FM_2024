; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v9:0| Real) )(exists ((|v8:1_st| RealState) (val!1090 Real) )(forall ((|v7:2| Real) )(exists ((|v6:3_st| RealState) (val!1091 Real) )(forall ((|v5:4| Real) )(exists ((|v4:5_st| RealState) (val!1092 Real) )(forall ((|v3:6| Real) )(exists ((|v2:7_st| RealState) (val!1093 Real) )(forall ((|v1:8| Real) )(exists ((|v0:9_st| RealState) (val!1094 Real) )(let ((?x169 (- 17.0)))
 (let (($x207 (<= (+ (+ (* 13.0 (rval2 |v4:5_st|)) (* (- 11.0) |v7:2|)) (* 6.0 |v5:4|)) ?x169)))
 (let ((?x897 (+ (+ (* (- 4.0) (rval2 |v8:1_st|)) (* (- 19.0) |v1:8|)) (* 14.0 (rval2 |v0:9_st|)))))
 (let ((?x257 (- 7.0)))
 (let ((?x184 (+ (+ (* (- 14.0) |v7:2|) (* (- 1.0) |v5:4|)) (* 13.0 (rval2 |v0:9_st|)))))
 (let (($x858 (<= (+ (+ (* ?x257 (rval2 |v8:1_st|)) |v9:0|) (* (- 12.0) (rval2 |v4:5_st|))) 17.0)))
 (let ((?x1204 (+ (+ (* (- 16.0) (rval2 |v8:1_st|)) (* 8.0 (rval2 |v6:3_st|))) (* (- 20.0) (rval2 |v8:1_st|)))))
 (let (($x686 (or (<= ?x1204 10.0) (and (or $x858 (<= ?x184 ?x257)) (and (<= ?x897 11.0) $x207)))))
 (let ((?x643 (- 6.0)))
 (let (($x957 (<= (+ (+ (* 15.0 |v5:4|) (* ?x257 |v7:2|)) (* (- 5.0) |v1:8|)) ?x643)))
 (let ((?x212 (- 12.0)))
 (let (($x1378 (<= (+ (+ (* 0.0 (rval2 |v0:9_st|)) (* (- 14.0) |v1:8|)) (* 20.0 |v7:2|)) ?x212)))
 (let ((?x902 (- 14.0)))
 (let (($x716 (and (<= (+ (+ (* 2.0 |v9:0|) (* 9.0 |v5:4|)) (* 16.0 |v5:4|)) ?x902) $x1378)))
 (let (($x416 (<= (+ (+ (* (- 10.0) |v1:8|) (* 3.0 (rval2 |v0:9_st|))) (* 5.0 |v7:2|)) 2.0)))
 (let ((?x263 (- 13.0)))
 (let ((?x1275 (- 11.0)))
 (let ((?x77 (* ?x1275 |v3:6|)))
 (let (($x18 (<= (+ (+ (* (- 19.0) (rval2 |v6:3_st|)) (* 2.0 (rval2 |v0:9_st|))) ?x77) ?x263)))
 (let ((?x90 (- 3.0)))
 (let ((?x63 (rval2 |v8:1_st|)))
 (let ((?x887 (- 4.0)))
 (let ((?x357 (* ?x887 ?x63)))
 (let ((?x990 (+ (+ (* 6.0 (rval2 |v6:3_st|)) (* 10.0 (rval2 |v0:9_st|))) (* ?x1275 (rval2 |v0:9_st|)))))
 (let (($x498 (and (<= ?x990 14.0) (<= (+ (+ (* 19.0 (rval2 |v0:9_st|)) (* 17.0 |v9:0|)) ?x357) ?x90))))
 (let (($x1300 (<= (+ (+ (* (- 18.0) (rval2 |v0:9_st|)) (* ?x1275 ?x63)) (* 5.0 |v3:6|)) ?x212)))
 (let (($x106 (<= (+ (+ (* 12.0 |v9:0|) (* 3.0 |v1:8|)) (* (- 19.0) |v9:0|)) 0.0)))
 (let (($x1376 (<= (+ (+ (* (- 2.0) |v9:0|) (* 6.0 |v9:0|)) (* ?x90 (rval2 |v4:5_st|))) ?x169)))
 (let (($x970 (<= (+ (+ (* ?x902 |v3:6|) (* (- 19.0) (rval2 |v0:9_st|))) (* ?x902 |v5:4|)) 14.0)))
 (let (($x1237 (<= (+ (+ (* 19.0 |v5:4|) (* ?x263 |v7:2|)) (* (- 15.0) (rval2 |v0:9_st|))) 15.0)))
 (let ((?x1129 (- 2.0)))
 (let (($x1182 (<= (+ (+ (* 11.0 (rval2 |v0:9_st|)) (* ?x212 |v1:8|)) (rval2 |v0:9_st|)) ?x1129)))
 (let ((?x764 (- 1.0)))
 (let ((?x480 (rval2 |v4:5_st|)))
 (let ((?x1114 (* 13.0 ?x480)))
 (let ((?x1053 (rval2 |v0:9_st|)))
 (let ((?x795 (* 2.0 ?x1053)))
 (let (($x70 (or (<= (+ (+ (* 18.0 (rval2 |v6:3_st|)) (* (- 20.0) ?x1053)) ?x795) ?x1275) (<= (+ (+ (* (- 18.0) ?x1053) (* 7.0 |v9:0|)) ?x1114) ?x764))))
 (let ((?x838 (- 5.0)))
 (let (($x642 (<= (+ (+ (* 18.0 (rval2 |v6:3_st|)) (* 17.0 |v1:8|)) (* 13.0 |v1:8|)) ?x838)))
 (let (($x407 (<= (+ (+ (* 6.0 ?x480) (* 13.0 (rval2 |v2:7_st|))) (* (- 16.0) ?x1053)) ?x212)))
 (let (($x834 (and $x407 (<= (+ (+ (* ?x838 ?x1053) (* 13.0 ?x63)) (* 10.0 |v5:4|)) ?x838))))
 (let (($x1323 (and $x834 (and $x642 (<= (+ (+ ?x77 (* 14.0 |v3:6|)) (* 12.0 |v1:8|)) 13.0)))))
 (let ((?x1007 (- 19.0)))
 (let (($x29 (and (<= (+ (+ (* 20.0 |v9:0|) (* ?x838 ?x1053)) (* 2.0 |v5:4|)) ?x1007) $x1323)))
 (let (($x1269 (or $x29 (or (and $x70 (and $x1182 $x1237)) (or (or $x970 $x1376) (and $x106 $x1300))))))
 (let (($x945 (not (= |v0:9_st| (RMk1 val!1094)))))
 (let (($x729 (not (= |v2:7_st| (RMk1 val!1093)))))
 (let (($x655 (not (= |v4:5_st| (RMk1 val!1092)))))
 (let (($x501 (not (= |v6:3_st| (RMk1 val!1091)))))
 (let (($x699 (not (= |v8:1_st| (RMk1 val!1090)))))
 (and $x699 $x501 $x655 $x729 $x945 (or $x1269 (and (or (or $x498 (and $x18 $x416)) (and $x716 $x957)) $x686)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
