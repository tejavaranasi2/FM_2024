; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2568 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2569 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2570 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2571 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2572 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2573 Real) )(let ((?x2509 (rval2 |v6:5_st|)))
 (let ((?x2958 (* 14.0 ?x2509)))
 (let ((?x2716 (+ (+ (* (- 13.0) (rval2 |v4:7_st|)) (* (- 13.0) (rval2 |v4:7_st|))) ?x2958)))
 (let ((?x484 (- 4.0)))
 (let ((?x1845 (- 14.0)))
 (let ((?x2363 (* ?x1845 |v5:6|)))
 (let ((?x1809 (+ (+ (+ (* 16.0 |v9:2|) (* (- 11.0) (rval2 |v8:3_st|))) ?x2363) (* (- 5.0) (rval2 |v0:11_st|)))))
 (let ((?x1595 (* ?x484 |v1:10|)))
 (let (($x519 (<= (+ (+ (+ (* 7.0 |v7:4|) (rval2 |v10:1_st|)) (* 13.0 |v11:0|)) ?x1595) 1.0)))
 (let ((?x1555 (- 16.0)))
 (let ((?x1498 (+ (+ (+ (* (- 9.0) (rval2 |v4:7_st|)) |v5:6|) (* ?x1845 |v9:2|)) (* 9.0 (rval2 |v0:11_st|)))))
 (let (($x124 (and (or (<= ?x1498 ?x1555) $x519) (and (<= ?x1809 ?x484) (<= (+ ?x2716 (* (- 6.0) |v9:2|)) 15.0)))))
 (let ((?x773 (+ (+ (+ (* (- 10.0) (rval2 |v2:9_st|)) ?x2958) (* (- 12.0) |v5:6|)) (* (- 12.0) ?x2509))))
 (let ((?x2837 (* 2.0 |v5:6|)))
 (let ((?x2354 (+ (+ (+ (* 17.0 (rval2 |v2:9_st|)) (rval2 |v0:11_st|)) (* 7.0 ?x2509)) ?x2837)))
 (let ((?x3060 (* 17.0 |v1:10|)))
 (let ((?x331 (* 11.0 |v7:4|)))
 (let ((?x1307 (+ (+ (+ (* 10.0 (rval2 |v2:9_st|)) (* 0.0 (rval2 |v4:7_st|))) ?x331) ?x3060)))
 (let ((?x1265 (- 5.0)))
 (let ((?x1985 (rval2 |v0:11_st|)))
 (let ((?x1606 (* 16.0 ?x1985)))
 (let (($x2579 (<= (+ (+ (+ (* 18.0 |v1:10|) (* (- 6.0) ?x1985)) |v9:2|) ?x1606) ?x1265)))
 (let ((?x1404 (- 2.0)))
 (let ((?x1666 (+ (+ (* 20.0 |v1:10|) (* 11.0 (rval2 |v10:1_st|))) (* (- 8.0) (rval2 |v2:9_st|)))))
 (let (($x1065 (or (or (<= (+ ?x1666 (* (- 10.0) |v11:0|)) ?x1404) $x2579) (or (<= ?x1307 11.0) (<= ?x2354 ?x1555)))))
 (let ((?x425 (+ (+ (* (- 17.0) |v7:4|) (* (- 19.0) (rval2 |v8:3_st|))) (* (- 12.0) (rval2 |v10:1_st|)))))
 (let ((?x2686 (- 18.0)))
 (let ((?x2975 (- 19.0)))
 (let ((?x675 (* ?x2975 ?x2509)))
 (let ((?x673 (* ?x1404 |v1:10|)))
 (let ((?x207 (+ (+ (+ (* 6.0 (rval2 |v8:3_st|)) (* (- 1.0) (rval2 |v2:9_st|))) ?x673) ?x675)))
 (let ((?x2672 (- 1.0)))
 (let ((?x1782 (- 12.0)))
 (let ((?x949 (* ?x1782 |v5:6|)))
 (let ((?x589 (+ (+ (+ (* ?x484 ?x2509) (* 2.0 |v9:2|)) (* ?x1555 (rval2 |v2:9_st|))) ?x949)))
 (let ((?x953 (rval2 |v4:7_st|)))
 (let ((?x2202 (* 6.0 ?x953)))
 (let (($x1762 (<= (+ (+ (+ (* 6.0 |v7:4|) (* 19.0 |v9:2|)) (* 2.0 ?x2509)) ?x2202) 13.0)))
 (let (($x105 (and (or $x1762 (<= ?x589 ?x2672)) (and (<= ?x207 ?x2686) (<= (+ ?x425 (* ?x1555 |v11:0|)) 17.0)))))
 (let ((?x325 (- 9.0)))
 (let ((?x492 (* 10.0 |v7:4|)))
 (let ((?x1899 (+ (+ (+ (* 8.0 (rval2 |v10:1_st|)) (* 14.0 ?x953)) (* 17.0 |v7:4|)) ?x492)))
 (let ((?x680 (+ (+ (+ (* 2.0 |v3:8|) (* ?x1265 |v9:2|)) (* ?x1782 ?x1985)) (* (- 17.0) ?x1985))))
 (let ((?x2955 (+ (+ (* 19.0 |v5:6|) (* (- 7.0) (rval2 |v2:9_st|))) (* (- 7.0) ?x953))))
 (let ((?x2466 (* 20.0 |v1:10|)))
 (let (($x3017 (<= (+ (+ (+ (* ?x2975 |v3:8|) (* (- 8.0) |v9:2|)) (* 4.0 |v5:6|)) ?x2466) ?x2975)))
 (let (($x1681 (and (and $x3017 (<= (+ ?x2955 (* (- 20.0) (rval2 |v2:9_st|))) ?x2686)) (and (<= ?x680 ?x1404) (<= ?x1899 ?x325)))))
 (let ((?x1152 (rval2 |v10:1_st|)))
 (let ((?x1741 (* ?x1265 ?x1152)))
 (let ((?x3023 (+ (+ (+ (* 15.0 (rval2 |v2:9_st|)) (* (- 3.0) |v3:8|)) (* ?x1845 |v1:10|)) ?x1741)))
 (let ((?x908 (- 17.0)))
 (let ((?x1561 (+ (+ (+ (* 16.0 |v5:6|) (* 3.0 |v11:0|)) (* 12.0 |v9:2|)) (* (- 10.0) |v9:2|))))
 (let ((?x23 (* ?x1404 |v11:0|)))
 (let ((?x1445 (+ (+ (+ (* (- 6.0) ?x953) (* 0.0 (rval2 |v8:3_st|))) (* ?x484 |v5:6|)) ?x23)))
 (let ((?x2430 (* 9.0 ?x1152)))
 (let ((?x1124 (+ (+ (+ (* 10.0 |v3:8|) (* ?x1265 (rval2 |v8:3_st|))) (* 0.0 |v3:8|)) ?x2430)))
 (let (($x1387 (and (or (<= ?x1124 0.0) (<= ?x1445 ?x484)) (or (<= ?x1561 ?x908) (<= ?x3023 0.0)))))
 (let ((?x1896 (- 13.0)))
 (let ((?x1898 (* 13.0 |v5:6|)))
 (let ((?x1048 (+ (+ (+ (* 2.0 |v11:0|) (* 12.0 |v9:2|)) (* (- 8.0) |v11:0|)) ?x1898)))
 (let ((?x2578 (+ (+ (+ (* ?x1782 |v9:2|) ?x1595) (* (- 3.0) (rval2 |v8:3_st|))) (* 6.0 (rval2 |v2:9_st|)))))
 (let ((?x271 (- 20.0)))
 (let ((?x703 (* ?x271 ?x953)))
 (let (($x3091 (<= (+ (+ (+ (* ?x484 ?x1985) (* ?x1265 |v9:2|)) (* 19.0 |v1:10|)) ?x703) ?x2686)))
 (let ((?x2946 (+ (+ (+ (* ?x908 (rval2 |v2:9_st|)) (* 10.0 |v11:0|)) (* ?x908 |v11:0|)) (* ?x1896 |v5:6|))))
 (let (($x2782 (or (or (<= ?x2946 8.0) $x3091) (and (<= ?x2578 11.0) (<= ?x1048 ?x1896)))))
 (let ((?x1068 (* 8.0 ?x1985)))
 (let (($x863 (<= (+ (+ (+ (* 12.0 |v9:2|) (* 0.0 |v1:10|)) (* 12.0 ?x953)) ?x1068) 4.0)))
 (let ((?x2241 (+ (+ (+ (* (- 10.0) ?x953) (* 11.0 (rval2 |v2:9_st|))) (* ?x1896 |v9:2|)) (* 8.0 ?x953))))
 (let ((?x219 (+ (+ (+ (* 16.0 (rval2 |v2:9_st|)) (* ?x1845 |v9:2|)) (* (- 7.0) |v9:2|)) (* (- 8.0) ?x1985))))
 (let (($x132 (or (<= (+ (+ (+ ?x703 ?x3060) (* ?x1896 |v9:2|)) (* 6.0 |v9:2|)) 5.0) (<= ?x219 0.0))))
 (let (($x568 (and (or (or $x132 (and (<= ?x2241 11.0) $x863)) $x2782) (or $x1387 $x1681))))
 (let ((?x2622 (* ?x1896 |v9:2|)))
 (let (($x358 (<= (+ (+ (+ (* 18.0 |v9:2|) (* ?x2975 |v5:6|)) (* 17.0 ?x2509)) ?x2622) ?x1265)))
 (let ((?x1568 (+ (+ (+ (* 12.0 |v9:2|) (* (- 3.0) |v7:4|)) (* ?x2672 ?x1985)) (* (- 3.0) |v1:10|))))
 (let ((?x1104 (* 8.0 |v3:8|)))
 (let (($x2559 (<= (+ (+ (+ (* ?x1555 |v5:6|) (* 2.0 |v9:2|)) (* 0.0 |v5:6|)) ?x1104) ?x2672)))
 (let ((?x1100 (* 10.0 ?x1985)))
 (let ((?x721 (+ (+ (+ (* ?x271 ?x1152) (* 13.0 (rval2 |v2:9_st|))) (* ?x1555 (rval2 |v8:3_st|))) ?x1100)))
 (let ((?x2205 (- 6.0)))
 (let ((?x581 (rval2 |v8:3_st|)))
 (let ((?x2062 (* 3.0 ?x581)))
 (let (($x1744 (or (<= (+ (+ (+ (* (- 3.0) ?x1985) ?x675) (* ?x271 ?x2509)) ?x2062) ?x2205) (<= ?x721 10.0))))
 (let ((?x2905 (- 15.0)))
 (let ((?x1541 (+ (+ (+ (* ?x1845 ?x581) (* ?x325 |v1:10|)) (* 20.0 |v5:6|)) (* 2.0 ?x581))))
 (let ((?x1892 (+ (+ (+ (* 10.0 (rval2 |v2:9_st|)) (* ?x484 |v3:8|)) ?x673) (* ?x325 (rval2 |v2:9_st|)))))
 (let ((?x329 (* 8.0 ?x2509)))
 (let (($x1258 (<= (+ (+ (+ (* ?x2672 |v7:4|) (* ?x908 ?x953)) (* 10.0 ?x581)) ?x329) 19.0)))
 (let ((?x1225 (+ (+ (+ (* 11.0 (rval2 |v2:9_st|)) (* (- 8.0) |v7:4|)) (* 12.0 |v7:4|)) ?x2202)))
 (let (($x2904 (and (and (<= ?x1225 15.0) $x1258) (or (<= ?x1892 1.0) (<= ?x1541 ?x2905)))))
 (let ((?x1279 (+ (+ (+ (* 3.0 ?x1985) (* 7.0 (rval2 |v2:9_st|))) (* 9.0 |v1:10|)) (* ?x325 ?x581))))
 (let (($x2309 (<= (+ (+ (+ (* ?x2905 ?x2509) (* ?x1555 ?x581)) (* 6.0 |v5:6|)) ?x331) 11.0)))
 (let ((?x935 (* 9.0 |v3:8|)))
 (let (($x2318 (<= (+ (+ (+ (* 7.0 |v11:0|) (* ?x908 |v11:0|)) (* 10.0 ?x581)) ?x935) 17.0)))
 (let (($x1034 (<= (+ (+ (+ ?x935 (* ?x2905 ?x2509)) (* ?x2205 ?x1985)) (* 11.0 |v11:0|)) 3.0)))
 (let ((?x504 (+ (+ (+ (* ?x2686 |v1:10|) ?x673) (* (- 7.0) ?x2509)) (* 9.0 (rval2 |v2:9_st|)))))
 (let ((?x1726 (+ (+ (+ (* (- 7.0) |v11:0|) (* 15.0 ?x1985)) (* (- 7.0) |v1:10|)) (* 12.0 ?x1985))))
 (let (($x1532 (<= (+ (+ (+ (* (- 10.0) |v1:10|) ?x1741) ?x23) (* 16.0 ?x581)) 14.0)))
 (let ((?x2368 (+ (+ (+ (* ?x2205 |v1:10|) (* ?x1555 ?x1985)) (* ?x484 |v5:6|)) (* ?x1404 ?x2509))))
 (let (($x208 (and (and (or (<= ?x2368 ?x2672) $x1532) (or (<= ?x1726 ?x271) (<= ?x504 10.0))) (or (and $x1034 $x2318) (or $x2309 (<= ?x1279 ?x2672))))))
 (let (($x775 (or (or (or $x208 (or $x2904 (and $x1744 (or $x2559 (<= ?x1568 ?x271))))) $x358) (and $x568 (or (and $x105 $x1065) (and (<= ?x773 3.0) $x124))))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2573)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2572)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2571)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2570)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2569)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2568)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 $x775)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
