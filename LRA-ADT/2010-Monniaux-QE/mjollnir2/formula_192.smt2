; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!1764 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!1765 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!1766 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!1767 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!1768 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!1769 Real) )(let ((?x353 (+ (+ (+ (* 3.0 (rval2 |v6:5_st|)) (* (- 18.0) |v5:6|)) (* 3.0 |v11:0|)) (* (- 16.0) (rval2 |v2:9_st|)))))
 (let ((?x314 (- 17.0)))
 (let ((?x1424 (- 9.0)))
 (let ((?x2683 (* ?x1424 |v1:10|)))
 (let ((?x1535 (+ (+ (* 3.0 (rval2 |v4:7_st|)) (* (- 2.0) |v3:8|)) (* (- 19.0) |v5:6|))))
 (let ((?x1331 (- 18.0)))
 (let ((?x540 (rval2 |v10:1_st|)))
 (let ((?x72 (* 20.0 ?x540)))
 (let ((?x954 (* 19.0 |v1:10|)))
 (let ((?x1117 (+ (+ (+ (* (- 1.0) (rval2 |v4:7_st|)) (* 14.0 (rval2 |v0:11_st|))) ?x954) ?x72)))
 (let ((?x960 (+ (+ (+ (* 6.0 |v7:4|) (* 13.0 |v1:10|)) (* 2.0 (rval2 |v8:3_st|))) (* (- 1.0) |v5:6|))))
 (let ((?x801 (- 5.0)))
 (let ((?x2092 (+ (+ (* 7.0 (rval2 |v6:5_st|)) (* 20.0 (rval2 |v8:3_st|))) (* (- 4.0) |v11:0|))))
 (let (($x2429 (or (and (<= (+ ?x2092 (* (- 14.0) ?x540)) ?x801) (<= ?x960 ?x1331)) (or (<= ?x1117 ?x1331) (<= (+ ?x1535 ?x2683) ?x314)))))
 (let ((?x762 (+ (+ (+ (* (- 6.0) |v9:2|) (* (- 14.0) |v1:10|)) (* 3.0 |v7:4|)) (* 12.0 |v3:8|))))
 (let ((?x145 (+ (+ (+ (* 18.0 |v5:6|) (* ?x801 |v5:6|)) (* (- 11.0) |v9:2|)) (* (- 12.0) (rval2 |v2:9_st|)))))
 (let ((?x1253 (* 17.0 |v7:4|)))
 (let ((?x889 (+ (+ (+ (* 14.0 |v9:2|) (* ?x1424 (rval2 |v4:7_st|))) (* (- 3.0) |v3:8|)) ?x1253)))
 (let (($x1162 (or (or (or (<= ?x889 7.0) (<= ?x145 8.0)) (<= ?x762 18.0)) $x2429)))
 (let ((?x1419 (- 6.0)))
 (let ((?x967 (rval2 |v8:3_st|)))
 (let ((?x1090 (- 13.0)))
 (let ((?x2121 (* ?x1090 ?x967)))
 (let ((?x410 (+ (+ (+ (* 8.0 (rval2 |v4:7_st|)) (* 17.0 |v5:6|)) (* ?x314 ?x540)) ?x2121)))
 (let (($x2246 (<= (+ (+ (+ ?x2121 ?x2683) (* 6.0 |v3:8|)) (* (- 12.0) (rval2 |v4:7_st|))) 11.0)))
 (let ((?x1580 (+ (+ (+ (* 15.0 |v3:8|) (* 0.0 (rval2 |v4:7_st|))) (* 4.0 |v7:4|)) (* (- 15.0) |v9:2|))))
 (let ((?x2941 (+ (+ (+ (* 12.0 ?x967) (* 20.0 |v1:10|)) (* 0.0 |v3:8|)) (* (- 20.0) (rval2 |v2:9_st|)))))
 (let (($x2319 (or (or (<= ?x2941 15.0) (<= ?x1580 16.0)) (and $x2246 (<= ?x410 ?x1419)))))
 (let ((?x2323 (+ (+ (+ (* 20.0 ?x967) (* (- 1.0) |v7:4|)) (* (- 14.0) |v11:0|)) (* 19.0 (rval2 |v4:7_st|)))))
 (let ((?x2006 (+ (+ (+ |v7:4| (* 15.0 |v9:2|)) (* (- 19.0) |v9:2|)) (* (- 7.0) |v7:4|))))
 (let ((?x2504 (- 16.0)))
 (let ((?x1662 (- 14.0)))
 (let ((?x230 (* ?x1662 |v11:0|)))
 (let (($x1768 (<= (+ (+ (+ (* (- 20.0) |v11:0|) (* ?x2504 |v9:2|)) (* ?x1419 |v7:4|)) ?x230) ?x2504)))
 (let ((?x818 (- 10.0)))
 (let ((?x388 (- 12.0)))
 (let ((?x2421 (* ?x388 |v1:10|)))
 (let ((?x2470 (+ (+ (+ (* (- 8.0) |v5:6|) (* (- 11.0) |v3:8|)) ?x2421) (* 4.0 |v11:0|))))
 (let ((?x1968 (+ (+ (* 10.0 (rval2 |v0:11_st|)) (* 15.0 (rval2 |v2:9_st|))) (* ?x1090 ?x540))))
 (let ((?x1724 (+ (+ (+ (* 0.0 (rval2 |v4:7_st|)) (* 12.0 |v9:2|)) (* (- 7.0) |v3:8|)) |v5:6|)))
 (let (($x322 (and (or (<= ?x1724 16.0) (<= (+ ?x1968 (* (- 2.0) |v7:4|)) 7.0)) (or (<= ?x2470 ?x818) $x1768))))
 (let (($x2925 (and (and (or $x322 (<= ?x2006 11.0)) (or (<= ?x2323 17.0) $x2319)) (and $x1162 (<= ?x353 1.0)))))
 (let ((?x131 (+ (+ (+ (* ?x2504 |v1:10|) (* 16.0 (rval2 |v4:7_st|))) (* 20.0 |v9:2|)) (* ?x388 |v7:4|))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!1769)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!1768)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!1767)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!1766)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!1765)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!1764)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (and (<= ?x131 14.0) $x2925))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
