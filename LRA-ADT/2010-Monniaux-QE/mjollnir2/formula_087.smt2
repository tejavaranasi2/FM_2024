; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2046 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2047 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2048 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2049 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2050 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2051 Real) )(let ((?x1669 (- 14.0)))
 (let ((?x73 (* ?x1669 |v11:0|)))
 (let ((?x849 (+ (+ (* 2.0 (rval2 |v4:7_st|)) (* 17.0 (rval2 |v8:3_st|))) (* (- 4.0) (rval2 |v8:3_st|)))))
 (let ((?x1729 (* 10.0 |v9:2|)))
 (let ((?x2643 (+ (+ (+ (* (- 18.0) |v9:2|) (* (- 3.0) (rval2 |v0:11_st|))) ?x1729) (* (- 19.0) (rval2 |v0:11_st|)))))
 (let ((?x193 (- 11.0)))
 (let ((?x660 (* 15.0 |v7:4|)))
 (let (($x208 (<= (+ (+ (+ (* 5.0 |v7:4|) (* 16.0 |v3:8|)) (* 10.0 |v5:6|)) ?x660) ?x193)))
 (let ((?x2859 (rval2 |v10:1_st|)))
 (let ((?x2788 (* 6.0 ?x2859)))
 (let ((?x472 (+ (+ (+ (* (- 13.0) |v3:8|) (* (- 12.0) |v11:0|)) (* 13.0 |v3:8|)) ?x2788)))
 (let ((?x1356 (rval2 |v0:11_st|)))
 (let ((?x1855 (- 2.0)))
 (let ((?x2781 (* ?x1855 ?x1356)))
 (let ((?x616 (+ (+ (+ (* (- 12.0) ?x1356) (* 0.0 |v3:8|)) (* (- 13.0) |v7:4|)) ?x2781)))
 (let (($x2259 (and (or (<= ?x616 16.0) (<= ?x472 1.0)) (or $x208 (<= ?x2643 12.0)))))
 (let ((?x2342 (- 15.0)))
 (let ((?x124 (* ?x2342 |v11:0|)))
 (let ((?x158 (+ (+ (+ (* 12.0 |v7:4|) (* (- 18.0) |v1:10|)) (* 12.0 |v5:6|)) ?x124)))
 (let ((?x908 (rval2 |v8:3_st|)))
 (let ((?x1478 (- 10.0)))
 (let ((?x883 (* ?x1478 ?x908)))
 (let ((?x2853 (+ (+ (+ (* (- 18.0) (rval2 |v6:5_st|)) (* (- 16.0) |v3:8|)) ?x883) (* (- 19.0) (rval2 |v2:9_st|)))))
 (let ((?x1007 (+ (+ (+ (* ?x1855 (rval2 |v4:7_st|)) (* 13.0 |v5:6|)) (* (- 6.0) ?x2859)) (* ?x2342 |v3:8|))))
 (let ((?x2126 (rval2 |v2:9_st|)))
 (let ((?x478 (- 16.0)))
 (let ((?x2231 (* ?x478 ?x2126)))
 (let ((?x2955 (+ (+ (+ (* (- 12.0) ?x1356) (* 20.0 ?x908)) (* 19.0 (rval2 |v4:7_st|))) ?x2231)))
 (let ((?x1381 (- 5.0)))
 (let ((?x2246 (+ (+ (+ (* ?x2342 (rval2 |v4:7_st|)) (* (- 12.0) ?x908)) (* ?x1478 |v1:10|)) (* 18.0 ?x2859))))
 (let ((?x228 (- 8.0)))
 (let ((?x1057 (rval2 |v4:7_st|)))
 (let ((?x1116 (* 6.0 ?x1057)))
 (let (($x2082 (<= (+ (+ (+ (* (- 1.0) |v1:10|) (* ?x193 ?x1356)) (* 16.0 |v1:10|)) ?x1116) ?x228)))
 (let ((?x1964 (+ (+ (+ (* 12.0 |v7:4|) (* (- 18.0) ?x2126)) (* (- 17.0) |v3:8|)) (* (- 6.0) (rval2 |v6:5_st|)))))
 (let (($x1893 (or (and (or (<= ?x1964 ?x1669) $x2082) (and (<= ?x2246 ?x1381) (<= ?x2955 ?x2342))) (and (and (<= ?x1007 ?x193) (<= ?x2853 8.0)) (<= ?x158 0.0)))))
 (let ((?x2116 (* 20.0 |v1:10|)))
 (let ((?x2743 (+ (+ (+ (* 10.0 |v7:4|) (* (- 12.0) |v9:2|)) (* 3.0 ?x908)) ?x2116)))
 (let ((?x284 (* 0.0 ?x2126)))
 (let (($x2811 (<= (+ (+ (+ (* ?x1478 |v11:0|) (* 17.0 |v5:6|)) (* (- 6.0) ?x2859)) ?x284) ?x193)))
 (let (($x856 (<= (+ (+ (+ (* 17.0 ?x1057) (* 7.0 ?x2126)) ?x908) (* 15.0 ?x2859)) 6.0)))
 (let ((?x592 (+ (+ (+ (* ?x193 |v11:0|) (* 0.0 ?x1057)) (* 12.0 ?x1057)) (* ?x228 |v11:0|))))
 (let ((?x2217 (* 16.0 ?x2126)))
 (let (($x2972 (<= (+ (+ (+ (* ?x1381 ?x1057) (* ?x193 |v11:0|)) (* 5.0 |v5:6|)) ?x2217) 11.0)))
 (let (($x3027 (<= (+ (+ (+ ?x883 (* (- 17.0) ?x1057)) (* ?x2342 |v9:2|)) (* ?x193 ?x2859)) 1.0)))
 (let ((?x1504 (* 2.0 ?x1356)))
 (let ((?x946 (+ (+ (+ (* 20.0 |v3:8|) (* 7.0 (rval2 |v6:5_st|))) (* 8.0 ?x1057)) ?x1504)))
 (let (($x1788 (<= (+ (+ (+ ?x1729 ?x73) (* (- 9.0) |v7:4|)) (* (- 3.0) ?x2859)) 6.0)))
 (let (($x872 (or (and (and $x1788 (<= ?x946 ?x1669)) (and $x3027 $x2972)) (or (or (<= ?x592 ?x478) $x856) (or $x2811 (<= ?x2743 14.0))))))
 (let (($x2577 (<= (+ (+ (+ (* 12.0 |v5:6|) ?x284) (* ?x1478 |v9:2|)) (* 20.0 |v3:8|)) 20.0)))
 (let ((?x1241 (* 0.0 |v1:10|)))
 (let ((?x2515 (+ (+ (+ (* 2.0 ?x2126) (* 13.0 |v9:2|)) (* (- 9.0) ?x908)) ?x1241)))
 (let ((?x151 (- 7.0)))
 (let ((?x2817 (* 0.0 |v7:4|)))
 (let (($x811 (and (<= (+ (+ (+ (* 16.0 |v3:8|) (* ?x478 |v5:6|)) ?x2817) ?x2817) ?x151) (<= ?x2515 18.0))))
 (let ((?x198 (+ (+ (+ (* 15.0 ?x1356) (* (- 9.0) |v11:0|)) (* (- 3.0) |v5:6|)) (* ?x1381 |v9:2|))))
 (let ((?x1523 (+ (+ (+ (* (- 13.0) |v7:4|) (* 2.0 ?x2859)) (* ?x478 |v7:4|)) (* ?x1669 ?x908))))
 (let ((?x1200 (+ (+ (+ (* 0.0 |v5:6|) (* (- 9.0) |v9:2|)) (* (- 13.0) ?x1356)) (* 17.0 |v7:4|))))
 (let ((?x2137 (- 18.0)))
 (let ((?x2048 (* 7.0 |v1:10|)))
 (let (($x743 (<= (+ (+ (+ (* (- 12.0) |v11:0|) (* 14.0 |v9:2|)) (* ?x1478 ?x2126)) ?x2048) ?x2137)))
 (let (($x1016 (or (and $x743 (<= ?x1200 0.0)) (or (<= ?x1523 18.0) (<= ?x198 2.0)))))
 (let (($x901 (and (and (or $x1016 (and $x811 $x2577)) $x872) (and $x1893 (and $x2259 (<= (+ ?x849 ?x73) 4.0))))))
 (let ((?x2079 (rval2 |v6:5_st|)))
 (let ((?x404 (* 3.0 ?x2079)))
 (let ((?x1411 (+ (+ (+ (* 18.0 ?x1057) (* (- 3.0) ?x2079)) (* 4.0 ?x2079)) ?x404)))
 (let ((?x1206 (* 3.0 ?x1057)))
 (let (($x60 (<= (+ (+ (+ (* 18.0 ?x2126) (* 5.0 |v3:8|)) (* 9.0 |v7:4|)) ?x1206) ?x151)))
 (let ((?x2542 (+ (+ (+ (* ?x2342 ?x1356) (* ?x2137 |v5:6|)) (* (- 20.0) ?x2126)) (* ?x1855 |v1:10|))))
 (let (($x2591 (and (<= ?x2542 13.0) (<= (+ (+ (+ (* 19.0 ?x1356) (* ?x193 ?x2079)) ?x1356) ?x2781) 8.0))))
 (let ((?x606 (* 15.0 |v9:2|)))
 (let (($x1043 (<= (+ (+ (+ (* ?x193 ?x2859) (* 6.0 ?x2126)) (* (- 1.0) ?x1057)) ?x606) 16.0)))
 (let (($x1384 (<= (+ (+ (+ (* ?x1669 ?x1057) (* 10.0 |v3:8|)) (* 12.0 ?x1356)) ?x404) 11.0)))
 (let ((?x558 (- 12.0)))
 (let ((?x1808 (* 2.0 ?x2126)))
 (let (($x2106 (<= (+ (+ (+ (* 10.0 |v3:8|) (* 16.0 |v7:4|)) (* 8.0 |v9:2|)) ?x1808) ?x558)))
 (let ((?x1426 (* 2.0 |v7:4|)))
 (let (($x2460 (<= (+ (+ (+ (* 7.0 |v9:2|) (* ?x1855 |v11:0|)) (* 14.0 ?x2126)) ?x1426) 19.0)))
 (let ((?x2969 (- 20.0)))
 (let ((?x878 (+ (+ (+ (* 5.0 |v7:4|) (* 10.0 |v11:0|)) (* ?x558 |v1:10|)) (* ?x193 ?x2126))))
 (let ((?x1365 (+ (+ (+ (* 19.0 ?x1356) (* (- 4.0) |v9:2|)) (* 4.0 ?x2859)) (* 0.0 ?x2859))))
 (let ((?x330 (- 3.0)))
 (let ((?x1170 (* ?x193 |v11:0|)))
 (let (($x1429 (<= (+ (+ (+ (* (- 19.0) ?x2859) (* 6.0 |v11:0|)) (* ?x330 ?x908)) ?x1170) ?x330)))
 (let ((?x1264 (+ (+ (+ (* 20.0 ?x2126) (* 15.0 |v11:0|)) (* 18.0 ?x2079)) (* ?x1478 ?x2079))))
 (let ((?x195 (- 4.0)))
 (let ((?x1933 (+ (+ (+ (* ?x1855 |v7:4|) (* (- 17.0) ?x2079)) (* (- 19.0) |v5:6|)) (* (- 6.0) ?x908))))
 (let (($x384 (and (or (<= ?x1933 ?x195) (<= ?x1264 0.0)) (or $x1429 (<= ?x1365 15.0)))))
 (let (($x540 (or (and $x384 (and (or (<= ?x878 ?x2969) $x2460) (and $x2106 $x1384))) (and $x1043 (and $x2591 (and $x60 (<= ?x1411 8.0)))))))
 (let ((?x1153 (* 17.0 |v5:6|)))
 (let (($x2456 (<= (+ (+ (+ (* 12.0 ?x908) (* 9.0 ?x908)) (* 3.0 ?x2126)) ?x1153) 3.0)))
 (let ((?x1052 (* 9.0 |v9:2|)))
 (let (($x2860 (<= (+ (+ (+ (* (- 13.0) |v7:4|) (* ?x478 ?x2079)) (* ?x558 ?x2859)) ?x1052) ?x478)))
 (let ((?x2308 (- 17.0)))
 (let (($x1404 (<= (+ (+ (+ (* ?x1855 ?x2859) (* ?x2137 |v1:10|)) (* (- 19.0) ?x1057)) ?x124) ?x2308)))
 (let (($x2582 (and $x1404 (<= (+ (+ (+ ?x2817 ?x1356) (* 9.0 |v11:0|)) (* 9.0 |v7:4|)) 8.0))))
 (let (($x2958 (<= (+ (+ (+ (* 9.0 |v1:10|) ?x2217) (* ?x228 |v3:8|)) (* 20.0 ?x2079)) ?x2342)))
 (let (($x780 (<= (+ (+ (+ (* 11.0 ?x2859) (* 4.0 ?x1057)) (* ?x193 |v3:8|)) ?x2231) 5.0)))
 (let ((?x2993 (* 17.0 |v3:8|)))
 (let (($x2380 (<= (+ (+ (+ (* ?x2969 |v5:6|) (* ?x478 ?x908)) (* (- 9.0) ?x1057)) ?x2993) 2.0)))
 (let ((?x2874 (- 13.0)))
 (let ((?x2037 (+ (+ (+ (* ?x228 ?x1356) (* ?x2342 ?x2079)) (* 11.0 |v3:8|)) (* ?x1381 |v11:0|))))
 (let (($x1569 (and (<= ?x2037 ?x2874) (or (or $x2380 (or $x780 $x2958)) (or $x2582 (or $x2860 $x2456))))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2051)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2050)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2049)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2048)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2047)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2046)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (and (and $x1569 $x540) $x901))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
