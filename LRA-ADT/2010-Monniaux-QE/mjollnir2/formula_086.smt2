; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2352 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2353 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2354 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2355 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2356 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2357 Real) )(let ((?x2159 (- 3.0)))
 (let ((?x1313 (* ?x2159 |v3:8|)))
 (let ((?x2856 (+ (+ (+ (* 6.0 (rval2 |v6:5_st|)) (* 9.0 (rval2 |v6:5_st|))) ?x1313) (* 15.0 (rval2 |v6:5_st|)))))
 (let ((?x1949 (rval2 |v8:3_st|)))
 (let ((?x1187 (- 13.0)))
 (let ((?x75 (* ?x1187 ?x1949)))
 (let ((?x624 (+ (+ (+ (* (- 11.0) (rval2 |v10:1_st|)) (* 13.0 |v3:8|)) ?x75) (* (- 9.0) |v7:4|))))
 (let ((?x2024 (rval2 |v4:7_st|)))
 (let ((?x2241 (* 19.0 ?x2024)))
 (let ((?x265 (+ (+ (* 2.0 (rval2 |v0:11_st|)) (* (- 11.0) (rval2 |v2:9_st|))) (* ?x1187 |v1:10|))))
 (let ((?x1516 (* 12.0 |v11:0|)))
 (let (($x1761 (<= (+ (+ (+ ?x1516 (* 11.0 |v1:10|)) (* (- 8.0) ?x1949)) ?x1516) 15.0)))
 (let (($x2561 (or (and $x1761 (<= (+ ?x265 ?x2241) 4.0)) (and (<= ?x624 10.0) (<= ?x2856 8.0)))))
 (let ((?x2974 (* ?x1187 |v3:8|)))
 (let ((?x333 (+ (+ (+ (* 8.0 (rval2 |v2:9_st|)) (* 12.0 |v3:8|)) (* 18.0 ?x1949)) ?x2974)))
 (let ((?x375 (- 18.0)))
 (let ((?x1781 (* 7.0 |v1:10|)))
 (let ((?x2842 (+ (+ (* (- 5.0) |v11:0|) (* 6.0 ?x1949)) (* (- 10.0) (rval2 |v2:9_st|)))))
 (let ((?x93 (rval2 |v10:1_st|)))
 (let ((?x2009 (- 1.0)))
 (let ((?x2619 (* ?x2009 ?x93)))
 (let ((?x1673 (+ (+ (+ (* 2.0 (rval2 |v6:5_st|)) (* 18.0 ?x93)) (* 6.0 ?x93)) ?x2619)))
 (let ((?x1226 (+ (+ (* 8.0 ?x2024) (* (- 6.0) |v11:0|)) (* (- 14.0) (rval2 |v6:5_st|)))))
 (let (($x1918 (or (and (<= (+ ?x1226 (* (- 5.0) ?x2024)) 3.0) (<= ?x1673 5.0)) (and (<= (+ ?x2842 ?x1781) ?x375) (<= ?x333 5.0)))))
 (let ((?x2206 (- 20.0)))
 (let ((?x870 (+ (+ (+ (* 10.0 |v11:0|) (* ?x1187 |v5:6|)) (* 12.0 (rval2 |v2:9_st|))) (* 6.0 |v9:2|))))
 (let ((?x866 (- 6.0)))
 (let ((?x295 (rval2 |v0:11_st|)))
 (let ((?x1343 (* 17.0 ?x295)))
 (let (($x2598 (<= (+ (+ (+ (* 19.0 ?x1949) (* ?x2009 |v3:8|)) (* 19.0 |v9:2|)) ?x1343) ?x866)))
 (let ((?x2704 (- 16.0)))
 (let ((?x2975 (+ (+ (* 14.0 (rval2 |v2:9_st|)) (* (- 14.0) |v9:2|)) (* (- 17.0) |v3:8|))))
 (let ((?x1144 (+ (+ (+ (* ?x866 ?x2024) (* 14.0 (rval2 |v2:9_st|))) (* ?x2206 ?x295)) (* (- 12.0) |v3:8|))))
 (let (($x557 (and (or (<= ?x1144 19.0) (<= (+ ?x2975 (* (- 15.0) |v1:10|)) ?x2704)) (or $x2598 (<= ?x870 ?x2206)))))
 (let ((?x1027 (+ (+ (+ (* 11.0 |v3:8|) (* ?x2206 ?x295)) (* 14.0 ?x2024)) (* (- 11.0) |v9:2|))))
 (let ((?x2214 (* 19.0 |v7:4|)))
 (let ((?x2996 (+ (+ (+ (* 17.0 ?x93) (* (- 14.0) ?x2024)) (* (- 19.0) |v3:8|)) ?x2214)))
 (let ((?x1039 (* 9.0 |v3:8|)))
 (let (($x1406 (<= (+ (+ (+ (* 5.0 ?x295) (* ?x2159 ?x2024)) (* 8.0 ?x93)) ?x1039) 13.0)))
 (let ((?x1993 (+ (+ (+ (* ?x1187 ?x295) (* 15.0 ?x93)) (* ?x2206 |v9:2|)) (* (- 7.0) ?x1949))))
 (let (($x1522 (or (or (<= ?x1993 17.0) $x1406) (and (<= ?x2996 10.0) (<= ?x1027 12.0)))))
 (let ((?x276 (* 7.0 ?x295)))
 (let ((?x1436 (+ (+ (+ (* ?x375 ?x1949) (* ?x375 |v1:10|)) (* 17.0 (rval2 |v2:9_st|))) ?x276)))
 (let ((?x1752 (* 12.0 ?x93)))
 (let (($x1289 (<= (+ (+ (+ (* 16.0 |v3:8|) (* ?x2009 |v3:8|)) (* 18.0 |v3:8|)) ?x1752) 6.0)))
 (let ((?x2205 (* ?x2009 ?x295)))
 (let (($x346 (<= (+ (+ (+ (* ?x2159 (rval2 |v2:9_st|)) (* (- 9.0) ?x2024)) ?x2619) ?x2205) 2.0)))
 (let ((?x1217 (- 14.0)))
 (let ((?x1542 (* ?x1217 |v9:2|)))
 (let (($x2621 (<= (+ (+ (+ (* ?x2206 |v3:8|) (* ?x1217 ?x295)) (* 9.0 |v9:2|)) ?x1542) 4.0)))
 (let ((?x1332 (* 18.0 ?x93)))
 (let ((?x233 (+ (+ (* 2.0 ?x93) (* 17.0 (rval2 |v6:5_st|))) (* (- 8.0) (rval2 |v6:5_st|)))))
 (let ((?x2725 (+ (+ (+ (* (- 11.0) |v5:6|) (* (- 7.0) |v7:4|)) (* ?x2009 |v3:8|)) (* ?x1187 (rval2 |v6:5_st|)))))
 (let ((?x2562 (* 14.0 ?x93)))
 (let (($x1674 (<= (+ (+ (+ (* 13.0 (rval2 |v2:9_st|)) (* (- 15.0) |v3:8|)) ?x2619) ?x2562) ?x2009)))
 (let ((?x2844 (* ?x2159 ?x2024)))
 (let ((?x2126 (+ (+ (+ (* 12.0 |v9:2|) (* (- 7.0) ?x2024)) (* 3.0 (rval2 |v6:5_st|))) ?x2844)))
 (let (($x2868 (or (and (<= ?x2126 16.0) $x1674) (or (<= ?x2725 ?x1217) (<= (+ ?x233 ?x1332) ?x2159)))))
 (let ((?x2794 (+ (+ (* 10.0 (rval2 |v2:9_st|)) (* (- 19.0) ?x295)) (* (- 2.0) |v11:0|))))
 (let ((?x1012 (+ (+ (+ (* ?x2206 ?x295) (* (- 10.0) ?x295)) (* (- 19.0) ?x2024)) ?x2562)))
 (let ((?x2848 (- 17.0)))
 (let ((?x155 (* ?x1187 ?x295)))
 (let (($x2102 (<= (+ (+ (+ ?x2205 (* (- 11.0) |v11:0|)) (* 0.0 (rval2 |v6:5_st|))) ?x155) ?x2848)))
 (let ((?x2026 (+ (+ (+ (* 12.0 |v9:2|) ?x1781) (* 10.0 |v11:0|)) (* (- 2.0) (rval2 |v6:5_st|)))))
 (let (($x776 (or (and (<= ?x2026 ?x2704) $x2102) (and (<= ?x1012 9.0) (<= (+ ?x2794 (* 5.0 ?x2024)) 19.0)))))
 (let (($x2759 (<= (+ (+ (+ (* ?x2206 |v5:6|) ?x276) (* 16.0 |v11:0|)) (* ?x2159 ?x93)) ?x375)))
 (let ((?x393 (+ (+ (+ (* (- 10.0) (rval2 |v6:5_st|)) (* ?x1187 |v7:4|)) ?x295) (* 7.0 (rval2 |v6:5_st|)))))
 (let ((?x2927 (- 19.0)))
 (let (($x2020 (<= (+ (+ (+ ?x75 (* ?x2848 |v9:2|)) (* ?x2927 |v11:0|)) (* 17.0 ?x2024)) ?x2927)))
 (let (($x228 (or (and (and $x2020 (and (<= ?x393 ?x2704) $x2759)) $x776) (or $x2868 (and (or $x2621 $x346) (and $x1289 (<= ?x1436 10.0)))))))
 (let ((?x660 (- 10.0)))
 (let ((?x1995 (* 2.0 ?x295)))
 (let (($x25 (<= (+ (+ (+ (* 20.0 ?x295) (* (- 12.0) |v9:2|)) (* ?x2159 |v5:6|)) ?x1995) ?x660)))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2357)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2356)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2355)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2354)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2353)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2352)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (and $x25 (and $x228 (or (and $x1522 $x557) (or $x1918 $x2561)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
