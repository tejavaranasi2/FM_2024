; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2904 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2905 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2906 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2907 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2908 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2909 Real) )(let ((?x845 (- 2.0)))
 (let ((?x1222 (+ (+ (* 15.0 (rval2 |v2:9_st|)) (* ?x845 (rval2 |v2:9_st|))) (* (- 9.0) |v1:10|))))
 (let ((?x445 (- 13.0)))
 (let ((?x2803 (+ (+ (+ (* (- 17.0) |v11:0|) (* 5.0 |v1:10|)) (* 19.0 |v1:10|)) |v9:2|)))
 (let ((?x2084 (- 1.0)))
 (let ((?x1592 (rval2 |v2:9_st|)))
 (let ((?x858 (* 19.0 ?x1592)))
 (let ((?x2742 (* 14.0 |v11:0|)))
 (let ((?x2420 (+ (+ (+ (* 7.0 (rval2 |v6:5_st|)) (* 5.0 (rval2 |v10:1_st|))) ?x2742) ?x858)))
 (let ((?x2542 (rval2 |v10:1_st|)))
 (let ((?x1177 (- 12.0)))
 (let ((?x484 (* ?x1177 ?x2542)))
 (let ((?x913 (+ (+ (+ (* 11.0 |v7:4|) (* 14.0 |v7:4|)) (* (- 19.0) (rval2 |v0:11_st|))) ?x484)))
 (let ((?x251 (+ (+ (* (- 8.0) ?x1592) (* (- 18.0) |v1:10|)) (* (- 19.0) |v9:2|))))
 (let (($x2078 (and (<= (+ ?x251 (* (- 9.0) (rval2 |v4:7_st|))) 5.0) (<= ?x913 4.0))))
 (let ((?x2115 (- 8.0)))
 (let ((?x723 (+ (+ (+ (* 6.0 (rval2 |v0:11_st|)) (rval2 |v4:7_st|)) (* 20.0 (rval2 |v6:5_st|))) (* (- 6.0) (rval2 |v6:5_st|)))))
 (let ((?x426 (+ (+ (+ (* 12.0 (rval2 |v4:7_st|)) ?x1592) (* (- 5.0) (rval2 |v8:3_st|))) (* 12.0 (rval2 |v8:3_st|)))))
 (let ((?x982 (+ (+ (+ (* (- 14.0) |v1:10|) (* 0.0 (rval2 |v0:11_st|))) (* 13.0 ?x1592)) (* (- 4.0) (rval2 |v8:3_st|)))))
 (let ((?x2265 (+ (+ (+ (* (- 17.0) |v3:8|) (* (- 9.0) |v11:0|)) (* 13.0 |v1:10|)) (* (- 4.0) ?x1592))))
 (let (($x563 (or (and (<= ?x2265 0.0) (<= ?x982 18.0)) (or (<= ?x426 3.0) (<= ?x723 ?x2115)))))
 (let (($x450 (or (and $x563 (or $x2078 (and (<= ?x2420 ?x2084) (<= ?x2803 ?x445)))) (<= (+ ?x1222 (* ?x1177 |v7:4|)) ?x845))))
 (let ((?x656 (- 11.0)))
 (let ((?x1163 (+ (+ (+ (* 19.0 |v11:0|) (* 15.0 ?x2542)) (* ?x2084 |v7:4|)) (* 17.0 ?x1592))))
 (let ((?x451 (rval2 |v6:5_st|)))
 (let ((?x2431 (* 20.0 ?x451)))
 (let ((?x1449 (+ (+ (+ (* 14.0 (rval2 |v0:11_st|)) (* 4.0 ?x2542)) (* (- 4.0) ?x451)) ?x2431)))
 (let ((?x1489 (+ (+ (+ ?x484 (* 6.0 (rval2 |v0:11_st|))) (* 19.0 |v11:0|)) (* ?x2115 (rval2 |v4:7_st|)))))
 (let ((?x608 (rval2 |v0:11_st|)))
 (let ((?x570 (* 14.0 ?x608)))
 (let ((?x385 (+ (+ (+ (* 13.0 (rval2 |v8:3_st|)) (* 16.0 |v7:4|)) ?x570) (* (- 4.0) (rval2 |v4:7_st|)))))
 (let (($x1280 (and (and (<= ?x385 3.0) (<= ?x1489 3.0)) (or (<= ?x1449 ?x845) (<= ?x1163 ?x656)))))
 (let ((?x336 (+ (+ (+ (* 8.0 |v5:6|) (* (- 6.0) |v5:6|)) (* (- 20.0) ?x451)) (* 4.0 ?x608))))
 (let ((?x1737 (- 18.0)))
 (let ((?x1390 (* 2.0 |v5:6|)))
 (let ((?x1900 (+ (+ (+ (* 8.0 |v1:10|) (* 4.0 |v7:4|)) (* 18.0 (rval2 |v4:7_st|))) ?x1390)))
 (let ((?x2225 (- 10.0)))
 (let ((?x2299 (+ (+ (+ (* 20.0 ?x2542) (* 7.0 (rval2 |v8:3_st|))) (* (- 15.0) |v7:4|)) ?x2542)))
 (let ((?x48 (- 9.0)))
 (let ((?x2105 (+ (+ (+ (* (- 4.0) ?x451) (* (- 6.0) |v1:10|)) (* 19.0 |v11:0|)) (* 19.0 |v3:8|))))
 (let (($x118 (<= (+ (+ (+ (* 5.0 |v7:4|) ?x608) (* ?x445 ?x1592)) (* ?x656 |v11:0|)) 3.0)))
 (let (($x2083 (or (and (and (and $x118 (<= ?x2105 ?x48)) (<= ?x2299 ?x2225)) (<= ?x1900 ?x1737)) (or (<= ?x336 ?x2084) $x1280))))
 (let ((?x347 (- 19.0)))
 (let ((?x1210 (+ (+ (+ (* 20.0 |v1:10|) (* ?x845 |v1:10|)) (* (- 6.0) (rval2 |v4:7_st|))) |v1:10|)))
 (let ((?x2978 (rval2 |v8:3_st|)))
 (let ((?x1827 (* 13.0 ?x2978)))
 (let (($x1205 (<= (+ (+ (+ (* 18.0 ?x2978) (* ?x2084 |v7:4|)) ?x1827) (* (- 17.0) ?x2542)) 1.0)))
 (let ((?x1037 (* 18.0 |v5:6|)))
 (let ((?x68 (+ (+ (+ (* ?x2084 |v3:8|) (* 7.0 |v7:4|)) (* ?x656 (rval2 |v4:7_st|))) ?x1037)))
 (let ((?x2969 (* ?x1177 |v1:10|)))
 (let (($x3130 (<= (+ (+ (+ (* 14.0 ?x451) (* ?x347 |v1:10|)) (* 15.0 ?x2542)) ?x2969) 3.0)))
 (let ((?x2650 (- 7.0)))
 (let ((?x617 (+ (+ (+ (* ?x2225 (rval2 |v4:7_st|)) (* (- 16.0) ?x1592)) ?x2978) (* (- 16.0) |v5:6|))))
 (let ((?x801 (- 20.0)))
 (let (($x3191 (<= (+ (+ (+ (* 2.0 ?x2542) ?x2969) (* ?x845 |v11:0|)) (* 4.0 |v1:10|)) ?x801)))
 (let ((?x2401 (+ (+ (+ (* 3.0 ?x2978) (* 9.0 |v9:2|)) (* ?x2225 |v7:4|)) (* ?x48 |v9:2|))))
 (let (($x2726 (<= (+ (+ (+ (* (- 6.0) |v9:2|) |v11:0|) (* ?x347 |v5:6|)) (* 7.0 ?x1592)) 12.0)))
 (let ((?x986 (* 4.0 |v1:10|)))
 (let ((?x1333 (+ (+ (+ (* 16.0 ?x2978) (* 7.0 ?x451)) (* (- 5.0) |v11:0|)) ?x986)))
 (let (($x2731 (and (and (and (<= ?x1333 ?x801) $x2726) (or (<= ?x2401 16.0) $x3191)) (or (<= ?x617 ?x2650) (or $x3130 (<= ?x68 ?x2084))))))
 (let ((?x2863 (+ (+ (+ (* (- 6.0) |v9:2|) (* 17.0 |v11:0|)) (* (- 3.0) ?x451)) (* (- 5.0) ?x2542))))
 (let (($x1088 (<= (+ (+ (+ (* ?x48 |v3:8|) (* 5.0 ?x1592)) ?x451) (* 2.0 |v1:10|)) 2.0)))
 (let ((?x479 (+ (+ (+ (* 14.0 ?x2978) (* 6.0 (rval2 |v4:7_st|))) (* 12.0 ?x451)) |v7:4|)))
 (let ((?x2075 (* 10.0 |v7:4|)))
 (let ((?x551 (+ (+ (+ (* (- 3.0) |v11:0|) (* 11.0 ?x2542)) (* (- 3.0) |v9:2|)) ?x2075)))
 (let (($x1695 (or (and (<= ?x551 ?x445) (<= ?x479 0.0)) (and $x1088 (<= ?x2863 7.0)))))
 (let ((?x683 (+ (+ (+ (* (- 3.0) ?x451) (* (- 16.0) ?x451)) (* 9.0 ?x1592)) (* (- 4.0) |v11:0|))))
 (let (($x2338 (or (and (or (or (<= ?x683 7.0) $x1695) $x2731) (or $x1205 (<= ?x1210 ?x347))) (and $x2083 $x450))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2909)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2908)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2907)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2906)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2905)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2904)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 $x2338))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
