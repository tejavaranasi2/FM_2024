; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2382 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2383 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2384 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2385 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2386 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2387 Real) )(let ((?x1845 (- 4.0)))
 (let ((?x1949 (rval2 |v8:3_st|)))
 (let ((?x1412 (* 20.0 ?x1949)))
 (let ((?x295 (rval2 |v0:11_st|)))
 (let ((?x771 (* 2.0 ?x295)))
 (let (($x1022 (<= (+ (+ (+ (* (- 3.0) (rval2 |v2:9_st|)) (* 12.0 |v5:6|)) ?x771) ?x1412) ?x1845)))
 (let ((?x1159 (- 11.0)))
 (let ((?x1401 (+ (+ (+ (* (- 9.0) |v9:2|) (* 14.0 |v7:4|)) (* (- 13.0) ?x1949)) (* (- 8.0) |v7:4|))))
 (let ((?x1618 (+ (+ (+ (* 12.0 |v7:4|) (* 20.0 |v1:10|)) (* (- 20.0) (rval2 |v10:1_st|))) (* (- 2.0) (rval2 |v6:5_st|)))))
 (let ((?x884 (rval2 |v2:9_st|)))
 (let ((?x3094 (* 18.0 ?x884)))
 (let ((?x569 (+ (+ (* 11.0 (rval2 |v4:7_st|)) (* 9.0 |v7:4|)) (* (- 16.0) (rval2 |v4:7_st|)))))
 (let ((?x1241 (+ (+ (+ (* 9.0 |v11:0|) (* 5.0 ?x295)) (* 9.0 ?x1949)) (* (- 9.0) |v3:8|))))
 (let (($x2176 (or (and (<= ?x1241 5.0) (<= (+ ?x569 ?x3094) 9.0)) (and (<= ?x1618 11.0) (<= ?x1401 ?x1159)))))
 (let ((?x871 (- 12.0)))
 (let ((?x1913 (+ (+ (+ (* 16.0 |v5:6|) (* 12.0 ?x295)) (* (- 20.0) ?x295)) (* 15.0 ?x295))))
 (let ((?x1424 (* 17.0 |v3:8|)))
 (let ((?x1083 (+ (+ (+ (* (- 3.0) |v9:2|) (* 12.0 |v9:2|)) (* 4.0 |v7:4|)) ?x1424)))
 (let ((?x2631 (- 9.0)))
 (let ((?x3101 (* ?x2631 |v9:2|)))
 (let ((?x804 (+ (+ (+ (* 15.0 ?x1949) (* (- 16.0) ?x295)) (* 12.0 (rval2 |v6:5_st|))) ?x3101)))
 (let ((?x1406 (- 15.0)))
 (let ((?x2024 (rval2 |v4:7_st|)))
 (let ((?x1450 (* 19.0 ?x2024)))
 (let (($x191 (<= (+ (+ (+ (* ?x1845 |v5:6|) (* 3.0 ?x295)) (* 10.0 |v7:4|)) ?x1450) ?x1406)))
 (let (($x874 (or (or (and $x191 (<= ?x804 9.0)) (or (<= ?x1083 ?x1845) (<= ?x1913 ?x871))) $x2176)))
 (let ((?x2871 (- 18.0)))
 (let ((?x93 (rval2 |v10:1_st|)))
 (let ((?x2625 (* 16.0 ?x93)))
 (let ((?x2186 (* 4.0 ?x2024)))
 (let ((?x1455 (+ (+ (+ (* (- 5.0) (rval2 |v6:5_st|)) (* (- 17.0) |v9:2|)) ?x2186) ?x2625)))
 (let ((?x1187 (- 13.0)))
 (let ((?x260 (* ?x1187 |v5:6|)))
 (let ((?x1561 (+ (+ (+ (* (- 14.0) ?x295) (* 12.0 |v5:6|)) (* 7.0 ?x93)) ?x260)))
 (let ((?x2301 (+ (+ (+ (* ?x1187 |v7:4|) (* (- 2.0) |v9:2|)) (* 17.0 ?x1949)) (* ?x1187 ?x884))))
 (let ((?x2272 (+ (+ (+ (* (- 3.0) ?x884) (* (- 2.0) ?x1949)) (* 15.0 ?x2024)) (* 11.0 (rval2 |v6:5_st|)))))
 (let (($x3040 (and (and (<= ?x2272 ?x1187) (<= ?x2301 12.0)) (and (<= ?x1561 7.0) (<= ?x1455 ?x2871)))))
 (let ((?x102 (+ (+ (+ (* 6.0 (rval2 |v6:5_st|)) (* 3.0 ?x93)) (* (- 7.0) ?x295)) (* ?x1406 |v9:2|))))
 (let ((?x307 (+ (+ (+ (* 15.0 |v9:2|) (* ?x871 (rval2 |v6:5_st|))) (* (- 10.0) ?x2024)) (* (- 19.0) |v1:10|))))
 (let ((?x2273 (+ (+ (* (- 10.0) |v3:8|) (* (- 17.0) (rval2 |v6:5_st|))) (* 13.0 |v5:6|))))
 (let ((?x1635 (+ (+ (+ (* (- 1.0) ?x884) (* 10.0 |v1:10|)) (* 12.0 |v9:2|)) (* ?x2871 |v5:6|))))
 (let (($x2746 (or (or (<= ?x1635 13.0) (<= (+ ?x2273 (* ?x871 ?x295)) ?x1159)) (or (<= ?x307 13.0) (<= ?x102 6.0)))))
 (let ((?x2643 (* 6.0 |v11:0|)))
 (let (($x2794 (<= (+ (+ (+ (* 15.0 |v5:6|) (* 19.0 |v3:8|)) (* ?x1406 ?x1949)) ?x2643) 7.0)))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2387)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2386)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2385)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2384)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2383)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2382)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (or (and $x2794 (and (or $x2746 $x3040) $x874)) $x1022)))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
