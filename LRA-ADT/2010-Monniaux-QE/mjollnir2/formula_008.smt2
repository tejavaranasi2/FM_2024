; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2304 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2305 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2306 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2307 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2308 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2309 Real) )(let ((?x90 (* 19.0 |v9:2|)))
 (let ((?x1149 (+ (+ (* (- 6.0) (rval2 |v8:3_st|)) (* 7.0 (rval2 |v10:1_st|))) (* (- 13.0) (rval2 |v4:7_st|)))))
 (let ((?x2290 (+ (+ (* (- 20.0) |v1:10|) (* (- 13.0) |v5:6|)) (* 6.0 (rval2 |v8:3_st|)))))
 (let ((?x2488 (+ (+ (+ (* (- 16.0) |v1:10|) (* 18.0 |v3:8|)) (* (- 20.0) |v11:0|)) (* (- 18.0) (rval2 |v0:11_st|)))))
 (let ((?x486 (* 17.0 |v7:4|)))
 (let ((?x2550 (+ (+ (* 3.0 (rval2 |v4:7_st|)) (* 18.0 (rval2 |v6:5_st|))) (* (- 8.0) |v7:4|))))
 (let ((?x2777 (- 9.0)))
 (let ((?x2176 (* 14.0 |v5:6|)))
 (let (($x1271 (<= (+ (+ (+ (* 19.0 |v7:4|) (* 7.0 |v11:0|)) (* 11.0 |v7:4|)) ?x2176) ?x2777)))
 (let ((?x866 (- 6.0)))
 (let ((?x1089 (+ (+ (* (- 8.0) (rval2 |v2:9_st|)) (* 5.0 |v3:8|)) (* 7.0 (rval2 |v2:9_st|)))))
 (let (($x971 (and (or (<= (+ ?x1089 (* 3.0 (rval2 |v6:5_st|))) ?x866) $x1271) (or (<= (+ ?x2550 ?x486) 20.0) (<= ?x2488 13.0)))))
 (let ((?x2024 (rval2 |v4:7_st|)))
 (let ((?x2159 (- 3.0)))
 (let ((?x2874 (* ?x2159 ?x2024)))
 (let (($x329 (<= (+ (+ (+ (* (- 2.0) |v7:4|) (* (- 4.0) |v9:2|)) ?x486) ?x2874) 4.0)))
 (let ((?x3116 (rval2 |v6:5_st|)))
 (let ((?x2177 (* 7.0 ?x3116)))
 (let ((?x1510 (+ (+ (+ (* 14.0 ?x2024) (* 6.0 |v7:4|)) (* 17.0 (rval2 |v10:1_st|))) ?x2177)))
 (let ((?x1159 (- 11.0)))
 (let ((?x176 (* 6.0 |v7:4|)))
 (let ((?x2758 (+ (+ (* ?x2159 |v11:0|) (* (- 20.0) ?x3116)) (* (- 15.0) (rval2 |v2:9_st|)))))
 (let ((?x2537 (- 2.0)))
 (let ((?x970 (+ (+ (* 20.0 |v1:10|) (* (- 5.0) (rval2 |v0:11_st|))) (* 3.0 (rval2 |v2:9_st|)))))
 (let (($x2960 (or (<= (+ ?x970 (* (- 13.0) |v11:0|)) ?x2537) (<= (+ ?x2758 ?x176) ?x1159))))
 (let ((?x93 (rval2 |v10:1_st|)))
 (let ((?x2959 (* 3.0 ?x93)))
 (let ((?x1353 (+ (+ (* 12.0 (rval2 |v0:11_st|)) (* 15.0 |v7:4|)) (* (- 16.0) (rval2 |v2:9_st|)))))
 (let ((?x3110 (+ (+ (* 10.0 (rval2 |v0:11_st|)) (* (- 1.0) ?x3116)) (* (- 14.0) |v11:0|))))
 (let (($x152 (and (<= (+ ?x3110 (* 13.0 ?x3116)) 14.0) (<= (+ ?x1353 ?x2959) 8.0))))
 (let ((?x2198 (+ (+ (+ (* (- 14.0) ?x3116) (* (- 8.0) ?x93)) ?x2874) (* 2.0 ?x2024))))
 (let ((?x831 (+ (+ (+ (* 15.0 |v3:8|) (* (- 8.0) |v5:6|)) (* 0.0 |v5:6|)) (* (- 20.0) |v5:6|))))
 (let ((?x2331 (* 13.0 |v7:4|)))
 (let (($x189 (<= (+ (+ (+ (rval2 |v0:11_st|) (* 16.0 ?x3116)) (* 4.0 |v9:2|)) ?x2331) 4.0)))
 (let (($x2548 (and (or $x189 (or (or (<= ?x831 9.0) (<= ?x2198 12.0)) $x152)) (or (and $x2960 (or (<= ?x1510 13.0) $x329)) $x971))))
 (let (($x1965 (and (and $x2548 (<= (+ ?x2290 (* 16.0 ?x2024)) 9.0)) (<= (+ ?x1149 ?x90) 4.0))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2309)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2308)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2307)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2306)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2305)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2304)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 $x1965))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
