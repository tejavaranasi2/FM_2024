; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!3096 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!3097 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!3098 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!3099 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!3100 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!3101 Real) )(let ((?x1908 (- 9.0)))
 (let ((?x1443 (* 12.0 |v1:10|)))
 (let ((?x692 (+ (+ (+ (* (- 4.0) |v11:0|) (* 7.0 |v5:6|)) (* 10.0 (rval2 |v2:9_st|))) ?x1443)))
 (let ((?x1424 (* 7.0 |v7:4|)))
 (let ((?x97 (+ (+ (+ (* 13.0 |v3:8|) (* 19.0 (rval2 |v10:1_st|))) (* (- 18.0) |v3:8|)) ?x1424)))
 (let ((?x2395 (- 10.0)))
 (let ((?x2792 (- 6.0)))
 (let ((?x2938 (* ?x2792 |v1:10|)))
 (let ((?x887 (+ (+ (* 9.0 |v9:2|) (* (- 16.0) (rval2 |v2:9_st|))) (* 2.0 (rval2 |v6:5_st|)))))
 (let ((?x2471 (* 19.0 |v1:10|)))
 (let ((?x1898 (rval2 |v4:7_st|)))
 (let ((?x3160 (* ?x2395 ?x1898)))
 (let (($x2564 (or (<= (+ (+ (+ ?x1898 (* (- 16.0) (rval2 |v10:1_st|))) ?x3160) ?x2471) ?x1908) (<= (+ ?x887 ?x2938) ?x2395))))
 (let ((?x1339 (* 6.0 |v3:8|)))
 (let ((?x2429 (+ (+ (+ (* 15.0 |v1:10|) (* 14.0 |v5:6|)) (* 15.0 (rval2 |v0:11_st|))) ?x1339)))
 (let ((?x2251 (- 17.0)))
 (let ((?x2999 (+ (+ (+ (* 20.0 |v1:10|) (* 4.0 |v5:6|)) (* (- 1.0) |v9:2|)) (* 0.0 |v1:10|))))
 (let ((?x2588 (- 4.0)))
 (let ((?x2335 (+ (+ (+ (* 9.0 |v7:4|) |v3:8|) (* (- 5.0) (rval2 |v6:5_st|))) (* (- 11.0) (rval2 |v10:1_st|)))))
 (let ((?x1236 (- 11.0)))
 (let ((?x2479 (+ (+ (+ (* ?x1236 |v9:2|) (* ?x2395 (rval2 |v6:5_st|))) (* 20.0 |v3:8|)) (* (- 5.0) |v7:4|))))
 (let ((?x305 (+ (+ (* (- 19.0) (rval2 |v2:9_st|)) (* (- 19.0) |v7:4|)) (* (- 15.0) (rval2 |v8:3_st|)))))
 (let ((?x524 (- 18.0)))
 (let ((?x1175 (rval2 |v10:1_st|)))
 (let ((?x1580 (- 16.0)))
 (let ((?x56 (* ?x1580 ?x1175)))
 (let (($x2870 (and (<= (+ (+ (+ ?x3160 (* ?x2588 ?x1898)) (* (- 12.0) |v7:4|)) ?x56) ?x524) (<= (+ ?x305 (* 7.0 (rval2 |v2:9_st|))) ?x2251))))
 (let (($x584 (and (and $x2870 (or (<= ?x2479 ?x1236) (<= ?x2335 ?x2588))) (and (and (<= ?x2999 ?x2251) (<= ?x2429 ?x2395)) $x2564))))
 (let ((?x1188 (- 1.0)))
 (let ((?x138 (+ (+ (+ (* 4.0 (rval2 |v8:3_st|)) (* 18.0 |v9:2|)) (* 17.0 |v7:4|)) (* (- 3.0) ?x1175))))
 (let ((?x2984 (* 2.0 |v5:6|)))
 (let ((?x552 (+ (+ (+ (* 14.0 |v3:8|) (* ?x2588 |v11:0|)) (* 15.0 (rval2 |v2:9_st|))) ?x2984)))
 (let ((?x2685 (- 15.0)))
 (let ((?x2166 (+ (+ (+ (* (- 14.0) ?x1898) (* (- 5.0) |v1:10|)) (* 5.0 |v5:6|)) (* ?x1236 ?x1898))))
 (let ((?x811 (+ (+ (+ (* 11.0 (rval2 |v6:5_st|)) |v9:2|) (* 10.0 |v5:6|)) (* (- 2.0) (rval2 |v8:3_st|)))))
 (let (($x2493 (or (or (<= ?x811 1.0) (<= ?x2166 ?x2685)) (or (<= ?x552 2.0) (<= ?x138 ?x1188)))))
 (let ((?x1663 (rval2 |v2:9_st|)))
 (let ((?x1680 (+ (+ (+ (* 0.0 (rval2 |v6:5_st|)) ?x2938) (* 0.0 (rval2 |v0:11_st|))) ?x1663)))
 (let ((?x523 (+ (+ (+ (* ?x1580 |v9:2|) (* ?x1580 |v9:2|)) (* ?x2251 |v1:10|)) (* (- 8.0) ?x1898))))
 (let ((?x1176 (- 13.0)))
 (let ((?x1880 (* 13.0 ?x1663)))
 (let ((?x608 (rval2 |v0:11_st|)))
 (let ((?x2866 (* 3.0 ?x608)))
 (let (($x3058 (<= (+ (+ (+ (* ?x2588 ?x1898) (* 10.0 (rval2 |v8:3_st|))) ?x2866) ?x1880) ?x1176)))
 (let ((?x1164 (+ (+ (+ (* 20.0 |v11:0|) |v5:6|) (* 15.0 |v9:2|)) (* (- 14.0) |v7:4|))))
 (let (($x2473 (or (and (<= ?x1164 12.0) $x3058) (or (<= ?x523 ?x524) (<= ?x1680 2.0)))))
 (let (($x2570 (or (or (and (and $x2473 $x2493) $x584) (<= ?x97 10.0)) (<= ?x692 ?x1908))))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!3101)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!3100)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!3099)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!3098)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!3097)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!3096)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 $x2570)))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
