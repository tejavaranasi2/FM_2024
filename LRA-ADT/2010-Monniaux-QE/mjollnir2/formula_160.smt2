; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2178 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2179 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2180 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2181 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2182 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2183 Real) )(let ((?x856 (- 10.0)))
 (let ((?x1873 (rval2 |v4:7_st|)))
 (let ((?x2725 (* 20.0 ?x1873)))
 (let ((?x660 (+ (+ (+ (* 3.0 |v5:6|) (* (- 7.0) (rval2 |v6:5_st|))) (* 2.0 |v5:6|)) ?x2725)))
 (let ((?x2895 (+ (+ (+ (* 11.0 |v5:6|) (* 11.0 |v11:0|)) (* (- 2.0) |v9:2|)) (* (- 4.0) (rval2 |v6:5_st|)))))
 (let ((?x179 (+ (+ (+ (* 8.0 (rval2 |v0:11_st|)) (* (- 15.0) |v11:0|)) (* 18.0 |v11:0|)) (* (- 6.0) (rval2 |v0:11_st|)))))
 (let ((?x985 (+ (+ (* (- 2.0) (rval2 |v8:3_st|)) (* (- 17.0) (rval2 |v10:1_st|))) (* 13.0 ?x1873))))
 (let (($x2875 (and (or (<= (+ ?x985 (* (- 11.0) |v7:4|)) 17.0) (<= ?x179 6.0)) (or (<= ?x2895 20.0) (<= ?x660 ?x856)))))
 (let ((?x2704 (- 16.0)))
 (let ((?x941 (* ?x2704 |v11:0|)))
 (let ((?x1694 (+ (+ (* 16.0 (rval2 |v6:5_st|)) (* 13.0 (rval2 |v8:3_st|))) (* 17.0 |v7:4|))))
 (let ((?x295 (rval2 |v0:11_st|)))
 (let ((?x2511 (* 8.0 ?x295)))
 (let ((?x494 (+ (+ (+ (* (- 9.0) |v9:2|) ?x941) (* (- 19.0) (rval2 |v2:9_st|))) ?x2511)))
 (let ((?x2291 (- 12.0)))
 (let ((?x573 (+ (+ (+ (* (- 19.0) ?x1873) (* 16.0 |v3:8|)) |v9:2|) (* (- 17.0) ?x295))))
 (let ((?x2377 (rval2 |v6:5_st|)))
 (let ((?x1250 (- 19.0)))
 (let ((?x928 (* ?x1250 ?x2377)))
 (let (($x126 (and (<= (+ (+ (+ (* (- 3.0) ?x295) ?x1873) ?x928) ?x928) ?x2291) (<= ?x573 ?x2291))))
 (let (($x343 (and (and $x126 (and (<= ?x494 17.0) (<= (+ ?x1694 ?x941) 15.0))) $x2875)))
 (let ((?x1707 (* 3.0 |v5:6|)))
 (let ((?x503 (* 18.0 ?x2377)))
 (let ((?x3064 (+ (+ (+ (* (- 17.0) |v3:8|) (* (- 15.0) (rval2 |v10:1_st|))) ?x503) ?x1707)))
 (let ((?x2098 (- 2.0)))
 (let ((?x2421 (* ?x2098 ?x1873)))
 (let ((?x2197 (+ (+ (+ (* (- 8.0) |v3:8|) (* 3.0 ?x2377)) (* (- 14.0) ?x2377)) ?x2421)))
 (let ((?x2011 (+ (+ (+ (* (- 9.0) |v3:8|) (* (- 8.0) |v11:0|)) (* ?x2291 ?x1873)) (* (- 20.0) |v5:6|))))
 (let ((?x992 (* 5.0 |v5:6|)))
 (let ((?x1654 (+ (+ (+ (* (- 8.0) ?x2377) (* 18.0 |v5:6|)) (* 0.0 (rval2 |v8:3_st|))) ?x992)))
 (let (($x2339 (and (or (<= ?x1654 12.0) (<= ?x2011 1.0)) (or (<= ?x2197 14.0) (<= ?x3064 16.0)))))
 (let ((?x264 (+ (+ (+ (* 0.0 (rval2 |v8:3_st|)) (* 14.0 |v1:10|)) (* (- 8.0) ?x295)) (* 15.0 ?x1873))))
 (let ((?x1379 (+ (+ (+ (* 19.0 ?x295) (* 19.0 ?x2377)) (* (- 3.0) |v9:2|)) (* (- 11.0) |v5:6|))))
 (let ((?x2409 (* 5.0 ?x295)))
 (let ((?x2317 (+ (+ (* (- 7.0) |v5:6|) (* 19.0 (rval2 |v8:3_st|))) (* (- 3.0) ?x2377))))
 (let ((?x187 (- 11.0)))
 (let ((?x803 (+ (+ (+ (* (- 6.0) |v3:8|) (* (- 15.0) ?x1873)) (* 4.0 |v11:0|)) (* (- 17.0) (rval2 |v8:3_st|)))))
 (let (($x2594 (or (or (<= ?x803 ?x187) (<= (+ ?x2317 ?x2409) 16.0)) (or (<= ?x1379 12.0) (<= ?x264 ?x2291)))))
 (let ((?x1597 (* 11.0 ?x2377)))
 (let ((?x2215 (+ (+ (+ (* 16.0 |v9:2|) (* (- 15.0) ?x2377)) (* 14.0 (rval2 |v2:9_st|))) ?x1597)))
 (let ((?x2603 (+ (+ (+ (* 9.0 |v5:6|) (* 15.0 |v7:4|)) (* (- 9.0) (rval2 |v8:3_st|))) ?x2421)))
 (let ((?x1696 (- 8.0)))
 (let ((?x1852 (* ?x1696 |v3:8|)))
 (let ((?x2273 (+ (+ (+ (* (- 18.0) |v7:4|) (* ?x2704 ?x295)) (* (- 15.0) ?x2377)) ?x1852)))
 (let ((?x2084 (- 4.0)))
 (let ((?x2970 (* ?x2291 |v9:2|)))
 (let ((?x2086 (+ (+ (+ (* (- 9.0) |v7:4|) (* 14.0 (rval2 |v8:3_st|))) (* 9.0 |v7:4|)) ?x2970)))
 (let (($x2145 (or (or (<= ?x2086 ?x2084) (<= ?x2273 10.0)) (or (<= ?x2603 ?x2704) (<= ?x2215 1.0)))))
 (let ((?x791 (+ (+ (* ?x2098 (rval2 |v10:1_st|)) (* 11.0 (rval2 |v8:3_st|))) (* (- 5.0) ?x295))))
 (let ((?x604 (rval2 |v10:1_st|)))
 (let ((?x1338 (* 19.0 ?x604)))
 (let (($x437 (<= (+ (+ (+ (* 8.0 |v3:8|) (* (- 9.0) |v11:0|)) ?x2970) ?x1338) 16.0)))
 (let ((?x1397 (- 14.0)))
 (let ((?x1956 (+ (+ (+ (* ?x1250 |v7:4|) (* 8.0 |v1:10|)) (* (- 5.0) ?x1873)) (* (- 9.0) ?x604))))
 (let ((?x2877 (rval2 |v2:9_st|)))
 (let ((?x1974 (* 6.0 ?x2877)))
 (let (($x1619 (<= (+ (+ (+ (* 14.0 ?x295) (* 14.0 |v3:8|)) (* 0.0 ?x295)) ?x1974) 15.0)))
 (let (($x255 (or (or (or $x1619 (<= ?x1956 ?x1397)) (or $x437 (<= (+ ?x791 ?x295) 3.0))) $x2145)))
 (let ((?x1095 (* 16.0 ?x2877)))
 (let (($x2399 (<= (+ (+ (+ (* 12.0 ?x2377) (* (- 1.0) ?x2377)) (* ?x2704 |v3:8|)) ?x1095) 4.0)))
 (let ((?x1818 (* ?x2098 ?x604)))
 (let (($x1085 (<= (+ (+ (+ (* 3.0 ?x2877) (* ?x2704 |v7:4|)) (* ?x1250 ?x295)) ?x1818) 2.0)))
 (let ((?x935 (* ?x1397 |v1:10|)))
 (let (($x2372 (<= (+ (+ (+ (* ?x1397 ?x2377) (* 2.0 ?x2877)) (* 9.0 ?x295)) ?x935) 15.0)))
 (let ((?x1196 (+ (+ (* 14.0 (rval2 |v8:3_st|)) (* (- 1.0) |v11:0|)) (* 20.0 (rval2 |v8:3_st|)))))
 (let ((?x1578 (- 17.0)))
 (let ((?x997 (* 8.0 |v5:6|)))
 (let (($x175 (<= (+ (+ (+ (* (- 15.0) |v1:10|) (* ?x1578 ?x2377)) (* 14.0 ?x2377)) ?x997) ?x1578)))
 (let ((?x2057 (- 18.0)))
 (let ((?x254 (+ (+ (+ (* 4.0 ?x2877) (* 18.0 |v9:2|)) (* 8.0 (rval2 |v8:3_st|))) (* (- 6.0) |v11:0|))))
 (let (($x1599 (<= (+ (+ (+ (* ?x1397 ?x295) (* ?x2057 |v9:2|)) ?x941) (* 7.0 ?x2877)) 20.0)))
 (let (($x2489 (or (and $x1599 (<= ?x254 ?x2057)) (and $x175 (<= (+ ?x1196 (* 5.0 ?x2377)) 2.0)))))
 (let (($x2926 (or (and (and $x2489 (or (and $x2372 $x1085) $x2399)) $x255) (and (or $x2594 $x2339) $x343))))
 (let ((?x176 (* 13.0 |v9:2|)))
 (let (($x341 (<= (+ (+ (+ ?x935 (* (- 20.0) ?x1873)) (* (- 7.0) |v1:10|)) ?x176) ?x2084)))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2183)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2182)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2181)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2180)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2179)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2178)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (and $x341 $x2926))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
