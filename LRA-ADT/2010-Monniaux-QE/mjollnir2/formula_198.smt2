; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(exists ((|v10:1_st| RealState) (val!2250 Real) )(forall ((|v9:2| Real) )(exists ((|v8:3_st| RealState) (val!2251 Real) )(forall ((|v7:4| Real) )(exists ((|v6:5_st| RealState) (val!2252 Real) )(forall ((|v5:6| Real) )(exists ((|v4:7_st| RealState) (val!2253 Real) )(forall ((|v3:8| Real) )(exists ((|v2:9_st| RealState) (val!2254 Real) )(forall ((|v1:10| Real) )(exists ((|v0:11_st| RealState) (val!2255 Real) )(let ((?x2808 (* 9.0 |v7:4|)))
 (let ((?x2076 (+ (+ (+ (* 11.0 |v9:2|) (* 11.0 |v3:8|)) (* 19.0 (rval2 |v4:7_st|))) ?x2808)))
 (let ((?x431 (* 2.0 |v3:8|)))
 (let ((?x1217 (- 14.0)))
 (let ((?x1477 (* ?x1217 |v1:10|)))
 (let (($x776 (<= (+ (+ (+ (* (- 7.0) |v3:8|) (* (- 6.0) |v11:0|)) ?x1477) ?x431) 2.0)))
 (let ((?x1187 (- 13.0)))
 (let ((?x2537 (- 2.0)))
 (let ((?x582 (* ?x2537 |v3:8|)))
 (let (($x815 (<= (+ (+ (+ ?x431 (* 13.0 |v3:8|)) (* (- 18.0) (rval2 |v0:11_st|))) ?x582) ?x1187)))
 (let ((?x302 (- 1.0)))
 (let ((?x93 (rval2 |v10:1_st|)))
 (let ((?x64 (* 6.0 ?x93)))
 (let ((?x884 (rval2 |v2:9_st|)))
 (let ((?x1159 (- 11.0)))
 (let ((?x773 (* ?x1159 ?x884)))
 (let (($x2797 (<= (+ (+ (+ (* 19.0 |v1:10|) (* (- 12.0) |v7:4|)) ?x773) ?x64) ?x302)))
 (let ((?x2877 (- 8.0)))
 (let ((?x598 (+ (+ (+ (* (- 12.0) |v7:4|) (* 10.0 |v5:6|)) (* ?x1187 ?x884)) (* (- 18.0) |v9:2|))))
 (let ((?x2159 (- 3.0)))
 (let ((?x835 (* ?x2159 |v9:2|)))
 (let (($x749 (<= (+ (+ (+ (* 9.0 |v9:2|) (* (- 9.0) (rval2 |v4:7_st|))) |v5:6|) ?x835) 0.0)))
 (let ((?x2206 (- 20.0)))
 (let ((?x1131 (* 12.0 |v7:4|)))
 (let ((?x1335 (* 4.0 |v9:2|)))
 (let ((?x2518 (+ (+ (+ (* 8.0 (rval2 |v6:5_st|)) (* 2.0 (rval2 |v6:5_st|))) ?x1335) ?x1131)))
 (let (($x1744 (and (or (and (<= ?x2518 ?x2206) $x749) (and (<= ?x598 ?x2877) $x2797)) (or (and $x815 $x776) (<= ?x2076 13.0)))))
 (let ((?x2777 (- 9.0)))
 (let ((?x1287 (* ?x1217 |v3:8|)))
 (let ((?x1500 (+ (+ (+ (* (- 19.0) (rval2 |v6:5_st|)) (* (- 12.0) ?x884)) ?x1287) (* ?x2206 |v9:2|))))
 (let ((?x176 (+ (+ (+ (* ?x302 ?x884) (* ?x2877 (rval2 |v6:5_st|))) (* (- 5.0) |v3:8|)) (* ?x2159 |v7:4|))))
 (let ((?x2024 (rval2 |v4:7_st|)))
 (let ((?x561 (* 8.0 ?x2024)))
 (let ((?x2945 (+ (+ (+ (* 10.0 |v11:0|) (* ?x302 (rval2 |v6:5_st|))) ?x561) (* ?x2537 (rval2 |v6:5_st|)))))
 (let ((?x2704 (- 16.0)))
 (let ((?x2927 (+ (+ (+ (* ?x2704 |v7:4|) (* (- 5.0) ?x2024)) (* 8.0 |v5:6|)) (* ?x2537 ?x884))))
 (let ((?x1631 (* 9.0 |v11:0|)))
 (let ((?x231 (+ (+ (+ (* 7.0 ?x2024) (* ?x2537 |v9:2|)) (* (- 5.0) (rval2 |v8:3_st|))) ?x1631)))
 (let (($x1563 (and (or (<= ?x231 10.0) (<= ?x2927 ?x2704)) (and (<= ?x2945 12.0) (<= ?x176 9.0)))))
 (let ((?x1281 (+ (+ (+ (* 3.0 ?x2024) (* 15.0 |v11:0|)) (* 6.0 (rval2 |v6:5_st|))) (* (- 6.0) |v5:6|))))
 (let ((?x1993 (* 10.0 |v7:4|)))
 (let (($x910 (<= (+ (+ (+ (* ?x1217 |v11:0|) (* 5.0 ?x93)) (* (- 4.0) |v1:10|)) ?x1993) ?x2704)))
 (let ((?x543 (- 15.0)))
 (let ((?x2959 (+ (+ (+ (* ?x302 |v7:4|) (* (- 4.0) ?x884)) (* 5.0 ?x2024)) (* (- 6.0) ?x884))))
 (let ((?x3116 (rval2 |v6:5_st|)))
 (let ((?x2280 (- 19.0)))
 (let ((?x1057 (* ?x2280 ?x3116)))
 (let ((?x2488 (+ (+ (+ (* 9.0 (rval2 |v0:11_st|)) (* 20.0 ?x884)) (* ?x2206 ?x93)) ?x1057)))
 (let (($x1297 (or (or (or (<= ?x2488 ?x543) (<= ?x2959 ?x543)) (and $x910 (<= ?x1281 7.0))) $x1563)))
 (let ((?x761 (* 10.0 ?x93)))
 (let (($x534 (<= (+ (+ (+ (* 20.0 |v1:10|) (* (- 4.0) (rval2 |v8:3_st|))) ?x773) ?x761) ?x2777)))
 (let ((?x1675 (+ (+ (+ (* ?x2537 (rval2 |v8:3_st|)) (* 11.0 |v11:0|)) (* ?x2280 |v7:4|)) (* ?x543 |v1:10|))))
 (let ((?x2974 (* 13.0 ?x93)))
 (let ((?x138 (+ (+ (+ (* 15.0 |v5:6|) (* 6.0 (rval2 |v0:11_st|))) (* ?x302 ?x2024)) ?x2974)))
 (let ((?x1129 (- 4.0)))
 (let ((?x945 (+ (+ (+ (* 12.0 (rval2 |v0:11_st|)) (* 2.0 |v1:10|)) (* 12.0 ?x2024)) (* ?x302 |v9:2|))))
 (let ((?x866 (- 6.0)))
 (let ((?x615 (* ?x866 |v11:0|)))
 (let (($x2355 (<= (+ (+ (+ (* ?x2206 ?x884) (* 10.0 (rval2 |v0:11_st|))) ?x582) ?x615) ?x302)))
 (let (($x2533 (and (or $x2355 (<= ?x945 ?x1129)) (and (<= ?x138 14.0) (<= ?x1675 9.0)))))
 (let ((?x188 (+ (+ (+ (* 13.0 |v9:2|) (* ?x866 (rval2 |v0:11_st|))) (* ?x1159 (rval2 |v0:11_st|))) (* ?x2206 |v7:4|))))
 (let ((?x2963 (- 12.0)))
 (let ((?x2479 (* ?x2963 |v5:6|)))
 (let ((?x2286 (+ (+ (+ (* ?x2963 (rval2 |v0:11_st|)) (* (- 10.0) |v9:2|)) ?x2479) (* 3.0 ?x3116))))
 (let ((?x1905 (* 15.0 ?x884)))
 (let ((?x1691 (+ (+ (+ (* 9.0 ?x2024) (* ?x543 ?x3116)) (* 16.0 (rval2 |v8:3_st|))) ?x1905)))
 (let ((?x1652 (* ?x2877 |v7:4|)))
 (let ((?x1774 (+ (+ (+ (* 17.0 (rval2 |v8:3_st|)) (* 3.0 |v9:2|)) (* 4.0 |v5:6|)) ?x1652)))
 (let ((?x1160 (* 19.0 ?x2024)))
 (let (($x798 (<= (+ (+ (+ (* 19.0 |v11:0|) (rval2 |v8:3_st|)) (* ?x1129 |v11:0|)) ?x1160) ?x2280)))
 (let (($x255 (or (<= (+ (+ (+ ?x835 (* ?x2963 |v7:4|)) (* ?x1159 |v11:0|)) |v7:4|) ?x2877) (<= (+ (+ (+ (* ?x1217 |v11:0|) |v11:0|) ?x2808) (* ?x866 |v1:10|)) 9.0))))
 (let ((?x23 (+ (+ (+ (* 20.0 ?x3116) (* 3.0 |v7:4|)) (* ?x1129 (rval2 |v0:11_st|))) (* 8.0 ?x884))))
 (let ((?x564 (* ?x1129 |v11:0|)))
 (let (($x2192 (<= (+ (+ (+ (* 4.0 ?x884) (* ?x1187 |v3:8|)) (* 3.0 |v9:2|)) ?x564) 0.0)))
 (let ((?x1063 (* ?x2206 |v1:10|)))
 (let ((?x676 (+ (+ (+ (* (- 18.0) |v7:4|) (* ?x2704 ?x2024)) (* ?x2704 (rval2 |v0:11_st|))) ?x1063)))
 (let (($x2561 (or (and (or (<= ?x676 8.0) $x2192) (<= ?x23 10.0)) (and $x255 (and $x798 (<= ?x1774 ?x2280))))))
 (let (($x622 (or $x2561 (or (or (and (<= ?x1691 ?x2777) (<= ?x2286 ?x2280)) (<= ?x188 12.0)) $x2533))))
 (let ((?x890 (* ?x2777 |v5:6|)))
 (let ((?x1513 (+ (+ (+ (* 14.0 ?x3116) (* (- 18.0) (rval2 |v8:3_st|))) (* ?x1187 ?x93)) ?x890)))
 (let ((?x92 (+ (+ (+ (* ?x1187 ?x3116) (* 6.0 (rval2 |v8:3_st|))) (* ?x1159 ?x3116)) (* 0.0 |v9:2|))))
 (let ((?x295 (rval2 |v0:11_st|)))
 (let ((?x85 (* 9.0 ?x295)))
 (let ((?x2769 (+ (+ (+ (* ?x2704 ?x2024) (* ?x2877 (rval2 |v8:3_st|))) (* 8.0 ?x295)) ?x85)))
 (let ((?x3098 (* 11.0 |v11:0|)))
 (let (($x2563 (<= (+ (+ (+ (* 18.0 |v11:0|) (* 16.0 ?x884)) (* 19.0 |v9:2|)) ?x3098) 7.0)))
 (let (($x1357 (and (and $x2563 (<= ?x2769 ?x2537)) (or (<= ?x92 ?x1159) (<= ?x1513 10.0)))))
 (let (($x2950 (<= (+ (+ (+ (* 14.0 |v7:4|) |v5:6|) (* (- 7.0) |v5:6|)) ?x890) 3.0)))
 (let ((?x2965 (* 19.0 |v11:0|)))
 (let ((?x1948 (+ (+ (+ (* ?x543 (rval2 |v8:3_st|)) (* ?x302 ?x884)) (* 20.0 |v1:10|)) ?x2965)))
 (let ((?x116 (- 5.0)))
 (let ((?x1891 (* 12.0 ?x2024)))
 (let ((?x1916 (+ (+ (+ (* 13.0 (rval2 |v8:3_st|)) (* ?x2963 (rval2 |v8:3_st|))) (* ?x2877 |v5:6|)) ?x1891)))
 (let (($x871 (<= (+ (+ (+ (* (- 10.0) ?x884) (* 20.0 |v3:8|)) |v7:4|) ?x1057) ?x302)))
 (let ((?x1143 (* 19.0 |v5:6|)))
 (let (($x141 (<= (+ (+ (+ (* 12.0 |v11:0|) (* ?x2777 |v1:10|)) (* 15.0 |v7:4|)) ?x1143) ?x2877)))
 (let ((?x1776 (+ (+ (+ (* ?x1159 |v11:0|) (* ?x1217 |v5:6|)) (* 13.0 |v9:2|)) (* ?x543 |v3:8|))))
 (let ((?x510 (+ (+ (+ (* ?x1159 ?x93) (* ?x2777 |v9:2|)) (* ?x2704 ?x93)) (* ?x1217 ?x884))))
 (let ((?x3093 (* 0.0 ?x93)))
 (let ((?x14 (+ (+ (+ (* 3.0 ?x93) (* (- 18.0) ?x3116)) (* ?x2963 ?x93)) (* 7.0 (rval2 |v8:3_st|)))))
 (let (($x1833 (or (<= ?x14 14.0) (<= (+ (+ (+ (* 16.0 |v1:10|) (* 5.0 |v9:2|)) ?x3093) ?x3093) ?x2537))))
 (let (($x1897 (<= (+ (+ (+ ?x1993 (* ?x2877 ?x2024)) (* ?x1217 ?x93)) (* ?x1187 |v3:8|)) 1.0)))
 (let (($x166 (<= (+ (+ (+ (* 7.0 |v5:6|) (* 14.0 ?x2024)) (* 7.0 |v3:8|)) ?x1652) 4.0)))
 (let (($x2528 (or (and (and $x166 $x1897) $x1833) (or (and (<= ?x510 18.0) (<= ?x1776 18.0)) (or $x141 $x871)))))
 (let (($x1735 (and (or $x2528 (or (and (or (<= ?x1916 ?x116) (<= ?x1948 12.0)) $x2950) $x1357)) $x622)))
 (let (($x1423 (not (= |v0:11_st| (RMk1 val!2255)))))
 (let (($x937 (not (= |v2:9_st| (RMk1 val!2254)))))
 (let (($x1277 (not (= |v4:7_st| (RMk1 val!2253)))))
 (let (($x1151 (not (= |v6:5_st| (RMk1 val!2252)))))
 (let (($x1011 (not (= |v8:3_st| (RMk1 val!2251)))))
 (let (($x439 (not (= |v10:1_st| (RMk1 val!2250)))))
 (and $x439 $x1011 $x1151 $x1277 $x937 $x1423 (and $x1735 (or (and $x534 $x1297) (and (<= ?x1500 ?x2777) $x1744))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
