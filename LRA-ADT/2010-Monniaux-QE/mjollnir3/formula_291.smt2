; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(forall ((|v10:1| Real) )(forall ((|v9:2| Real) )(forall ((|v8:3| Real) )(exists ((|v7:4_st| RealState) (val!3888 Real) )(exists ((|v6:5_st| RealState) (val!3889 Real) )(exists ((|v5:6_st| RealState) (val!3890 Real) )(exists ((|v4:7_st| RealState) (val!3891 Real) )(forall ((|v3:8| Real) )(forall ((|v2:9| Real) )(forall ((|v1:10| Real) )(forall ((|v0:11| Real) )(let ((?x3071 (- 4.0)))
 (let ((?x2920 (* 20.0 |v8:3|)))
 (let ((?x2229 (+ (+ (+ (* (- 3.0) |v2:9|) (* 12.0 (rval2 |v5:6_st|))) (* 2.0 |v0:11|)) ?x2920)))
 (let ((?x1137 (- 11.0)))
 (let ((?x2282 (+ (+ (* (- 9.0) |v9:2|) (* 14.0 (rval2 |v7:4_st|))) (* (- 13.0) |v8:3|))))
 (let ((?x594 (+ (+ (+ (* 12.0 (rval2 |v7:4_st|)) (* 20.0 |v1:10|)) (* (- 20.0) |v10:1|)) (* (- 2.0) (rval2 |v6:5_st|)))))
 (let (($x2073 (and (<= ?x594 11.0) (<= (+ ?x2282 (* (- 8.0) (rval2 |v7:4_st|))) ?x1137))))
 (let ((?x425 (* 18.0 |v2:9|)))
 (let ((?x508 (+ (+ (* 11.0 (rval2 |v4:7_st|)) (* 9.0 (rval2 |v7:4_st|))) (* (- 16.0) (rval2 |v4:7_st|)))))
 (let ((?x2123 (- 9.0)))
 (let ((?x63 (* ?x2123 |v3:8|)))
 (let (($x1247 (<= (+ (+ (+ (* 9.0 |v11:0|) (* 5.0 |v0:11|)) (* 9.0 |v8:3|)) ?x63) 5.0)))
 (let ((?x2078 (- 12.0)))
 (let ((?x828 (* 15.0 |v0:11|)))
 (let ((?x3091 (+ (+ (+ (* 16.0 (rval2 |v5:6_st|)) (* 12.0 |v0:11|)) (* (- 20.0) |v0:11|)) ?x828)))
 (let ((?x1640 (* 17.0 |v3:8|)))
 (let ((?x2583 (+ (+ (+ (* (- 3.0) |v9:2|) (* 12.0 |v9:2|)) (* 4.0 (rval2 |v7:4_st|))) ?x1640)))
 (let ((?x1400 (* ?x2123 |v9:2|)))
 (let ((?x101 (+ (+ (+ (* 15.0 |v8:3|) (* (- 16.0) |v0:11|)) (* 12.0 (rval2 |v6:5_st|))) ?x1400)))
 (let ((?x1084 (- 15.0)))
 (let ((?x217 (rval2 |v4:7_st|)))
 (let ((?x1960 (* 19.0 ?x217)))
 (let ((?x680 (rval2 |v7:4_st|)))
 (let ((?x2196 (* 10.0 ?x680)))
 (let (($x305 (<= (+ (+ (+ (* ?x3071 (rval2 |v5:6_st|)) (* 3.0 |v0:11|)) ?x2196) ?x1960) ?x1084)))
 (let (($x2228 (or (or (and $x305 (<= ?x101 9.0)) (or (<= ?x2583 ?x3071) (<= ?x3091 ?x2078))) (or (and $x1247 (<= (+ ?x508 ?x425) 9.0)) $x2073))))
 (let ((?x1144 (- 18.0)))
 (let ((?x1663 (* 16.0 |v10:1|)))
 (let ((?x195 (* 4.0 ?x217)))
 (let ((?x559 (+ (+ (+ (* (- 5.0) (rval2 |v6:5_st|)) (* (- 17.0) |v9:2|)) ?x195) ?x1663)))
 (let ((?x2101 (+ (+ (+ (* (- 14.0) |v0:11|) (* 12.0 (rval2 |v5:6_st|))) (* 7.0 |v10:1|)) (* (- 13.0) (rval2 |v5:6_st|)))))
 (let ((?x102 (- 13.0)))
 (let ((?x674 (* ?x102 |v2:9|)))
 (let (($x2949 (<= (+ (+ (+ (* ?x102 ?x680) (* (- 2.0) |v9:2|)) (* 17.0 |v8:3|)) ?x674) 12.0)))
 (let ((?x656 (rval2 |v6:5_st|)))
 (let ((?x2862 (* 11.0 ?x656)))
 (let ((?x257 (+ (+ (+ (* (- 3.0) |v2:9|) (* (- 2.0) |v8:3|)) (* 15.0 ?x217)) ?x2862)))
 (let (($x1324 (and (and (<= ?x257 ?x102) $x2949) (and (<= ?x2101 7.0) (<= ?x559 ?x1144)))))
 (let ((?x887 (+ (+ (+ (* 6.0 ?x656) (* 3.0 |v10:1|)) (* (- 7.0) |v0:11|)) (* ?x1084 |v9:2|))))
 (let ((?x351 (* (- 19.0) |v1:10|)))
 (let (($x104 (<= (+ (+ (+ (* 15.0 |v9:2|) (* ?x2078 ?x656)) (* (- 10.0) ?x217)) ?x351) 13.0)))
 (let ((?x3227 (* ?x2078 |v0:11|)))
 (let ((?x1082 (+ (+ (* (- 10.0) |v3:8|) (* (- 17.0) ?x656)) (* 13.0 (rval2 |v5:6_st|)))))
 (let ((?x2659 (+ (+ (+ (* (- 1.0) |v2:9|) (* 10.0 |v1:10|)) (* 12.0 |v9:2|)) (* ?x1144 (rval2 |v5:6_st|)))))
 (let (($x229 (or (or (<= ?x2659 13.0) (<= (+ ?x1082 ?x3227) ?x1137)) (or $x104 (<= ?x887 6.0)))))
 (let ((?x1330 (+ (+ (+ (* 15.0 (rval2 |v5:6_st|)) (* 19.0 |v3:8|)) (* ?x1084 |v8:3|)) (* 6.0 |v11:0|))))
 (let (($x974 (or (and (<= ?x1330 7.0) (and (or $x229 $x1324) $x2228)) (<= ?x2229 ?x3071))))
 (let (($x3027 (not (= |v4:7_st| (RMk1 val!3891)))))
 (let (($x820 (not (= |v5:6_st| (RMk1 val!3890)))))
 (let (($x1286 (not (= |v6:5_st| (RMk1 val!3889)))))
 (let (($x2483 (not (= |v7:4_st| (RMk1 val!3888)))))
 (and $x2483 $x1286 $x820 $x3027 $x974)))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
