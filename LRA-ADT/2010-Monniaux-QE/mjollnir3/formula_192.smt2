; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(forall ((|v10:1| Real) )(forall ((|v9:2| Real) )(forall ((|v8:3| Real) )(exists ((|v7:4_st| RealState) (val!3476 Real) )(exists ((|v6:5_st| RealState) (val!3477 Real) )(exists ((|v5:6_st| RealState) (val!3478 Real) )(exists ((|v4:7_st| RealState) (val!3479 Real) )(forall ((|v3:8| Real) )(forall ((|v2:9| Real) )(forall ((|v1:10| Real) )(forall ((|v0:11| Real) )(let ((?x1007 (- 16.0)))
 (let ((?x1909 (* ?x1007 |v2:9|)))
 (let ((?x3125 (* 3.0 |v11:0|)))
 (let ((?x973 (+ (+ (+ (* 3.0 (rval2 |v6:5_st|)) (* (- 18.0) (rval2 |v5:6_st|))) ?x3125) ?x1909)))
 (let ((?x264 (- 17.0)))
 (let ((?x2760 (- 9.0)))
 (let ((?x1978 (* ?x2760 |v1:10|)))
 (let ((?x2248 (+ (+ (* 3.0 (rval2 |v4:7_st|)) (* (- 2.0) |v3:8|)) (* (- 19.0) (rval2 |v5:6_st|)))))
 (let ((?x666 (- 18.0)))
 (let ((?x2898 (* 20.0 |v10:1|)))
 (let ((?x291 (+ (+ (+ (* (- 1.0) (rval2 |v4:7_st|)) (* 14.0 |v0:11|)) (* 19.0 |v1:10|)) ?x2898)))
 (let ((?x3119 (+ (+ (+ (* 6.0 (rval2 |v7:4_st|)) (* 13.0 |v1:10|)) (* 2.0 |v8:3|)) (* (- 1.0) (rval2 |v5:6_st|)))))
 (let ((?x2076 (- 5.0)))
 (let ((?x2556 (+ (+ (+ (* 7.0 (rval2 |v6:5_st|)) (* 20.0 |v8:3|)) (* (- 4.0) |v11:0|)) (* (- 14.0) |v10:1|))))
 (let (($x1074 (or (and (<= ?x2556 ?x2076) (<= ?x3119 ?x666)) (or (<= ?x291 ?x666) (<= (+ ?x2248 ?x1978) ?x264)))))
 (let ((?x2628 (* 12.0 |v3:8|)))
 (let ((?x2498 (+ (+ (* (- 6.0) |v9:2|) (* (- 14.0) |v1:10|)) (* 3.0 (rval2 |v7:4_st|)))))
 (let ((?x563 (- 12.0)))
 (let ((?x2900 (* ?x563 |v2:9|)))
 (let ((?x2303 (+ (+ (* 18.0 (rval2 |v5:6_st|)) (* ?x2076 (rval2 |v5:6_st|))) (* (- 11.0) |v9:2|))))
 (let ((?x3024 (rval2 |v7:4_st|)))
 (let ((?x1663 (* 17.0 ?x3024)))
 (let ((?x1832 (+ (+ (+ (* 14.0 |v9:2|) (* ?x2760 (rval2 |v4:7_st|))) (* (- 3.0) |v3:8|)) ?x1663)))
 (let (($x132 (or (or (<= ?x1832 7.0) (<= (+ ?x2303 ?x2900) 8.0)) (<= (+ ?x2498 ?x2628) 18.0))))
 (let ((?x1841 (- 6.0)))
 (let ((?x2717 (- 13.0)))
 (let ((?x1281 (* ?x2717 |v8:3|)))
 (let ((?x2084 (+ (+ (* 8.0 (rval2 |v4:7_st|)) (* 17.0 (rval2 |v5:6_st|))) (* ?x264 |v10:1|))))
 (let (($x2623 (<= (+ (+ (+ ?x1281 ?x1978) (* 6.0 |v3:8|)) (* ?x563 (rval2 |v4:7_st|))) 11.0)))
 (let ((?x302 (+ (+ (+ (* 15.0 |v3:8|) (* 0.0 (rval2 |v4:7_st|))) (* 4.0 ?x3024)) (* (- 15.0) |v9:2|))))
 (let ((?x558 (- 20.0)))
 (let ((?x1361 (* ?x558 |v2:9|)))
 (let (($x671 (<= (+ (+ (+ (* 12.0 |v8:3|) (* 20.0 |v1:10|)) (* 0.0 |v3:8|)) ?x1361) 15.0)))
 (let ((?x2417 (rval2 |v4:7_st|)))
 (let ((?x1254 (* 19.0 ?x2417)))
 (let ((?x1558 (+ (+ (+ (* 20.0 |v8:3|) (* (- 1.0) ?x3024)) (* (- 14.0) |v11:0|)) ?x1254)))
 (let (($x1657 (or (<= ?x1558 17.0) (or (or $x671 (<= ?x302 16.0)) (and $x2623 (<= (+ ?x2084 ?x1281) ?x1841))))))
 (let ((?x2771 (+ (+ (+ ?x3024 (* 15.0 |v9:2|)) (* (- 19.0) |v9:2|)) (* (- 7.0) ?x3024))))
 (let ((?x688 (- 14.0)))
 (let ((?x2803 (* ?x688 |v11:0|)))
 (let (($x1516 (<= (+ (+ (+ (* ?x558 |v11:0|) (* ?x1007 |v9:2|)) (* ?x1841 ?x3024)) ?x2803) ?x1007)))
 (let ((?x545 (- 10.0)))
 (let ((?x1598 (* 4.0 |v11:0|)))
 (let ((?x1683 (* ?x563 |v1:10|)))
 (let ((?x2978 (+ (+ (+ (* (- 8.0) (rval2 |v5:6_st|)) (* (- 11.0) |v3:8|)) ?x1683) ?x1598)))
 (let ((?x629 (+ (+ (+ (* 10.0 |v0:11|) (* 15.0 |v2:9|)) (* ?x2717 |v10:1|)) (* (- 2.0) ?x3024))))
 (let ((?x729 (rval2 |v5:6_st|)))
 (let ((?x675 (+ (+ (+ (* 0.0 ?x2417) (* 12.0 |v9:2|)) (* (- 7.0) |v3:8|)) ?x729)))
 (let (($x3099 (and (or (<= ?x675 16.0) (<= ?x629 7.0)) (or (<= ?x2978 ?x545) $x1516))))
 (let (($x1898 (and (and (or $x3099 (<= ?x2771 11.0)) $x1657) (and (or $x132 $x1074) (<= ?x973 1.0)))))
 (let ((?x678 (+ (+ (+ (* ?x1007 |v1:10|) (* 16.0 ?x2417)) (* 20.0 |v9:2|)) (* ?x563 ?x3024))))
 (let (($x3027 (not (= |v4:7_st| (RMk1 val!3479)))))
 (let (($x820 (not (= |v5:6_st| (RMk1 val!3478)))))
 (let (($x1286 (not (= |v6:5_st| (RMk1 val!3477)))))
 (let (($x2483 (not (= |v7:4_st| (RMk1 val!3476)))))
 (and $x2483 $x1286 $x820 $x3027 (and (<= ?x678 14.0) $x1898))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
