; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(forall ((|v10:1| Real) )(forall ((|v9:2| Real) )(forall ((|v8:3| Real) )(exists ((|v7:4_st| RealState) (val!4120 Real) )(exists ((|v6:5_st| RealState) (val!4121 Real) )(exists ((|v5:6_st| RealState) (val!4122 Real) )(exists ((|v4:7_st| RealState) (val!4123 Real) )(forall ((|v3:8| Real) )(forall ((|v2:9| Real) )(forall ((|v1:10| Real) )(forall ((|v0:11| Real) )(let ((?x111 (rval2 |v5:6_st|)))
 (let ((?x1577 (* 3.0 ?x111)))
 (let ((?x1934 (rval2 |v7:4_st|)))
 (let ((?x2535 (* 7.0 ?x1934)))
 (let (($x1190 (<= (+ (+ (+ (* (- 19.0) ?x1934) (* 18.0 |v8:3|)) ?x2535) ?x1577) 13.0)))
 (let ((?x1385 (- 6.0)))
 (let ((?x2898 (* 20.0 |v10:1|)))
 (let ((?x485 (+ (+ (+ (* 15.0 (rval2 |v4:7_st|)) (* 4.0 |v10:1|)) (* 5.0 |v9:2|)) ?x2898)))
 (let ((?x2593 (* (- 15.0) |v1:10|)))
 (let ((?x2629 (+ ?x2593 (* (- 4.0) |v2:9|))))
 (let (($x756 (<= (+ (+ ?x2629 (* (- 7.0) ?x1934)) (* 19.0 (rval2 |v4:7_st|))) 3.0)))
 (let ((?x224 (* 13.0 |v9:2|)))
 (let (($x956 (<= (+ (+ (+ (* 8.0 |v2:9|) (* (- 13.0) |v8:3|)) ?x224) ?x224) 12.0)))
 (let ((?x2022 (+ (+ (+ (* 8.0 ?x1934) (* 10.0 |v2:9|)) (* (- 20.0) ?x1934)) (* 0.0 (rval2 |v6:5_st|)))))
 (let ((?x730 (- 13.0)))
 (let ((?x2558 (* 6.0 ?x1934)))
 (let (($x3085 (<= (+ (+ (+ (* ?x730 (rval2 |v6:5_st|)) ?x2898) (* (- 1.0) |v10:1|)) ?x2558) ?x730)))
 (let ((?x1253 (- 20.0)))
 (let ((?x1000 (* ?x1253 ?x1934)))
 (let (($x1827 (<= (+ (+ (+ (* (- 16.0) (rval2 |v4:7_st|)) ?x2898) (* 0.0 |v8:3|)) ?x1000) ?x1253)))
 (let ((?x1399 (+ (+ (+ (* (- 1.0) |v2:9|) (* 14.0 |v11:0|)) (* 5.0 |v9:2|)) (* 17.0 |v11:0|))))
 (let (($x401 (and (or (or (<= ?x1399 11.0) $x1827) (or $x3085 (<= ?x2022 8.0))) (and $x956 (and $x756 (<= ?x485 ?x1385))))))
 (let ((?x1112 (+ (+ (+ (* (- 18.0) |v9:2|) (* 13.0 |v11:0|)) (* 9.0 |v1:10|)) (* (- 14.0) ?x111))))
 (let ((?x3155 (+ (+ (+ (* 10.0 ?x1934) (* 6.0 ?x111)) (* 6.0 |v3:8|)) (* 20.0 ?x111))))
 (let ((?x951 (- 11.0)))
 (let ((?x2965 (* 12.0 ?x111)))
 (let ((?x2941 (+ (+ (+ (* 7.0 |v8:3|) (* 15.0 (rval2 |v4:7_st|))) (* (- 14.0) |v9:2|)) ?x2965)))
 (let ((?x1069 (+ (+ (* 17.0 |v1:10|) (* 0.0 |v2:9|)) (* 18.0 |v1:10|))))
 (let ((?x491 (* 9.0 |v2:9|)))
 (let ((?x2944 (- 1.0)))
 (let ((?x423 (* ?x2944 |v10:1|)))
 (let (($x3056 (<= (+ (+ (+ (* (- 18.0) (rval2 |v6:5_st|)) (* 8.0 |v10:1|)) ?x423) ?x491) 13.0)))
 (let (($x2328 (and (or $x3056 (<= (+ ?x1069 (* (- 12.0) ?x1934)) 9.0)) (and (<= ?x2941 ?x951) (<= ?x3155 7.0)))))
 (let ((?x2132 (- 5.0)))
 (let ((?x2440 (* ?x1385 |v1:10|)))
 (let (($x1299 (<= (+ (+ (+ (* (- 9.0) |v9:2|) (* (- 2.0) |v10:1|)) ?x2593) ?x2440) ?x2132)))
 (let ((?x1857 (+ (+ (+ (* 9.0 |v3:8|) (* 18.0 (rval2 |v6:5_st|))) (* 2.0 |v2:9|)) ?x2593)))
 (let ((?x745 (- 7.0)))
 (let ((?x1786 (* ?x745 |v3:8|)))
 (let (($x440 (<= (+ (+ (+ (* 17.0 |v8:3|) (* ?x2944 |v8:3|)) (* ?x745 |v10:1|)) ?x1786) 18.0)))
 (let ((?x2569 (+ (+ (+ (* ?x2944 |v8:3|) (* ?x2132 ?x1934)) (* 5.0 |v11:0|)) (* (- 8.0) |v10:1|))))
 (let (($x3186 (or (or (and (<= ?x2569 4.0) $x440) (or (<= ?x1857 18.0) $x1299)) $x2328)))
 (let ((?x1137 (+ (+ (+ (* (- 16.0) (rval2 |v6:5_st|)) ?x2440) (* 16.0 |v1:10|)) (* ?x1385 |v10:1|))))
 (let ((?x1851 (- 3.0)))
 (let ((?x492 (* ?x1851 |v2:9|)))
 (let ((?x1554 (+ (+ (+ (* (- 12.0) |v8:3|) (* 12.0 |v10:1|)) (* (- 18.0) ?x111)) ?x492)))
 (let (($x2795 (<= (+ (+ (+ (* (- 19.0) |v2:9|) ?x224) (* ?x951 |v11:0|)) (* 8.0 |v9:2|)) 19.0)))
 (let ((?x2370 (- 12.0)))
 (let ((?x738 (* 10.0 |v1:10|)))
 (let ((?x1314 (+ (+ (+ (* (- 17.0) |v10:1|) (* 19.0 |v10:1|)) (* (- 8.0) |v8:3|)) ?x738)))
 (let (($x975 (<= (+ (+ (+ (* 2.0 |v9:2|) ?x2535) (* ?x1851 |v11:0|)) (* (- 2.0) |v10:1|)) ?x730)))
 (let ((?x2503 (- 4.0)))
 (let ((?x1941 (* 7.0 |v1:10|)))
 (let (($x236 (<= (+ (+ (+ (* 13.0 |v11:0|) (* 14.0 |v2:9|)) (* ?x2503 |v10:1|)) ?x1941) ?x2503)))
 (let ((?x2966 (rval2 |v4:7_st|)))
 (let ((?x3147 (* 15.0 ?x2966)))
 (let (($x2583 (<= (+ (+ (+ (* (- 19.0) ?x1934) (* 9.0 ?x2966)) ?x3147) (* ?x1253 |v11:0|)) 9.0)))
 (let (($x877 (<= (+ (+ (+ (* ?x951 |v9:2|) (* 20.0 |v2:9|)) (* 5.0 ?x2966)) ?x492) ?x2132)))
 (let ((?x3180 (- 14.0)))
 (let ((?x831 (* 19.0 ?x111)))
 (let (($x2277 (<= (+ (+ (+ (* ?x1385 |v3:8|) (* 17.0 |v8:3|)) (* ?x2132 ?x2966)) ?x831) ?x3180)))
 (let (($x532 (and (and (and $x2277 $x877) (and $x2583 $x236)) (and (and $x975 (<= ?x1314 ?x2370)) (or $x2795 (<= ?x1554 18.0))))))
 (let ((?x2833 (* 7.0 |v8:3|)))
 (let (($x11 (<= (+ (+ (+ (* 5.0 |v2:9|) (* ?x2370 ?x2966)) (* (- 2.0) |v1:10|)) ?x2833) 8.0)))
 (let ((?x253 (- 17.0)))
 (let ((?x1410 (* 10.0 ?x111)))
 (let (($x3130 (<= (+ (+ (+ (* ?x3180 ?x1934) (* 3.0 |v8:3|)) (* 8.0 |v0:11|)) ?x1410) ?x253)))
 (let ((?x2069 (+ (+ (+ (* 10.0 |v11:0|) (* ?x730 |v10:1|)) (* ?x2370 |v8:3|)) (* 8.0 |v8:3|))))
 (let ((?x2636 (* 16.0 |v1:10|)))
 (let (($x1947 (<= (+ (+ (+ (* 19.0 |v1:10|) (* ?x2132 |v9:2|)) (* ?x1385 ?x1934)) ?x2636) 8.0)))
 (let ((?x1854 (* 18.0 |v0:11|)))
 (let ((?x118 (- 19.0)))
 (let ((?x716 (* ?x118 |v0:11|)))
 (let (($x534 (<= (+ (+ (+ (* (- 2.0) |v11:0|) (* (- 10.0) |v9:2|)) ?x716) ?x1854) ?x2503)))
 (let ((?x2392 (+ (+ (+ (* 13.0 |v2:9|) (* (- 18.0) |v8:3|)) (* 18.0 |v3:8|)) ?x2558)))
 (let ((?x453 (* 15.0 ?x111)))
 (let (($x1120 (<= (+ (+ (+ (* 11.0 |v0:11|) (* ?x1385 |v11:0|)) (* ?x1851 |v11:0|)) ?x453) 1.0)))
 (let ((?x2961 (- 16.0)))
 (let ((?x457 (+ (+ (+ (* 17.0 ?x111) (* ?x1253 ?x2966)) (* ?x951 |v10:1|)) (* ?x3180 ?x2966))))
 (let (($x1037 (and (and (and (<= ?x457 ?x2961) $x1120) (or (<= ?x2392 15.0) $x534)) (and (and $x1947 (<= ?x2069 3.0)) (and $x3130 $x11)))))
 (let (($x562 (or (or (and $x1037 $x532) (and (<= ?x1137 ?x1253) $x3186)) (and (or (<= ?x1112 11.0) $x401) $x1190))))
 (let (($x3027 (not (= |v4:7_st| (RMk1 val!4123)))))
 (let (($x820 (not (= |v5:6_st| (RMk1 val!4122)))))
 (let (($x1286 (not (= |v6:5_st| (RMk1 val!4121)))))
 (let (($x2483 (not (= |v7:4_st| (RMk1 val!4120)))))
 (and $x2483 $x1286 $x820 $x3027 $x562)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
