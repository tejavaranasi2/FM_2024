; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(forall ((|v10:1| Real) )(forall ((|v9:2| Real) )(forall ((|v8:3| Real) )(exists ((|v7:4_st| RealState) (val!3844 Real) )(exists ((|v6:5_st| RealState) (val!3845 Real) )(exists ((|v5:6_st| RealState) (val!3846 Real) )(exists ((|v4:7_st| RealState) (val!3847 Real) )(forall ((|v3:8| Real) )(forall ((|v2:9| Real) )(forall ((|v1:10| Real) )(forall ((|v0:11| Real) )(let ((?x1266 (- 20.0)))
 (let ((?x179 (+ (+ (+ (* 9.0 |v1:10|) (* 13.0 (rval2 |v7:4_st|))) (* 15.0 |v9:2|)) (* (- 12.0) (rval2 |v7:4_st|)))))
 (let ((?x114 (- 4.0)))
 (let ((?x799 (+ (+ (+ (* (- 13.0) (rval2 |v6:5_st|)) (* 16.0 |v3:8|)) (* 13.0 |v11:0|)) (* 12.0 |v10:1|))))
 (let ((?x2868 (- 9.0)))
 (let ((?x1247 (* ?x2868 |v1:10|)))
 (let ((?x1452 (+ (* (- 1.0) |v0:11|) (* (- 6.0) |v2:9|))))
 (let ((?x287 (- 5.0)))
 (let ((?x1992 (* 15.0 |v2:9|)))
 (let ((?x2410 (+ (+ (* (- 6.0) (rval2 |v6:5_st|)) (* 0.0 |v0:11|)) (* (- 14.0) |v9:2|))))
 (let (($x1635 (or (<= (+ ?x2410 ?x1992) ?x287) (<= (+ (+ ?x1452 (* (- 2.0) |v11:0|)) ?x1247) 1.0))))
 (let (($x1825 (<= (+ (+ (+ (* 3.0 |v1:10|) |v11:0|) (* (- 10.0) |v2:9|)) (* ?x114 |v8:3|)) 1.0)))
 (let ((?x2762 (- 16.0)))
 (let ((?x1002 (+ (+ (* (- 8.0) |v11:0|) (* 19.0 (rval2 |v7:4_st|))) (* (- 10.0) (rval2 |v6:5_st|)))))
 (let ((?x446 (+ (+ (* (- 15.0) |v8:3|) (* (- 19.0) (rval2 |v4:7_st|))) (* (- 18.0) |v11:0|))))
 (let (($x259 (and (<= (+ ?x446 (* 17.0 (rval2 |v6:5_st|))) 18.0) (<= (+ ?x1002 (* 15.0 (rval2 |v7:4_st|))) ?x2762))))
 (let ((?x2727 (- 6.0)))
 (let ((?x1581 (* 12.0 |v3:8|)))
 (let ((?x2367 (+ (+ (* 0.0 |v8:3|) (* (- 1.0) (rval2 |v7:4_st|))) (* (- 19.0) |v9:2|))))
 (let ((?x2543 (- 19.0)))
 (let ((?x1926 (+ (+ (+ (* 2.0 |v11:0|) (* ?x2543 (rval2 |v6:5_st|))) (* ?x2543 |v0:11|)) (* 14.0 (rval2 |v6:5_st|)))))
 (let ((?x176 (* 13.0 |v3:8|)))
 (let ((?x2287 (+ (+ (+ (* 18.0 |v9:2|) (* (- 11.0) (rval2 |v6:5_st|))) (* ?x2868 |v10:1|)) ?x176)))
 (let ((?x1003 (- 7.0)))
 (let ((?x2539 (- 17.0)))
 (let ((?x1566 (* ?x2539 |v2:9|)))
 (let ((?x961 (+ (+ (+ (* ?x2762 (rval2 |v6:5_st|)) (* 20.0 |v10:1|)) (* ?x2868 (rval2 |v6:5_st|))) ?x1566)))
 (let (($x2019 (and (or (<= ?x961 ?x1003) (<= ?x2287 0.0)) (or (<= ?x1926 ?x2543) (<= (+ ?x2367 ?x1581) ?x2727)))))
 (let ((?x1249 (- 14.0)))
 (let ((?x1633 (* ?x114 |v2:9|)))
 (let ((?x2582 (+ (+ (+ (* 3.0 |v11:0|) (* 20.0 (rval2 |v4:7_st|))) (* (- 18.0) |v1:10|)) ?x1633)))
 (let ((?x228 (- 18.0)))
 (let ((?x217 (rval2 |v4:7_st|)))
 (let ((?x188 (* ?x114 ?x217)))
 (let ((?x2931 (+ (+ (+ (* 13.0 |v0:11|) (* 11.0 (rval2 |v5:6_st|))) ?x188) (* ?x2868 |v11:0|))))
 (let ((?x2498 (- 15.0)))
 (let (($x462 (<= (+ (+ (+ ?x188 (* ?x2727 ?x217)) (* (- 3.0) |v9:2|)) (* ?x1249 |v8:3|)) ?x2498)))
 (let ((?x607 (* 7.0 |v0:11|)))
 (let ((?x94 (+ (+ (+ (* 14.0 |v8:3|) (* 18.0 |v9:2|)) (* (- 8.0) |v3:8|)) ?x607)))
 (let (($x1631 (and (or (or (<= ?x94 19.0) $x462) (and (<= ?x2931 ?x228) (<= ?x2582 ?x1249))) $x2019)))
 (let (($x2554 (and $x1631 (or (or $x259 $x1825) (and $x1635 (or (<= ?x799 ?x114) (<= ?x179 ?x1266)))))))
 (let ((?x1137 (- 11.0)))
 (let ((?x706 (+ (+ (+ (* (- 8.0) |v3:8|) (* ?x1266 (rval2 |v5:6_st|))) (* 15.0 |v0:11|)) (* ?x2539 (rval2 |v6:5_st|)))))
 (let ((?x2652 (* ?x1003 |v1:10|)))
 (let (($x2755 (<= (+ (+ (+ (* ?x1003 |v8:3|) (* ?x287 |v3:8|)) (* 4.0 |v9:2|)) ?x2652) 3.0)))
 (let ((?x1313 (- 10.0)))
 (let ((?x2742 (* ?x1313 |v1:10|)))
 (let ((?x30 (+ (+ (+ (* (- 8.0) |v1:10|) (* 9.0 ?x217)) (* 0.0 |v3:8|)) ?x2742)))
 (let ((?x1205 (+ (+ (+ (* (- 1.0) ?x217) (* 9.0 |v11:0|)) (* ?x2498 |v3:8|)) (* 17.0 |v8:3|))))
 (let ((?x559 (* ?x2543 |v0:11|)))
 (let ((?x1030 (+ (+ (+ (* 4.0 ?x217) (* (- 13.0) |v2:9|)) (* 16.0 |v0:11|)) ?x559)))
 (let (($x2572 (<= (+ (+ (+ (* 6.0 |v10:1|) (* (- 8.0) |v2:9|)) (* ?x1313 |v0:11|)) ?x1633) 10.0)))
 (let (($x2035 (and (or $x2572 (<= ?x1030 ?x2868)) (and (<= ?x1205 5.0) (<= ?x30 ?x287)))))
 (let ((?x2144 (+ (+ (+ (* 13.0 |v8:3|) (* 0.0 |v11:0|)) (* 5.0 |v1:10|)) (* ?x114 (rval2 |v5:6_st|)))))
 (let ((?x93 (- 2.0)))
 (let ((?x271 (* 18.0 |v0:11|)))
 (let ((?x1542 (+ (+ (+ (* (- 3.0) |v1:10|) (* ?x1249 ?x217)) (* ?x1266 (rval2 |v5:6_st|))) ?x271)))
 (let ((?x2829 (+ (+ (+ (* 4.0 |v2:9|) (* 18.0 (rval2 |v5:6_st|))) (* 2.0 |v3:8|)) (* ?x1249 (rval2 |v5:6_st|)))))
 (let ((?x2106 (+ (+ (+ (* 0.0 ?x217) (* (- 12.0) (rval2 |v5:6_st|))) (* ?x287 |v8:3|)) |v10:1|)))
 (let ((?x2990 (- 1.0)))
 (let ((?x642 (* ?x2990 |v2:9|)))
 (let ((?x2961 (+ (+ (+ (* 0.0 ?x217) (* ?x93 |v2:9|)) (* 18.0 (rval2 |v6:5_st|))) ?x642)))
 (let ((?x2401 (* ?x2539 |v1:10|)))
 (let ((?x1866 (+ (+ (+ (* ?x2543 |v11:0|) (* ?x2539 (rval2 |v5:6_st|))) (* 3.0 |v8:3|)) ?x2401)))
 (let (($x2230 (or (or (<= ?x1866 ?x1266) (<= ?x2961 ?x1137)) (and (<= ?x2106 3.0) (<= ?x2829 2.0)))))
 (let ((?x2664 (* 8.0 |v11:0|)))
 (let (($x64 (<= (+ (+ (+ (* 10.0 (rval2 |v5:6_st|)) (* 17.0 |v11:0|)) ?x1581) ?x2664) 17.0)))
 (let ((?x550 (* 20.0 |v1:10|)))
 (let ((?x522 (+ (+ (+ (* 14.0 |v11:0|) (* ?x1266 |v1:10|)) (* (- 3.0) (rval2 |v5:6_st|))) ?x550)))
 (let ((?x1544 (+ (+ (+ (* (- 8.0) ?x217) (* (- 13.0) |v3:8|)) (* ?x287 |v8:3|)) (* ?x2539 |v9:2|))))
 (let ((?x2771 (rval2 |v5:6_st|)))
 (let ((?x1752 (* 5.0 ?x2771)))
 (let (($x2656 (<= (+ (+ (+ (* ?x1249 ?x217) (* ?x114 |v11:0|)) (* ?x1313 ?x2771)) ?x1752) ?x287)))
 (let ((?x1985 (- 3.0)))
 (let ((?x1455 (* ?x1985 |v0:11|)))
 (let (($x1980 (<= (+ (+ (+ (* ?x1266 ?x217) (* (- 8.0) |v8:3|)) (* 14.0 |v1:10|)) ?x1455) ?x2543)))
 (let (($x1720 (and $x1980 (and (or (or $x2656 (<= ?x1544 ?x1137)) (or (<= ?x522 ?x2539) $x64)) $x2230))))
 (let (($x2198 (or (or $x1720 (or (or (or (<= ?x1542 ?x93) (<= ?x2144 0.0)) $x2035) $x2755)) (or (<= ?x706 ?x1137) $x2554))))
 (let (($x3027 (not (= |v4:7_st| (RMk1 val!3847)))))
 (let (($x820 (not (= |v5:6_st| (RMk1 val!3846)))))
 (let (($x1286 (not (= |v6:5_st| (RMk1 val!3845)))))
 (let (($x2483 (not (= |v7:4_st| (RMk1 val!3844)))))
 (and $x2483 $x1286 $x820 $x3027 $x2198))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
