; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v11:0| Real) )(forall ((|v10:1| Real) )(forall ((|v9:2| Real) )(forall ((|v8:3| Real) )(exists ((|v7:4_st| RealState) (val!3784 Real) )(exists ((|v6:5_st| RealState) (val!3785 Real) )(exists ((|v5:6_st| RealState) (val!3786 Real) )(exists ((|v4:7_st| RealState) (val!3787 Real) )(forall ((|v3:8| Real) )(forall ((|v2:9| Real) )(forall ((|v1:10| Real) )(forall ((|v0:11| Real) )(let ((?x102 (- 13.0)))
 (let ((?x1266 (- 20.0)))
 (let ((?x1250 (* ?x1266 |v2:9|)))
 (let ((?x2539 (* 12.0 |v11:0|)))
 (let ((?x2226 (+ (+ (+ (* 0.0 (rval2 |v5:6_st|)) (* 13.0 (rval2 |v4:7_st|))) ?x2539) ?x1250)))
 (let ((?x493 (* 2.0 |v10:1|)))
 (let (($x2108 (<= (+ (+ (+ (* 4.0 |v11:0|) (* 18.0 |v0:11|)) (* 7.0 |v9:2|)) ?x493) 1.0)))
 (let ((?x1154 (- 7.0)))
 (let ((?x2837 (* 16.0 |v9:2|)))
 (let ((?x2196 (+ (+ (+ (* 14.0 (rval2 |v4:7_st|)) (* ?x1266 |v10:1|)) (* (- 6.0) |v11:0|)) ?x2837)))
 (let ((?x1137 (- 11.0)))
 (let ((?x2811 (+ (+ (+ (* (- 2.0) |v3:8|) |v8:3|) (* (- 4.0) |v0:11|)) (* 17.0 (rval2 |v5:6_st|)))))
 (let ((?x2305 (* 10.0 |v0:11|)))
 (let ((?x2071 (+ (+ (+ (* (- 6.0) |v11:0|) (* 9.0 |v1:10|)) (* (- 2.0) |v8:3|)) ?x2305)))
 (let (($x306 (and (and (<= ?x2071 4.0) (<= ?x2811 ?x1137)) (or (<= ?x2196 ?x1154) $x2108))))
 (let ((?x93 (- 2.0)))
 (let ((?x1534 (* ?x93 |v8:3|)))
 (let (($x1535 (<= (+ (+ (+ |v9:2| (* (- 8.0) |v2:9|)) (* 5.0 (rval2 |v5:6_st|))) ?x1534) 4.0)))
 (let ((?x287 (- 5.0)))
 (let ((?x2661 (* ?x287 |v3:8|)))
 (let ((?x3151 (+ (+ (+ (* ?x1266 |v0:11|) (* (- 15.0) (rval2 |v4:7_st|))) ?x2661) (* ?x102 (rval2 |v5:6_st|)))))
 (let ((?x1362 (* ?x1154 |v2:9|)))
 (let ((?x3086 (+ (+ (+ (* (- 6.0) (rval2 |v6:5_st|)) (* (- 10.0) |v10:1|)) ?x1362) (* 19.0 (rval2 |v6:5_st|)))))
 (let ((?x217 (rval2 |v4:7_st|)))
 (let ((?x2852 (* 14.0 ?x217)))
 (let ((?x2498 (- 15.0)))
 (let ((?x125 (* ?x2498 |v1:10|)))
 (let (($x3138 (<= (+ (+ (+ (* (- 18.0) |v2:9|) (* 10.0 (rval2 |v5:6_st|))) ?x125) ?x2852) 1.0)))
 (let ((?x3128 (+ (+ (+ (* 5.0 |v2:9|) (* (- 9.0) |v9:2|)) (* (- 10.0) |v8:3|)) (* ?x1154 |v11:0|))))
 (let ((?x2868 (- 9.0)))
 (let ((?x66 (* ?x2868 |v1:10|)))
 (let ((?x3066 (+ (+ (+ (* 9.0 (rval2 |v6:5_st|)) (* ?x2498 |v11:0|)) (* (- 14.0) |v10:1|)) ?x66)))
 (let ((?x2505 (- 10.0)))
 (let ((?x1249 (- 14.0)))
 (let ((?x1734 (* ?x1249 |v2:9|)))
 (let ((?x1105 (+ (+ (* 20.0 |v3:8|) (* (- 8.0) (rval2 |v7:4_st|))) (* (- 12.0) ?x217))))
 (let ((?x2771 (rval2 |v5:6_st|)))
 (let ((?x885 (* 7.0 ?x2771)))
 (let (($x1881 (<= (+ (+ (+ (* (- 1.0) |v11:0|) |v3:8|) (* ?x1266 |v0:11|)) ?x885) 5.0)))
 (let (($x1164 (or (or $x1881 (<= (+ ?x1105 ?x1734) ?x2505)) (or (<= ?x3066 6.0) (<= ?x3128 ?x287)))))
 (let ((?x12 (- 8.0)))
 (let ((?x3197 (+ (+ (+ (* 13.0 (rval2 |v7:4_st|)) (* (- 6.0) ?x217)) (* 11.0 |v9:2|)) (* ?x1266 ?x2771))))
 (let ((?x2520 (* 2.0 |v3:8|)))
 (let (($x2569 (<= (+ (+ (+ (* ?x1266 |v8:3|) (* ?x1154 ?x2771)) (* ?x2868 |v8:3|)) ?x2520) 2.0)))
 (let ((?x2181 (* 7.0 |v3:8|)))
 (let (($x2237 (<= (+ (+ (+ (* (- 4.0) |v8:3|) (* 20.0 |v9:2|)) (* ?x2868 |v11:0|)) ?x2181) 5.0)))
 (let ((?x2333 (- 1.0)))
 (let ((?x1832 (+ (+ (+ ?x493 (* (- 6.0) (rval2 |v7:4_st|))) (* (- 18.0) |v0:11|)) (* ?x1137 ?x2771))))
 (let (($x2749 (or (and (or (and (<= ?x1832 ?x2333) $x2237) (and $x2569 (<= ?x3197 ?x12))) $x1164) (or (or (and $x3138 (<= ?x3086 ?x287)) (or (<= ?x3151 19.0) $x1535)) $x306))))
 (let ((?x2762 (- 16.0)))
 (let ((?x2156 (* ?x2505 |v8:3|)))
 (let ((?x2550 (+ (+ (+ (* 10.0 (rval2 |v6:5_st|)) (* ?x2868 ?x217)) (* 19.0 |v9:2|)) ?x2156)))
 (let ((?x2939 (+ (+ (+ (* (- 12.0) |v9:2|) (* ?x2505 (rval2 |v7:4_st|))) (* 16.0 |v10:1|)) (* (- 18.0) |v8:3|))))
 (let ((?x3054 (+ (+ (+ (* 6.0 (rval2 |v6:5_st|)) (* 13.0 |v3:8|)) (* ?x1249 ?x2771)) (* ?x1154 |v10:1|))))
 (let ((?x2092 (- 12.0)))
 (let ((?x1654 (* ?x2092 |v0:11|)))
 (let ((?x27 (+ (+ (+ (* ?x1137 (rval2 |v7:4_st|)) (* ?x2092 |v10:1|)) ?x1654) (* 16.0 (rval2 |v7:4_st|)))))
 (let ((?x1672 (+ (+ (+ (* ?x93 |v11:0|) (* ?x1266 ?x217)) (* ?x1137 (rval2 |v7:4_st|))) (* 19.0 |v8:3|))))
 (let (($x2086 (and (or (<= ?x1672 9.0) (<= ?x27 19.0)) (and (<= ?x3054 ?x102) (<= ?x2939 11.0)))))
 (let ((?x1985 (- 3.0)))
 (let (($x1236 (<= (+ (+ (+ (* 15.0 ?x2771) (* 9.0 |v2:9|)) (* ?x1985 ?x2771)) ?x66) ?x1985)))
 (let ((?x954 (* 3.0 |v1:10|)))
 (let ((?x2806 (+ (+ (+ (* 6.0 (rval2 |v7:4_st|)) (* ?x2868 |v10:1|)) (* ?x102 |v9:2|)) ?x954)))
 (let ((?x1399 (+ (+ (+ (* ?x12 (rval2 |v6:5_st|)) (* 7.0 (rval2 |v6:5_st|))) (* ?x2092 |v9:2|)) (* (- 19.0) ?x217))))
 (let ((?x2193 (* ?x2505 |v0:11|)))
 (let (($x2719 (<= (+ (+ (+ (* ?x102 |v0:11|) (* 0.0 |v2:9|)) (* (- 6.0) |v11:0|)) ?x2193) ?x287)))
 (let ((?x2694 (+ (+ (+ (* (- 4.0) (rval2 |v6:5_st|)) (* 0.0 |v1:10|)) (* ?x2762 |v10:1|)) (* 6.0 |v9:2|))))
 (let (($x2718 (and (and (<= ?x2694 5.0) $x2719) (or (<= ?x1399 16.0) (<= ?x2806 ?x1249)))))
 (let ((?x1225 (+ (+ (+ (* 15.0 |v11:0|) (* ?x12 |v11:0|)) (* ?x2092 (rval2 |v6:5_st|))) (* ?x1249 (rval2 |v7:4_st|)))))
 (let ((?x2726 (+ (+ (* 13.0 (rval2 |v6:5_st|)) (* (- 18.0) |v0:11|)) (* ?x93 (rval2 |v6:5_st|)))))
 (let ((?x1637 (- 17.0)))
 (let ((?x2172 (+ (+ (+ (* ?x2092 |v3:8|) (* ?x2333 |v10:1|)) (* ?x93 |v1:10|)) (* ?x2092 |v8:3|))))
 (let ((?x2116 (+ (+ (+ (* ?x2868 |v8:3|) (* ?x2333 (rval2 |v7:4_st|))) (* 9.0 |v8:3|)) |v2:9|)))
 (let (($x1307 (or (or (<= ?x2116 14.0) (<= ?x2172 ?x1637)) (or (<= (+ ?x2726 (* 8.0 |v11:0|)) 18.0) (<= ?x1225 4.0)))))
 (let (($x1355 (and (or (or (and $x1307 $x2718) (or $x1236 $x2086)) (<= ?x2550 ?x2762)) (and $x2749 (<= ?x2226 ?x102)))))
 (let (($x3027 (not (= |v4:7_st| (RMk1 val!3787)))))
 (let (($x820 (not (= |v5:6_st| (RMk1 val!3786)))))
 (let (($x1286 (not (= |v6:5_st| (RMk1 val!3785)))))
 (let (($x2483 (not (= |v7:4_st| (RMk1 val!3784)))))
 (and $x2483 $x1286 $x820 $x3027 $x1355)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
