; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!8694 Real) )(exists ((|v10:7_st| RealState) (val!8695 Real) )(exists ((|v9:8_st| RealState) (val!8696 Real) )(exists ((|v8:9_st| RealState) (val!8697 Real) )(exists ((|v7:10_st| RealState) (val!8698 Real) )(exists ((|v6:11_st| RealState) (val!8699 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x1850 (* (- 3.0) |v3:14|)))
 (let ((?x372 (rval2 |v8:9_st|)))
 (let ((?x1167 (* 8.0 ?x372)))
 (let (($x2955 (<= (+ (+ (+ (* (- 6.0) |v4:13|) (* (- 13.0) |v13:4|)) ?x1167) ?x1850) 1.0)))
 (let ((?x883 (* 15.0 |v16:1|)))
 (let ((?x1168 (+ (+ (* (- 14.0) (rval2 |v11:6_st|)) (* 6.0 |v1:16|)) (* 14.0 (rval2 |v6:11_st|)))))
 (let ((?x361 (- 7.0)))
 (let ((?x192 (- 10.0)))
 (let ((?x317 (* ?x192 |v4:13|)))
 (let ((?x2294 (+ (+ (+ (* (- 9.0) (rval2 |v11:6_st|)) (* (- 16.0) |v17:0|)) ?x317) (* ?x192 ?x372))))
 (let ((?x3427 (+ (+ (* (- 6.0) (rval2 |v9:8_st|)) (* (- 16.0) |v0:17|)) (* 11.0 |v16:1|))))
 (let ((?x279 (+ (+ (+ (* 11.0 |v2:15|) (* (- 13.0) |v13:4|)) (* (- 6.0) ?x372)) (* 16.0 (rval2 |v9:8_st|)))))
 (let (($x1103 (or (<= ?x279 13.0) (<= (+ ?x3427 (* (- 12.0) (rval2 |v6:11_st|))) 14.0))))
 (let ((?x521 (+ (+ (+ (* (- 15.0) |v12:5|) (* (- 17.0) |v13:4|)) (* ?x192 |v0:17|)) (* 12.0 |v13:4|))))
 (let (($x1620 (or (and (<= ?x521 18.0) $x1103) (or (<= ?x2294 ?x361) (and (<= (+ ?x1168 ?x883) 1.0) $x2955)))))
 (let ((?x1849 (- 4.0)))
 (let ((?x3025 (* ?x1849 ?x372)))
 (let (($x2902 (<= (+ (+ (+ ?x3025 (* 9.0 (rval2 |v10:7_st|))) (* (- 8.0) |v14:3|)) ?x3025) 17.0)))
 (let ((?x295 (- 11.0)))
 (let ((?x1814 (- 19.0)))
 (let ((?x2518 (* ?x1814 |v2:15|)))
 (let ((?x1829 (rval2 |v11:6_st|)))
 (let ((?x2355 (* 6.0 ?x1829)))
 (let (($x2303 (<= (+ (+ (+ (* 14.0 ?x1829) (* (- 2.0) |v14:3|)) ?x2355) ?x2518) ?x295)))
 (let ((?x3384 (rval2 |v10:7_st|)))
 (let ((?x3291 (* 5.0 ?x3384)))
 (let (($x1015 (<= (+ (+ (+ (* 17.0 (rval2 |v9:8_st|)) (* 14.0 ?x372)) ?x2355) ?x3291) ?x1849)))
 (let (($x2632 (or (<= (+ (+ (+ (* 7.0 ?x372) |v13:4|) (* ?x295 |v17:0|)) ?x883) 0.0) $x1015)))
 (let ((?x817 (* 2.0 |v5:12|)))
 (let ((?x793 (+ (+ (+ (* (- 5.0) (rval2 |v6:11_st|)) ?x883) (* (- 6.0) |v12:5|)) ?x817)))
 (let ((?x1004 (- 15.0)))
 (let ((?x3327 (* ?x1004 |v12:5|)))
 (let ((?x1674 (rval2 |v9:8_st|)))
 (let ((?x2643 (* 6.0 ?x1674)))
 (let (($x2420 (<= (+ (+ (+ (* (- 14.0) ?x3384) (* (- 13.0) |v4:13|)) ?x2643) ?x3327) ?x1814)))
 (let ((?x2334 (* 18.0 |v0:17|)))
 (let ((?x2302 (- 13.0)))
 (let ((?x502 (* ?x2302 |v16:1|)))
 (let (($x837 (<= (+ (+ (+ (* 12.0 |v0:17|) (* (- 17.0) (rval2 |v7:10_st|))) ?x502) ?x2334) ?x1004)))
 (let ((?x1759 (+ (+ (+ (* (- 14.0) ?x3384) (* 12.0 |v15:2|)) (* (- 12.0) ?x3384)) ?x502)))
 (let (($x2516 (and (or (or (<= ?x1759 ?x2302) $x837) (or $x2420 (<= ?x793 3.0))) (or $x2632 (and $x2303 $x2902)))))
 (let ((?x2431 (- 14.0)))
 (let ((?x2751 (rval2 |v6:11_st|)))
 (let ((?x1089 (* 17.0 ?x2751)))
 (let ((?x3057 (+ (+ (+ (* ?x295 (rval2 |v7:10_st|)) (* 9.0 |v17:0|)) (* 15.0 |v5:12|)) ?x1089)))
 (let ((?x400 (* 9.0 |v5:12|)))
 (let (($x1229 (<= (+ (+ (+ (* 6.0 ?x3384) (* ?x1814 ?x1829)) (* (- 17.0) |v14:3|)) ?x400) 9.0)))
 (let ((?x3278 (* 13.0 |v12:5|)))
 (let (($x2317 (<= (+ (+ (+ (* 8.0 |v14:3|) (* 3.0 |v16:1|)) (* 7.0 |v16:1|)) ?x3278) 20.0)))
 (let ((?x199 (+ (+ (+ (* ?x2431 |v4:13|) (* 10.0 (rval2 |v7:10_st|))) (* (- 20.0) |v1:16|)) (* (- 9.0) ?x372))))
 (let ((?x3198 (- 5.0)))
 (let ((?x3002 (+ (+ (+ (* 20.0 |v14:3|) (* 9.0 |v17:0|)) (* ?x1004 (rval2 |v7:10_st|))) (* (- 2.0) ?x372))))
 (let ((?x2130 (+ (+ (+ (* (- 20.0) |v13:4|) (* ?x2431 |v14:3|)) (* ?x1849 |v3:14|)) (* (- 2.0) ?x1829))))
 (let ((?x385 (* ?x3198 |v5:12|)))
 (let (($x549 (<= (+ (+ (+ (* (- 16.0) |v1:16|) (* ?x2431 |v2:15|)) (* 17.0 |v16:1|)) ?x385) ?x2302)))
 (let ((?x2456 (+ (+ (+ (* 16.0 |v13:4|) (* ?x1849 |v3:14|)) (* 8.0 |v13:4|)) (* (- 16.0) ?x2751))))
 (let (($x2831 (or (and (or (<= ?x2456 ?x2302) $x549) (or (<= ?x2130 3.0) (<= ?x3002 ?x3198))) (or (or (<= ?x199 2.0) $x2317) (and $x1229 (<= ?x3057 ?x2431))))))
 (let ((?x2282 (- 2.0)))
 (let ((?x718 (* 11.0 |v3:14|)))
 (let (($x681 (<= (+ (+ (+ (* (- 18.0) |v17:0|) (* ?x2431 |v16:1|)) (* 18.0 ?x372)) ?x718) ?x2282)))
 (let ((?x1001 (+ (+ (+ (* 13.0 (rval2 |v7:10_st|)) (* 5.0 |v17:0|)) (* 0.0 |v3:14|)) (* ?x3198 |v13:4|))))
 (let (($x2254 (<= (+ (+ (+ (* 13.0 |v1:16|) (* ?x2302 ?x1829)) (* (- 17.0) |v0:17|)) ?x1674) 16.0)))
 (let ((?x3481 (* 15.0 |v12:5|)))
 (let ((?x3233 (+ (+ (+ (* (- 16.0) |v4:13|) (* 12.0 |v15:2|)) (* ?x361 (rval2 |v7:10_st|))) ?x3481)))
 (let ((?x1130 (- 17.0)))
 (let ((?x2149 (- 18.0)))
 (let ((?x2093 (* ?x2149 |v0:17|)))
 (let ((?x1525 (+ (+ (+ (* 6.0 |v3:14|) (* 15.0 ?x3384)) (* 4.0 (rval2 |v7:10_st|))) ?x2093)))
 (let ((?x535 (- 16.0)))
 (let ((?x2862 (* ?x535 |v1:16|)))
 (let (($x1579 (<= (+ (+ (+ (* ?x535 |v16:1|) (* ?x2431 |v13:4|)) (* 20.0 |v17:0|)) ?x2862) 14.0)))
 (let ((?x2592 (+ (+ (+ (* 18.0 ?x1674) (* 12.0 ?x2751)) (* ?x3198 |v17:0|)) (* (- 1.0) |v12:5|))))
 (let (($x3220 (and (and (<= ?x2592 10.0) (and $x1579 (<= ?x1525 ?x1130))) (and (or (<= ?x3233 4.0) $x2254) (or (<= ?x1001 13.0) $x681)))))
 (let ((?x913 (+ (+ (+ (* (- 9.0) (rval2 |v7:10_st|)) (* 11.0 |v4:13|)) (* ?x2282 |v16:1|)) ?x400)))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!8699)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!8698)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!8697)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!8696)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!8695)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!8694)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 (or (<= ?x913 2.0) (and (or $x3220 $x2831) (and $x2516 $x1620)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
