; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!6900 Real) )(exists ((|v10:7_st| RealState) (val!6901 Real) )(exists ((|v9:8_st| RealState) (val!6902 Real) )(exists ((|v8:9_st| RealState) (val!6903 Real) )(exists ((|v7:10_st| RealState) (val!6904 Real) )(exists ((|v6:11_st| RealState) (val!6905 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x1774 (- 11.0)))
 (let ((?x754 (rval2 |v10:7_st|)))
 (let ((?x681 (* 20.0 ?x754)))
 (let ((?x1176 (rval2 |v8:9_st|)))
 (let ((?x2503 (- 3.0)))
 (let ((?x639 (* ?x2503 ?x1176)))
 (let (($x3055 (<= (+ (+ (+ (* (- 14.0) |v5:12|) (* 3.0 (rval2 |v11:6_st|))) ?x639) ?x681) ?x1774)))
 (let ((?x961 (- 2.0)))
 (let ((?x3250 (* 19.0 |v14:3|)))
 (let (($x2360 (<= (+ (+ (+ (* 17.0 |v17:0|) ?x681) (* 16.0 (rval2 |v9:8_st|))) ?x3250) ?x961)))
 (let ((?x3193 (* 12.0 |v0:17|)))
 (let ((?x136 (+ (+ (* 14.0 ?x754) (* 12.0 (rval2 |v7:10_st|))) (* (- 1.0) (rval2 |v7:10_st|)))))
 (let ((?x2572 (- 4.0)))
 (let ((?x2755 (* ?x2572 |v5:12|)))
 (let ((?x3448 (+ (+ (* 6.0 (rval2 |v7:10_st|)) (* (- 12.0) (rval2 |v9:8_st|))) (* (- 8.0) |v16:1|))))
 (let (($x1346 (or (and (<= (+ ?x3448 ?x2755) ?x1774) (<= (+ ?x136 ?x3193) 8.0)) (or $x2360 $x3055))))
 (let ((?x496 (- 19.0)))
 (let ((?x2181 (+ (+ (+ (* (- 10.0) ?x1176) (* (- 18.0) ?x754)) (* ?x496 |v15:2|)) (* (- 6.0) |v12:5|))))
 (let ((?x965 (+ (+ (+ (* 14.0 |v1:16|) (* 5.0 |v5:12|)) (* ?x2503 |v3:14|)) (* (- 12.0) |v5:12|))))
 (let (($x802 (<= ?x965 ?x961)))
 (let ((?x1816 (rval2 |v11:6_st|)))
 (let ((?x3438 (* 3.0 ?x1816)))
 (let (($x3240 (<= (+ (+ (+ (* 17.0 |v14:3|) (* ?x496 |v14:3|)) (* 20.0 |v0:17|)) ?x3438) 5.0)))
 (let ((?x3051 (rval2 |v9:8_st|)))
 (let ((?x1195 (* 13.0 ?x3051)))
 (let (($x1544 (<= (+ (+ (+ (* 9.0 |v16:1|) (* 17.0 |v2:15|)) (* 13.0 |v12:5|)) ?x1195) 14.0)))
 (let ((?x1363 (+ (+ (+ ?x1816 (* (- 1.0) ?x3051)) (* (- 7.0) |v4:13|)) (* ?x2503 ?x754))))
 (let ((?x1895 (* 15.0 |v3:14|)))
 (let ((?x1557 (+ (+ (+ (* 18.0 ?x1176) (* 2.0 ?x754)) (* 9.0 (rval2 |v6:11_st|))) ?x1895)))
 (let ((?x2946 (- 12.0)))
 (let ((?x2485 (+ (+ (* (- 9.0) |v2:15|) (* (- 15.0) (rval2 |v7:10_st|))) (* (- 1.0) (rval2 |v6:11_st|)))))
 (let ((?x2348 (- 20.0)))
 (let ((?x1598 (+ (+ (+ (* ?x2946 |v17:0|) (* 14.0 ?x1176)) (* 17.0 |v17:0|)) (* (- 7.0) |v14:3|))))
 (let (($x1272 (or (or (<= ?x1598 ?x2348) (<= (+ ?x2485 (* ?x2572 ?x1176)) ?x2946)) (or (<= ?x1557 20.0) (<= ?x1363 20.0)))))
 (let ((?x1319 (- 13.0)))
 (let ((?x2407 (* ?x2572 |v12:5|)))
 (let (($x2807 (<= (+ (+ (+ (* 14.0 |v15:2|) (* ?x2946 ?x754)) (* (- 16.0) |v0:17|)) ?x2407) ?x1319)))
 (let ((?x1429 (* ?x961 |v1:16|)))
 (let (($x613 (<= (+ (+ (+ (* (- 8.0) ?x1176) (* ?x961 |v3:14|)) (* 10.0 ?x1816)) ?x1429) 16.0)))
 (let ((?x2009 (+ (+ (+ (* 8.0 |v15:2|) (* (- 6.0) |v5:12|)) (* 13.0 |v1:16|)) (* ?x496 ?x1816))))
 (let ((?x2272 (* 15.0 |v0:17|)))
 (let ((?x1299 (+ (+ (* 11.0 (rval2 |v7:10_st|)) (* (- 1.0) |v12:5|)) (* (- 10.0) |v15:2|))))
 (let (($x1625 (and (and (<= (+ ?x1299 ?x2272) 4.0) (<= ?x2009 10.0)) (or $x613 $x2807))))
 (let (($x673 (or (or $x1625 $x1272) (and (or (and $x1544 $x3240) (or $x802 (<= ?x2181 ?x496))) $x1346))))
 (let ((?x2387 (- 1.0)))
 (let ((?x642 (* ?x2387 |v5:12|)))
 (let ((?x3436 (+ (+ (+ (* 11.0 (rval2 |v6:11_st|)) (* 20.0 ?x1176)) (* 9.0 |v16:1|)) ?x642)))
 (let ((?x746 (* 5.0 |v5:12|)))
 (let (($x3400 (<= (+ (+ (+ (* (- 15.0) |v0:17|) (* 2.0 ?x754)) (* ?x2387 |v16:1|)) ?x746) ?x2348)))
 (let ((?x1808 (+ (+ (+ (* 13.0 |v1:16|) (* 2.0 ?x1176)) (* ?x2572 ?x1816)) (* (- 9.0) |v13:4|))))
 (let ((?x1709 (- 16.0)))
 (let ((?x406 (* 12.0 |v5:12|)))
 (let ((?x3422 (+ (+ (+ (* 20.0 |v16:1|) (* (- 5.0) |v12:5|)) (* 20.0 |v13:4|)) ?x406)))
 (let (($x2250 (and (and (<= ?x3422 ?x1709) (<= ?x1808 ?x961)) (or $x3400 (<= ?x3436 3.0)))))
 (let ((?x2655 (+ (+ (* 4.0 |v5:12|) (* 7.0 |v0:17|)) (* ?x961 |v2:15|))))
 (let ((?x1724 (+ (+ (+ ?x639 (* 14.0 |v1:16|)) (* 13.0 |v17:0|)) (* (- 9.0) (rval2 |v6:11_st|)))))
 (let ((?x1257 (rval2 |v6:11_st|)))
 (let ((?x3369 (* ?x2946 ?x1257)))
 (let ((?x2036 (+ (+ (+ (* (- 8.0) |v17:0|) (* ?x1774 |v1:16|)) (* ?x2348 (rval2 |v7:10_st|))) ?x3369)))
 (let (($x3255 (<= (+ (+ (+ (* 8.0 |v0:17|) (* 0.0 ?x3051)) ?x681) (* 8.0 |v16:1|)) 11.0)))
 (let (($x1392 (or (and $x3255 (<= ?x2036 1.0)) (and (<= ?x1724 15.0) (<= (+ ?x2655 (* (- 9.0) |v15:2|)) 0.0)))))
 (let ((?x1127 (+ (+ (+ (* 16.0 ?x1257) (* 12.0 |v17:0|)) (* 5.0 |v3:14|)) (* 0.0 ?x754))))
 (let (($x2146 (or (<= (+ (+ (+ (* ?x961 |v3:14|) ?x2407) (* 4.0 ?x1176)) ?x1257) 19.0) (<= ?x1127 ?x1319))))
 (let (($x3083 (<= (+ (+ (+ (* 9.0 ?x3051) (* 14.0 ?x1257)) (* 5.0 |v12:5|)) ?x3250) 12.0)))
 (let (($x3117 (<= (+ (+ (+ (* 4.0 ?x1816) (* 6.0 |v4:13|)) ?x3369) (* ?x2387 |v16:1|)) 7.0)))
 (let ((?x3460 (+ (+ (+ (* (- 15.0) |v12:5|) (* ?x1774 ?x3051)) (* 20.0 ?x1176)) (* (- 6.0) |v16:1|))))
 (let ((?x1382 (+ (+ (+ (* 6.0 ?x1816) (* (- 18.0) ?x754)) (* 12.0 |v16:1|)) (* ?x1709 ?x754))))
 (let ((?x1323 (+ (+ (+ (* ?x2572 |v4:13|) (* (- 15.0) ?x1176)) (* 10.0 |v5:12|)) (* 11.0 |v14:3|))))
 (let (($x3224 (or (or (<= ?x1323 17.0) (<= ?x1382 9.0)) (and (<= ?x3460 0.0) $x3117))))
 (let ((?x2112 (* 18.0 |v3:14|)))
 (let (($x2645 (<= (+ (+ (+ (* 17.0 |v13:4|) (* 3.0 |v1:16|)) (* ?x2348 |v3:14|)) ?x2112) 3.0)))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!6905)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!6904)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!6903)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!6902)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!6901)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!6900)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 (and $x2645 (or (and (and $x3224 (or $x3083 $x2146)) (or $x1392 $x2250)) $x673)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
