; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!7260 Real) )(exists ((|v10:7_st| RealState) (val!7261 Real) )(exists ((|v9:8_st| RealState) (val!7262 Real) )(exists ((|v8:9_st| RealState) (val!7263 Real) )(exists ((|v7:10_st| RealState) (val!7264 Real) )(exists ((|v6:11_st| RealState) (val!7265 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x514 (* 6.0 |v0:17|)))
 (let ((?x1962 (+ (+ (+ (* (- 19.0) |v14:3|) (* (- 18.0) (rval2 |v7:10_st|))) ?x514) (* 5.0 |v13:4|))))
 (let ((?x2340 (+ (+ (+ (* (- 7.0) |v2:15|) (* 9.0 (rval2 |v9:8_st|))) (* 7.0 |v4:13|)) (* (- 9.0) |v14:3|))))
 (let ((?x9 (* 9.0 |v12:5|)))
 (let ((?x2494 (* 4.0 |v0:17|)))
 (let ((?x1272 (+ (+ (+ (* (- 18.0) |v2:15|) (* (- 5.0) (rval2 |v9:8_st|))) ?x2494) ?x9)))
 (let ((?x511 (+ (+ (+ (* 2.0 (rval2 |v6:11_st|)) (* (- 18.0) |v2:15|)) (* 19.0 |v15:2|)) (* (- 1.0) |v12:5|))))
 (let ((?x194 (rval2 |v10:7_st|)))
 (let ((?x2515 (* 19.0 ?x194)))
 (let (($x430 (<= (+ (+ (+ (* 3.0 |v0:17|) (* 17.0 |v14:3|)) (* 6.0 |v14:3|)) ?x2515) 17.0)))
 (let (($x1105 (and (and $x430 (<= ?x511 8.0)) (and (<= ?x1272 16.0) (<= ?x2340 16.0)))))
 (let ((?x862 (- 16.0)))
 (let ((?x1367 (* 16.0 |v13:4|)))
 (let ((?x1275 (* 20.0 |v3:14|)))
 (let ((?x1300 (+ (+ (+ (* (- 5.0) (rval2 |v8:9_st|)) (* (- 9.0) |v0:17|)) ?x1275) ?x1367)))
 (let ((?x1093 (- 11.0)))
 (let ((?x2458 (rval2 |v6:11_st|)))
 (let ((?x2184 (* 10.0 ?x2458)))
 (let ((?x2191 (+ (+ (+ (* 16.0 ?x194) (* 2.0 |v3:14|)) (* (- 10.0) |v5:12|)) ?x2184)))
 (let ((?x2293 (+ (+ (+ (* 2.0 ?x194) (rval2 |v8:9_st|)) (* 17.0 |v1:16|)) (* (- 20.0) |v12:5|))))
 (let ((?x1021 (* 14.0 |v0:17|)))
 (let ((?x1357 (+ (+ (+ (* 4.0 (rval2 |v9:8_st|)) (* 13.0 |v14:3|)) (* (- 19.0) |v5:12|)) ?x1021)))
 (let (($x380 (and (and (<= ?x1357 4.0) (<= ?x2293 18.0)) (and (<= ?x2191 ?x1093) (<= ?x1300 ?x862)))))
 (let ((?x1810 (* 20.0 |v15:2|)))
 (let ((?x469 (+ (+ (+ (* 0.0 (rval2 |v7:10_st|)) (* (- 17.0) (rval2 |v7:10_st|))) ?x1810) (* (- 17.0) (rval2 |v11:6_st|)))))
 (let ((?x1175 (rval2 |v7:10_st|)))
 (let ((?x590 (- 20.0)))
 (let ((?x3350 (* ?x590 ?x1175)))
 (let ((?x1655 (+ (+ (+ (* 10.0 |v1:16|) (* 7.0 |v2:15|)) (* (- 7.0) (rval2 |v11:6_st|))) ?x3350)))
 (let ((?x3455 (- 5.0)))
 (let ((?x169 (* 11.0 |v4:13|)))
 (let ((?x384 (+ (+ (+ (* 11.0 |v13:4|) (* 5.0 |v2:15|)) (* (- 15.0) (rval2 |v9:8_st|))) ?x169)))
 (let ((?x964 (- 12.0)))
 (let ((?x1331 (* 5.0 |v3:14|)))
 (let ((?x442 (+ (+ (+ (* 10.0 |v4:13|) (* ?x964 (rval2 |v8:9_st|))) (* 5.0 |v4:13|)) ?x1331)))
 (let (($x2917 (and (or (<= ?x442 ?x964) (<= ?x384 ?x3455)) (and (<= ?x1655 13.0) (<= ?x469 7.0)))))
 (let ((?x356 (- 2.0)))
 (let ((?x153 (* 15.0 |v5:12|)))
 (let ((?x1593 (+ (+ (+ (* (- 3.0) ?x1175) (* 9.0 |v14:3|)) (* 16.0 ?x2458)) ?x153)))
 (let ((?x2743 (* 4.0 ?x1175)))
 (let ((?x1900 (+ (+ (+ (* 7.0 |v16:1|) (* 19.0 (rval2 |v11:6_st|))) (* 15.0 |v2:15|)) ?x2743)))
 (let ((?x3118 (- 3.0)))
 (let ((?x2261 (* 20.0 |v16:1|)))
 (let (($x970 (<= (+ (+ (+ ?x1810 (* 20.0 (rval2 |v11:6_st|))) (* (- 7.0) |v12:5|)) ?x2261) ?x3118)))
 (let ((?x3289 (* 20.0 |v4:13|)))
 (let (($x1506 (<= (+ (+ (+ (* 17.0 |v3:14|) (* 0.0 (rval2 |v9:8_st|))) |v16:1|) ?x3289) ?x964)))
 (let (($x1576 (and (and (or (and $x1506 $x970) (or (<= ?x1900 ?x964) (<= ?x1593 ?x356))) $x2917) (and $x380 $x1105))))
 (let ((?x493 (- 1.0)))
 (let ((?x594 (* 6.0 |v12:5|)))
 (let ((?x619 (+ (+ (+ (* ?x3455 (rval2 |v11:6_st|)) (* ?x862 |v5:12|)) (* (- 13.0) ?x2458)) ?x594)))
 (let ((?x2880 (+ (+ (+ (* (- 15.0) |v1:16|) (* 5.0 |v1:16|)) (* 15.0 |v12:5|)) (* (- 8.0) |v16:1|))))
 (let ((?x132 (+ (+ (+ (* ?x3455 |v5:12|) (* (- 14.0) |v3:14|)) (* 6.0 |v4:13|)) (* ?x3455 |v4:13|))))
 (let (($x681 (<= ?x132 19.0)))
 (let ((?x3478 (- 19.0)))
 (let ((?x2729 (+ (+ (* (- 10.0) (rval2 |v11:6_st|)) (* 3.0 (rval2 |v9:8_st|))) (* ?x356 (rval2 |v11:6_st|)))))
 (let (($x1658 (and (<= (+ ?x2729 (* (- 7.0) ?x2458)) ?x3478) (and $x681 (or (<= ?x2880 ?x3455) (<= ?x619 ?x493))))))
 (let ((?x765 (- 4.0)))
 (let ((?x924 (+ (+ (+ (* 14.0 |v13:4|) (* ?x964 ?x1175)) (* (- 17.0) |v2:15|)) (* 8.0 |v13:4|))))
 (let ((?x1561 (+ (+ (+ (* (- 9.0) (rval2 |v8:9_st|)) (* ?x765 |v0:17|)) (* ?x964 |v4:13|)) |v17:0|)))
 (let ((?x1381 (rval2 |v9:8_st|)))
 (let ((?x1600 (* 9.0 ?x1381)))
 (let ((?x1011 (+ (+ (+ (* 14.0 |v13:4|) (* (- 6.0) ?x194)) (* 16.0 ?x1381)) ?x1600)))
 (let ((?x249 (* 17.0 |v5:12|)))
 (let ((?x1360 (+ (+ (+ (* 12.0 ?x194) (* (- 18.0) |v13:4|)) (* 10.0 |v15:2|)) ?x249)))
 (let (($x261 (and (or (<= ?x1360 12.0) (<= ?x1011 8.0)) (or (<= ?x1561 3.0) (<= ?x924 ?x765)))))
 (let ((?x541 (+ (+ (+ (* (- 17.0) |v0:17|) (* 15.0 |v16:1|)) (* (- 14.0) |v2:15|)) (* (- 15.0) |v14:3|))))
 (let ((?x1887 (* ?x356 |v2:15|)))
 (let ((?x1909 (+ (+ (+ (* (- 8.0) |v17:0|) (* (- 9.0) |v12:5|)) (* ?x3478 ?x194)) ?x1887)))
 (let ((?x849 (- 13.0)))
 (let ((?x1770 (+ (+ (+ (* ?x1093 |v15:2|) (* ?x356 ?x1381)) (* 20.0 |v17:0|)) (* 5.0 |v15:2|))))
 (let (($x1745 (<= (+ (+ (+ (* 2.0 |v17:0|) (* 8.0 |v1:16|)) |v2:15|) (* ?x590 |v13:4|)) ?x964)))
 (let (($x3354 (and (or (or $x1745 (<= ?x1770 ?x849)) (or (<= ?x1909 3.0) (<= ?x541 ?x493))) $x261)))
 (let ((?x1442 (* ?x862 |v2:15|)))
 (let ((?x535 (+ (+ (+ (* 4.0 |v15:2|) (* (- 7.0) |v4:13|)) (* 6.0 |v16:1|)) ?x1442)))
 (let ((?x1606 (+ (+ (+ (* ?x493 (rval2 |v11:6_st|)) (* 19.0 |v5:12|)) (* ?x964 ?x1381)) (* 11.0 ?x2458))))
 (let ((?x1196 (rval2 |v8:9_st|)))
 (let ((?x724 (* ?x964 ?x1196)))
 (let ((?x1004 (rval2 |v11:6_st|)))
 (let ((?x1652 (- 7.0)))
 (let ((?x2514 (* ?x1652 ?x1004)))
 (let ((?x2014 (* 2.0 ?x1196)))
 (let ((?x1673 (+ (+ (* (- 17.0) |v4:13|) (* (- 10.0) |v2:15|)) ?x1887)))
 (let (($x2850 (or (<= (+ ?x1673 ?x2014) ?x1093) (<= (+ (+ (+ (* ?x1652 |v2:15|) (* ?x493 |v15:2|)) ?x2514) ?x724) 2.0))))
 (let ((?x2714 (+ (+ (+ (* 2.0 ?x1381) (* ?x3455 ?x2458)) (* (- 10.0) |v14:3|)) (* (- 18.0) |v14:3|))))
 (let ((?x2664 (- 15.0)))
 (let ((?x187 (* ?x2664 |v3:14|)))
 (let (($x418 (<= (+ (+ (+ (* ?x862 |v15:2|) (* 9.0 |v3:14|)) (* 7.0 |v14:3|)) ?x187) ?x3118)))
 (let ((?x1675 (- 18.0)))
 (let (($x3119 (<= (+ (+ (+ (* (- 17.0) |v13:4|) (* ?x849 ?x1175)) (* ?x849 ?x1196)) ?x594) ?x1675)))
 (let ((?x2281 (+ (+ (+ (* 7.0 |v15:2|) (* 8.0 |v16:1|)) (* 10.0 ?x1004)) (* ?x3455 |v15:2|))))
 (let (($x2585 (or (or (and (<= ?x2281 ?x3478) $x3119) (or $x418 (<= ?x2714 14.0))) (and $x2850 (and (<= ?x1606 8.0) (<= ?x535 ?x765))))))
 (let (($x3383 (<= (+ (+ (+ (* 12.0 ?x2458) (* ?x590 |v3:14|)) (* 10.0 |v1:16|)) |v16:1|) ?x964)))
 (let (($x110 (and (<= (+ (+ (+ ?x3350 (* 11.0 ?x194)) (* 9.0 |v5:12|)) ?x1175) ?x356) $x3383)))
 (let (($x1890 (<= (+ (+ (+ (* ?x1652 |v4:13|) (* 2.0 |v1:16|)) ?x1381) (* 16.0 ?x2458)) 15.0)))
 (let ((?x2487 (+ (+ (+ (* ?x862 |v13:4|) (* (- 10.0) |v3:14|)) (* ?x849 |v4:13|)) (* (- 14.0) ?x1175))))
 (let ((?x3407 (- 9.0)))
 (let ((?x3341 (* ?x849 ?x1175)))
 (let ((?x1433 (+ (+ (+ (* (- 17.0) |v3:14|) (* (- 10.0) ?x1004)) (* 17.0 ?x1004)) ?x3341)))
 (let ((?x2619 (+ (+ (+ (* ?x1675 ?x2458) (* ?x1093 ?x2458)) (* ?x1675 ?x194)) (* 14.0 |v15:2|))))
 (let ((?x394 (- 17.0)))
 (let (($x1301 (or (<= (+ (+ (+ ?x1275 (* 15.0 ?x2458)) (* 3.0 |v4:13|)) ?x1381) ?x394) (<= ?x2619 13.0))))
 (let (($x24 (or (and (or $x1301 (or (<= ?x1433 ?x3407) (<= ?x2487 ?x964))) (or $x1890 $x110)) $x2585)))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!7265)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!7264)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!7263)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!7262)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!7261)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!7260)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 (and (and $x24 (or $x3354 $x1658)) (or $x1576 (<= ?x1962 20.0)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
