; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!7974 Real) )(exists ((|v10:7_st| RealState) (val!7975 Real) )(exists ((|v9:8_st| RealState) (val!7976 Real) )(exists ((|v8:9_st| RealState) (val!7977 Real) )(exists ((|v7:10_st| RealState) (val!7978 Real) )(exists ((|v6:11_st| RealState) (val!7979 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x1981 (rval2 |v11:6_st|)))
 (let ((?x1878 (* 19.0 ?x1981)))
 (let ((?x2665 (+ (+ (+ (* 18.0 (rval2 |v8:9_st|)) (* (- 14.0) |v5:12|)) ?x1878) (* (- 11.0) |v13:4|))))
 (let ((?x2189 (- 6.0)))
 (let ((?x610 (* ?x2189 |v3:14|)))
 (let ((?x2185 (+ (+ (* (- 19.0) |v15:2|) (* 11.0 |v15:2|)) (* (- 4.0) (rval2 |v9:8_st|)))))
 (let ((?x2036 (- 20.0)))
 (let ((?x1947 (rval2 |v8:9_st|)))
 (let ((?x1053 (* 15.0 ?x1947)))
 (let ((?x3151 (+ (+ (+ (* 10.0 |v1:16|) (* (- 5.0) |v4:13|)) (* 15.0 (rval2 |v7:10_st|))) ?x1053)))
 (let ((?x1795 (- 2.0)))
 (let ((?x2196 (* ?x1795 |v2:15|)))
 (let ((?x1539 (- 15.0)))
 (let ((?x100 (* ?x1539 |v17:0|)))
 (let (($x1680 (<= (+ (+ (+ (* ?x2036 |v0:17|) (* (- 17.0) (rval2 |v9:8_st|))) ?x100) ?x2196) 17.0)))
 (let (($x809 (and (and $x1680 (<= ?x3151 ?x2036)) (and (<= (+ ?x2185 ?x610) 14.0) (<= ?x2665 18.0)))))
 (let (($x788 (<= (+ (+ (+ (* 9.0 |v2:15|) (* (- 9.0) |v13:4|)) ?x1981) (* ?x1539 |v3:14|)) 11.0)))
 (let ((?x1645 (- 16.0)))
 (let ((?x1440 (* (- 7.0) |v5:12|)))
 (let ((?x3019 (+ (+ (* 19.0 ?x1947) (* 19.0 (rval2 |v7:10_st|))) (* 17.0 (rval2 |v6:11_st|)))))
 (let ((?x3170 (+ (+ (+ (* 20.0 |v3:14|) (* (- 11.0) ?x1981)) (* (- 9.0) |v1:16|)) (* (- 19.0) |v13:4|))))
 (let (($x2129 (and (and (<= ?x3170 12.0) (and (<= (+ ?x3019 ?x1440) ?x1645) $x788)) $x809)))
 (let ((?x2799 (- 1.0)))
 (let ((?x2281 (* ?x2036 |v5:12|)))
 (let ((?x473 (+ (+ (* 2.0 |v15:2|) (* 19.0 (rval2 |v6:11_st|))) (* 20.0 (rval2 |v7:10_st|)))))
 (let ((?x2738 (- 3.0)))
 (let ((?x273 (- 18.0)))
 (let ((?x140 (* ?x273 |v1:16|)))
 (let (($x106 (<= (+ (+ (+ (* 10.0 |v12:5|) (* ?x2738 |v4:13|)) (* 12.0 |v2:15|)) ?x140) ?x2738)))
 (let ((?x2947 (+ (+ (+ (* (- 13.0) |v16:1|) (* 8.0 |v16:1|)) (* 18.0 |v2:15|)) (* (- 11.0) (rval2 |v10:7_st|)))))
 (let ((?x1857 (+ (+ (+ (* 13.0 |v16:1|) (* 20.0 |v1:16|)) (* 11.0 |v12:5|)) (* 0.0 |v13:4|))))
 (let (($x1083 (or (or (<= ?x1857 19.0) (<= ?x2947 ?x1645)) (and $x106 (<= (+ ?x473 ?x2281) ?x2799)))))
 (let ((?x1949 (- 8.0)))
 (let ((?x3372 (* ?x1949 |v2:15|)))
 (let (($x3303 (<= (+ (+ (+ (* 4.0 (rval2 |v7:10_st|)) |v14:3|) (* 12.0 |v1:16|)) ?x3372) 5.0)))
 (let ((?x372 (* 7.0 |v13:4|)))
 (let ((?x1705 (+ (+ (+ (* 15.0 |v1:16|) (* ?x1949 (rval2 |v6:11_st|))) (* ?x1539 |v4:13|)) ?x372)))
 (let ((?x966 (- 10.0)))
 (let ((?x1030 (+ (+ (+ (* ?x1795 |v0:17|) (* 13.0 (rval2 |v7:10_st|))) (* 14.0 |v4:13|)) (* 17.0 |v17:0|))))
 (let ((?x1546 (* ?x966 |v4:13|)))
 (let ((?x1834 (+ (+ (* ?x2189 (rval2 |v6:11_st|)) (* 8.0 |v2:15|)) (* 0.0 (rval2 |v7:10_st|)))))
 (let (($x824 (or (and (<= (+ ?x1834 ?x1546) 15.0) (<= ?x1030 ?x966)) (and (<= ?x1705 19.0) $x3303))))
 (let ((?x1690 (- 4.0)))
 (let ((?x1464 (* 12.0 |v15:2|)))
 (let (($x2744 (<= (+ (+ (+ ?x1878 (* (- 12.0) ?x1981)) (* 19.0 ?x1947)) ?x1464) ?x1690)))
 (let ((?x2064 (* 6.0 |v2:15|)))
 (let ((?x2150 (+ (+ (+ (* ?x1539 |v1:16|) (* ?x2738 (rval2 |v9:8_st|))) (* 9.0 (rval2 |v7:10_st|))) ?x2064)))
 (let ((?x1034 (- 5.0)))
 (let ((?x1109 (* 19.0 |v5:12|)))
 (let ((?x753 (+ (+ (+ (* ?x1690 ?x1947) (* 4.0 |v12:5|)) (* ?x966 (rval2 |v6:11_st|))) ?x1109)))
 (let ((?x2114 (rval2 |v6:11_st|)))
 (let ((?x3260 (* 7.0 ?x2114)))
 (let ((?x3058 (* 18.0 |v0:17|)))
 (let ((?x727 (+ (+ |v1:16| (* ?x273 |v3:14|)) ?x3058)))
 (let ((?x3193 (* 12.0 |v14:3|)))
 (let (($x2616 (<= (+ (+ (+ (* 17.0 |v16:1|) (* 14.0 ?x1981)) (* 11.0 |v13:4|)) ?x3193) 20.0)))
 (let (($x1388 (or (and $x2616 (<= (+ ?x727 ?x3260) ?x1645)) (and (<= ?x753 ?x1034) (<= ?x2150 14.0)))))
 (let ((?x319 (+ (+ (+ (* ?x2738 |v1:16|) (* 7.0 |v14:3|)) (* ?x1795 |v14:3|)) (* 12.0 (rval2 |v10:7_st|)))))
 (let ((?x1191 (* 12.0 |v0:17|)))
 (let ((?x978 (+ (+ (+ (* 16.0 |v1:16|) (* ?x1795 |v12:5|)) (* 18.0 (rval2 |v10:7_st|))) ?x1191)))
 (let ((?x3466 (- 19.0)))
 (let ((?x2811 (* ?x3466 |v2:15|)))
 (let ((?x808 (+ (+ (+ (* (- 12.0) ?x2114) (* (- 11.0) |v12:5|)) (* ?x966 |v13:4|)) ?x2811)))
 (let ((?x1435 (+ (+ (+ (* 10.0 |v12:5|) (* (- 13.0) |v5:12|)) (* 0.0 |v17:0|)) (* 9.0 (rval2 |v10:7_st|)))))
 (let (($x2468 (or (or (<= ?x1435 ?x273) (<= ?x808 1.0)) (and (<= ?x978 4.0) (<= ?x319 ?x1034)))))
 (let (($x1601 (<= (+ (+ (+ (* ?x1539 |v5:12|) (* (- 9.0) |v17:0|)) ?x3372) (* 3.0 |v0:17|)) 5.0)))
 (let ((?x1217 (* 2.0 |v4:13|)))
 (let ((?x2287 (+ (+ (+ (* 15.0 |v2:15|) (* 16.0 |v0:17|)) (* (- 9.0) ?x1981)) ?x1217)))
 (let ((?x441 (- 17.0)))
 (let ((?x1999 (* ?x441 |v15:2|)))
 (let ((?x3470 (+ (+ (+ (* (- 13.0) (rval2 |v7:10_st|)) (* 11.0 |v5:12|)) (* ?x2799 |v12:5|)) ?x1999)))
 (let (($x513 (<= (+ (+ (+ (* 17.0 |v16:1|) (* 14.0 |v2:15|)) (* 8.0 |v16:1|)) ?x140) 0.0)))
 (let ((?x1970 (+ (+ (* 12.0 |v2:15|) (* ?x273 |v5:12|)) (* 4.0 |v3:14|))))
 (let (($x2740 (<= (+ (+ (+ (* 4.0 ?x2114) (* (- 12.0) |v12:5|)) (* ?x1795 |v14:3|)) ?x1999) ?x273)))
 (let ((?x3456 (* ?x1690 ?x1947)))
 (let (($x2635 (<= (+ (+ (+ (* 9.0 |v13:4|) (* ?x1690 |v2:15|)) (* (- 11.0) |v2:15|)) ?x3456) 12.0)))
 (let ((?x1042 (+ (+ (+ (* 15.0 |v17:0|) (* ?x966 |v2:15|)) (* ?x2189 |v16:1|)) (* ?x2799 |v13:4|))))
 (let (($x1307 (or (or (<= ?x1042 9.0) $x2635) (or $x2740 (<= (+ ?x1970 (* 20.0 ?x1981)) 5.0)))))
 (let ((?x821 (* 19.0 ?x2114)))
 (let ((?x2099 (+ (+ (+ (* 3.0 |v16:1|) (* 7.0 (rval2 |v10:7_st|))) (* ?x2799 ?x2114)) ?x821)))
 (let ((?x167 (* 18.0 ?x2114)))
 (let ((?x567 (+ (+ (+ (* ?x2799 |v12:5|) (* 10.0 |v16:1|)) (* 17.0 (rval2 |v9:8_st|))) ?x167)))
 (let (($x1472 (<= (+ (+ (+ (* ?x966 |v2:15|) (* ?x1949 |v0:17|)) |v2:15|) (* 12.0 |v16:1|)) 1.0)))
 (let ((?x155 (rval2 |v9:8_st|)))
 (let ((?x1499 (* 8.0 ?x155)))
 (let ((?x2583 (+ (+ (+ (* (- 13.0) ?x1981) (* 14.0 ?x1947)) (* 5.0 (rval2 |v10:7_st|))) ?x1499)))
 (let (($x2943 (or (or (<= ?x2583 12.0) $x1472) (and (<= ?x567 12.0) (<= ?x2099 ?x1690)))))
 (let ((?x2366 (* ?x1795 |v0:17|)))
 (let (($x2752 (<= (+ (+ (+ (* ?x1645 |v5:12|) (* ?x3466 ?x2114)) (* ?x273 |v3:14|)) ?x2366) 9.0)))
 (let ((?x125 (* 11.0 |v4:13|)))
 (let (($x735 (<= (+ (+ (+ (* 10.0 |v17:0|) (* 2.0 |v16:1|)) (* 0.0 |v17:0|)) ?x125) 16.0)))
 (let (($x680 (or (and (or $x735 $x2752) $x2943) (and $x1307 (and (and $x513 (<= ?x3470 ?x2189)) (or (<= ?x2287 ?x1690) $x1601))))))
 (let ((?x3419 (+ (+ (+ (* 20.0 |v12:5|) (* 5.0 |v13:4|)) (* ?x1795 ?x155)) (* ?x1645 (rval2 |v7:10_st|)))))
 (let (($x3394 (<= (+ (+ (+ (* ?x2738 ?x155) (* 14.0 |v17:0|)) ?x610) (* 2.0 |v1:16|)) ?x1645)))
 (let ((?x1322 (+ (+ (+ (* ?x966 (rval2 |v10:7_st|)) ?x100) (* ?x2799 ?x1947)) (* 9.0 ?x2114))))
 (let (($x3433 (<= (+ (+ (+ (* 6.0 ?x155) |v17:0|) (* 18.0 |v4:13|)) (* 7.0 |v14:3|)) 10.0)))
 (let ((?x160 (* ?x1795 |v12:5|)))
 (let (($x2346 (<= (+ (+ (+ (* 7.0 |v15:2|) (* 5.0 |v16:1|)) (* ?x2738 |v17:0|)) ?x160) 9.0)))
 (let (($x2888 (<= (+ (+ (+ ?x2811 |v5:12|) (* 6.0 |v5:12|)) (* 8.0 |v0:17|)) 4.0)))
 (let (($x3286 (or (and (or (or $x2888 $x2346) (or $x3433 (<= ?x1322 20.0))) $x3394) (<= ?x3419 ?x1690))))
 (let (($x2337 (and (or $x3286 $x680) (or (or (or $x2468 $x1388) $x2744) (or (or $x824 $x1083) $x2129)))))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!7979)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!7978)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!7977)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!7976)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!7975)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!7974)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 $x2337)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
