; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!7758 Real) )(exists ((|v10:7_st| RealState) (val!7759 Real) )(exists ((|v9:8_st| RealState) (val!7760 Real) )(exists ((|v8:9_st| RealState) (val!7761 Real) )(exists ((|v7:10_st| RealState) (val!7762 Real) )(exists ((|v6:11_st| RealState) (val!7763 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x65 (- 5.0)))
 (let ((?x2452 (- 7.0)))
 (let ((?x2443 (* ?x2452 |v4:13|)))
 (let ((?x939 (* 8.0 |v1:16|)))
 (let ((?x2758 (+ (+ (+ (* (- 10.0) (rval2 |v10:7_st|)) (* 3.0 (rval2 |v8:9_st|))) ?x939) ?x2443)))
 (let ((?x816 (+ (+ (+ (* ?x2452 (rval2 |v9:8_st|)) (* 17.0 |v16:1|)) (* (- 11.0) |v16:1|)) (* (- 11.0) (rval2 |v7:10_st|)))))
 (let ((?x868 (* 3.0 |v5:12|)))
 (let ((?x926 (- 10.0)))
 (let ((?x2644 (* ?x926 |v15:2|)))
 (let (($x202 (<= (+ (+ (+ (* 5.0 (rval2 |v6:11_st|)) (* (- 16.0) |v12:5|)) ?x2644) ?x868) 2.0)))
 (let ((?x1186 (+ (+ (+ (* 11.0 |v17:0|) (* 7.0 |v16:1|)) (* 13.0 |v12:5|)) (* ?x2452 (rval2 |v8:9_st|)))))
 (let ((?x1064 (+ (+ (+ (* 2.0 |v1:16|) (* 7.0 |v1:16|)) (* 3.0 |v13:4|)) (* 9.0 |v13:4|))))
 (let ((?x2108 (* 12.0 (rval2 |v11:6_st|))))
 (let ((?x1269 (+ (+ (+ (* 11.0 (rval2 |v9:8_st|)) (* (- 11.0) |v2:15|)) (* ?x2452 |v12:5|)) ?x2108)))
 (let ((?x1982 (* 6.0 |v3:14|)))
 (let ((?x2208 (+ (+ (* 10.0 (rval2 |v10:7_st|)) (* 4.0 |v4:13|)) (* (- 13.0) (rval2 |v8:9_st|)))))
 (let ((?x1648 (* ?x2452 |v1:16|)))
 (let ((?x2794 (+ (+ (* (- 1.0) (rval2 |v9:8_st|)) (* 14.0 |v12:5|)) (* (- 3.0) |v17:0|))))
 (let ((?x2641 (+ (+ (* (- 12.0) |v5:12|) (* (- 20.0) |v1:16|)) (* 20.0 |v0:17|))))
 (let (($x3162 (and (and (<= (+ ?x2641 (* 5.0 |v13:4|)) ?x926) (<= (+ ?x2794 ?x1648) 13.0)) (or (<= (+ ?x2208 ?x1982) 14.0) (<= ?x1269 18.0)))))
 (let ((?x1880 (* 11.0 |v16:1|)))
 (let ((?x940 (* ?x926 |v5:12|)))
 (let ((?x542 (+ (+ (+ (* 7.0 (rval2 |v7:10_st|)) (* 20.0 (rval2 |v9:8_st|))) ?x940) ?x1880)))
 (let ((?x3437 (* 4.0 |v3:14|)))
 (let ((?x2126 (+ (+ (+ (* 7.0 |v3:14|) (* (- 14.0) |v16:1|)) (* 5.0 |v14:3|)) ?x3437)))
 (let ((?x2980 (- 3.0)))
 (let ((?x2879 (+ (+ (+ (* 4.0 |v13:4|) (* (- 13.0) |v5:12|)) (* (- 14.0) |v15:2|)) (* 19.0 |v14:3|))))
 (let ((?x241 (+ (+ (* (- 17.0) (rval2 |v10:7_st|)) (* 15.0 |v12:5|)) (* (- 17.0) |v17:0|))))
 (let (($x1962 (and (and (<= (+ ?x241 ?x2644) 12.0) (<= ?x2879 ?x2980)) (and (<= ?x2126 9.0) (<= ?x542 19.0)))))
 (let ((?x2402 (* ?x65 |v2:15|)))
 (let ((?x2859 (* 18.0 |v3:14|)))
 (let ((?x3360 (+ (+ (+ (* (- 8.0) (rval2 |v9:8_st|)) (* (- 4.0) |v2:15|)) ?x2859) ?x2402)))
 (let ((?x3478 (+ (+ (+ (* 6.0 |v5:12|) (* (- 8.0) |v0:17|)) (* 4.0 |v12:5|)) (* ?x2980 (rval2 |v10:7_st|)))))
 (let ((?x3344 (+ (+ (+ (* 18.0 |v14:3|) (* 7.0 |v4:13|)) (* 12.0 (rval2 |v10:7_st|))) (* 0.0 |v15:2|))))
 (let (($x1588 (or (or (<= ?x3344 ?x926) (and (<= ?x3478 17.0) (<= ?x3360 0.0))) $x1962)))
 (let (($x1565 (or $x1588 (or $x3162 (or (or (<= ?x1064 15.0) (<= ?x1186 11.0)) $x202)))))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!7763)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!7762)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!7761)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!7760)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!7759)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!7758)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 (or (and $x1565 (<= ?x816 20.0)) (<= ?x2758 ?x65))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
