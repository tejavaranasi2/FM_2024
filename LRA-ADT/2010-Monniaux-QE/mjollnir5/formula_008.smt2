; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!7704 Real) )(exists ((|v10:7_st| RealState) (val!7705 Real) )(exists ((|v9:8_st| RealState) (val!7706 Real) )(exists ((|v8:9_st| RealState) (val!7707 Real) )(exists ((|v7:10_st| RealState) (val!7708 Real) )(exists ((|v6:11_st| RealState) (val!7709 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x2508 (+ (+ (* (- 6.0) |v2:15|) (* 7.0 (rval2 |v10:7_st|))) (* (- 13.0) |v16:1|))))
 (let ((?x741 (* 16.0 |v4:13|)))
 (let ((?x2328 (+ (+ (* (- 20.0) |v1:16|) (* (- 13.0) (rval2 |v11:6_st|))) (* 6.0 |v14:3|))))
 (let ((?x2877 (+ (+ (+ (* (- 16.0) |v13:4|) (* 18.0 |v3:14|)) (* (- 20.0) |v5:12|)) (* (- 18.0) |v12:5|))))
 (let ((?x3015 (* 17.0 |v13:4|)))
 (let ((?x1052 (+ (+ (+ (* 3.0 |v4:13|) (* 18.0 (rval2 |v6:11_st|))) (* (- 8.0) |v13:4|)) ?x3015)))
 (let ((?x2657 (- 9.0)))
 (let ((?x1660 (* 14.0 |v17:0|)))
 (let ((?x182 (rval2 |v7:10_st|)))
 (let ((?x1625 (* 11.0 ?x182)))
 (let (($x3395 (<= (+ (+ (+ (* 19.0 |v1:16|) (* 7.0 (rval2 |v11:6_st|))) ?x1625) ?x1660) ?x2657)))
 (let ((?x1426 (- 6.0)))
 (let ((?x1691 (* 3.0 |v0:17|)))
 (let ((?x2926 (+ (+ (+ (* (- 8.0) |v14:3|) (* 5.0 |v15:2|)) (* 7.0 |v2:15|)) ?x1691)))
 (let (($x2727 (and (or (<= ?x2926 ?x1426) $x3395) (or (<= ?x1052 20.0) (<= ?x2877 13.0)))))
 (let ((?x2980 (- 3.0)))
 (let ((?x3285 (* ?x2980 |v4:13|)))
 (let (($x832 (<= (+ (+ (+ (* (- 2.0) |v13:4|) (* (- 4.0) |v15:2|)) ?x3015) ?x3285) 4.0)))
 (let ((?x808 (rval2 |v6:11_st|)))
 (let ((?x484 (* 7.0 ?x808)))
 (let ((?x464 (+ (+ (+ (* 14.0 (rval2 |v10:7_st|)) (* 6.0 |v1:16|)) (* 17.0 |v4:13|)) ?x484)))
 (let ((?x1568 (- 11.0)))
 (let ((?x1763 (* 6.0 |v1:16|)))
 (let ((?x2994 (+ (+ (+ (* ?x2980 |v17:0|) (* (- 20.0) |v0:17|)) (* (- 15.0) |v2:15|)) ?x1763)))
 (let ((?x1212 (- 2.0)))
 (let ((?x223 (rval2 |v11:6_st|)))
 (let ((?x2073 (- 13.0)))
 (let ((?x1261 (* ?x2073 ?x223)))
 (let ((?x1789 (+ (+ (+ (* 20.0 |v1:16|) (* (- 5.0) ?x808)) (* 3.0 |v14:3|)) ?x1261)))
 (let (($x1291 (or (and (or (<= ?x1789 ?x1212) (<= ?x2994 ?x1568)) (or (<= ?x464 13.0) $x832)) $x2727)))
 (let ((?x1425 (* 3.0 |v16:1|)))
 (let ((?x2407 (+ (+ (+ (* 12.0 ?x808) (* 15.0 ?x182)) (* (- 16.0) (rval2 |v8:9_st|))) ?x1425)))
 (let ((?x32 (+ (+ (+ (* 10.0 ?x808) (* (- 1.0) |v0:17|)) (* (- 14.0) |v17:0|)) (* 13.0 ?x808))))
 (let ((?x1860 (+ (+ (+ (* (- 14.0) ?x808) (* (- 8.0) (rval2 |v10:7_st|))) ?x3285) (* 2.0 (rval2 |v10:7_st|)))))
 (let ((?x1455 (- 20.0)))
 (let ((?x118 (* ?x1455 |v5:12|)))
 (let ((?x608 (+ (+ (+ (* 15.0 |v15:2|) (* (- 8.0) |v5:12|)) (* 0.0 ?x223)) ?x118)))
 (let (($x340 (or (or (<= ?x608 9.0) (<= ?x1860 12.0)) (and (<= ?x32 14.0) (<= ?x2407 8.0)))))
 (let (($x2357 (<= (+ (+ (+ ?x808 (* 16.0 |v12:5|)) (* 4.0 |v15:2|)) (* 13.0 |v1:16|)) 4.0)))
 (let (($x1041 (and (and (and (or $x2357 $x340) $x1291) (<= (+ ?x2328 ?x741) 9.0)) (<= (+ ?x2508 (* 19.0 (rval2 |v9:8_st|))) 4.0))))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!7709)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!7708)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!7707)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!7706)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!7705)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!7704)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 $x1041))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
