; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!8358 Real) )(exists ((|v10:7_st| RealState) (val!8359 Real) )(exists ((|v9:8_st| RealState) (val!8360 Real) )(exists ((|v8:9_st| RealState) (val!8361 Real) )(exists ((|v7:10_st| RealState) (val!8362 Real) )(exists ((|v6:11_st| RealState) (val!8363 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x1667 (- 7.0)))
 (let ((?x2046 (+ (+ (+ (* (- 17.0) (rval2 |v11:6_st|)) (* 12.0 |v14:3|)) (* 2.0 |v4:13|)) (* (- 20.0) |v17:0|))))
 (let ((?x1586 (- 19.0)))
 (let ((?x2087 (rval2 |v9:8_st|)))
 (let ((?x908 (* 5.0 ?x2087)))
 (let ((?x1186 (+ (+ (+ (* 0.0 |v5:12|) (* (- 3.0) |v17:0|)) (* (- 9.0) |v4:13|)) ?x908)))
 (let ((?x722 (* 11.0 |v14:3|)))
 (let (($x210 (<= (+ (+ (+ (* ?x1586 |v1:16|) (* (- 15.0) |v1:16|)) (* 2.0 |v15:2|)) ?x722) 0.0)))
 (let ((?x2114 (- 4.0)))
 (let ((?x963 (rval2 |v7:10_st|)))
 (let ((?x2719 (* 4.0 ?x963)))
 (let (($x1432 (<= (+ (+ (+ (* 17.0 |v5:12|) (* ?x1586 ?x2087)) (* 13.0 |v12:5|)) ?x2719) ?x2114)))
 (let ((?x869 (- 1.0)))
 (let ((?x2811 (- 14.0)))
 (let ((?x3012 (* ?x2811 |v1:16|)))
 (let ((?x35 (+ (+ (* 0.0 (rval2 |v11:6_st|)) (* (- 15.0) ?x2087)) (* (- 13.0) |v17:0|))))
 (let ((?x2329 (rval2 |v11:6_st|)))
 (let ((?x3020 (- 18.0)))
 (let ((?x3363 (* ?x3020 ?x2329)))
 (let (($x3412 (<= (+ (+ (+ (* ?x1667 |v3:14|) (* (- 2.0) |v3:14|)) (* 6.0 ?x2087)) ?x3363) 3.0)))
 (let ((?x2804 (- 15.0)))
 (let ((?x1961 (+ (+ (+ (* 5.0 |v1:16|) (* ?x869 |v3:14|)) (* ?x869 |v15:2|)) (* ?x2114 ?x2087))))
 (let (($x3376 (and (or (and (<= ?x1961 ?x2804) $x3412) (<= (+ ?x35 ?x3012) ?x869)) (and (and $x1432 $x210) (or (<= ?x1186 ?x1586) (<= ?x2046 ?x1667))))))
 (let ((?x2276 (+ (+ (+ (* 19.0 |v14:3|) (* ?x2114 |v4:13|)) (* (- 5.0) |v0:17|)) (* 16.0 |v14:3|))))
 (let ((?x1431 (- 2.0)))
 (let ((?x2682 (* ?x1431 |v5:12|)))
 (let ((?x17 (+ (+ (+ (* (- 3.0) |v16:1|) (* 7.0 (rval2 |v6:11_st|))) (* 10.0 ?x2329)) ?x2682)))
 (let ((?x1391 (- 9.0)))
 (let ((?x955 (* 20.0 |v3:14|)))
 (let ((?x1445 (+ (+ (+ (* 14.0 |v13:4|) (* (- 6.0) |v0:17|)) (* (- 20.0) |v15:2|)) ?x955)))
 (let ((?x926 (+ (+ (+ (* 0.0 |v1:16|) (* 8.0 |v3:14|)) (* 9.0 |v12:5|)) (* (- 12.0) |v17:0|))))
 (let (($x3106 (and (and (<= ?x926 20.0) (<= ?x1445 ?x1391)) (and (<= ?x17 15.0) (<= ?x2276 1.0)))))
 (let ((?x1685 (rval2 |v10:7_st|)))
 (let ((?x2316 (* 12.0 ?x1685)))
 (let ((?x2999 (+ (+ (+ (* 11.0 |v2:15|) (* 18.0 (rval2 |v8:9_st|))) (* 0.0 |v15:2|)) ?x2316)))
 (let ((?x2287 (+ (+ (+ ?x3363 (* ?x869 |v1:16|)) (* (- 10.0) |v17:0|)) (* 9.0 (rval2 |v8:9_st|)))))
 (let ((?x3195 (- 13.0)))
 (let ((?x1646 (- 17.0)))
 (let ((?x2186 (* ?x1646 |v0:17|)))
 (let ((?x3091 (- 11.0)))
 (let ((?x1837 (* ?x3091 |v5:12|)))
 (let (($x800 (<= (+ (+ (+ (* (- 3.0) |v16:1|) (* 14.0 (rval2 |v8:9_st|))) ?x1837) ?x2186) ?x3195)))
 (let ((?x2820 (+ (+ (+ (* (- 10.0) ?x963) (* 12.0 ?x2329)) (* 14.0 |v5:12|)) (* 13.0 |v15:2|))))
 (let (($x665 (and (and (<= ?x2820 10.0) $x800) (or (<= ?x2287 16.0) (<= ?x2999 10.0)))))
 (let ((?x1563 (+ (+ (* 9.0 (rval2 |v6:11_st|)) (* (- 10.0) ?x963)) (* (- 16.0) ?x2087))))
 (let ((?x169 (- 5.0)))
 (let ((?x3228 (* ?x169 |v3:14|)))
 (let (($x3036 (<= (+ (+ (+ (* 5.0 |v17:0|) (* ?x3195 |v0:17|)) (* 4.0 |v3:14|)) ?x3228) 3.0)))
 (let ((?x2887 (* ?x2804 |v13:4|)))
 (let ((?x302 (+ (+ (+ (* 3.0 |v3:14|) (* (- 12.0) ?x963)) (* 12.0 |v3:14|)) ?x2887)))
 (let ((?x479 (+ (+ (+ (* 13.0 (rval2 |v6:11_st|)) (* 10.0 |v15:2|)) (* ?x169 |v14:3|)) (* 8.0 (rval2 |v6:11_st|)))))
 (let (($x1025 (and (or (<= ?x479 15.0) (<= ?x302 ?x1431)) (and $x3036 (<= (+ ?x1563 (* ?x3091 (rval2 |v8:9_st|))) ?x1667)))))
 (let ((?x915 (* 12.0 |v3:14|)))
 (let (($x1449 (<= (+ (+ (+ (* 9.0 |v16:1|) (* 6.0 ?x2087)) (* 7.0 |v0:17|)) ?x915) 14.0)))
 (let ((?x2589 (- 20.0)))
 (let ((?x2929 (+ (+ (+ (* 11.0 |v3:14|) (* 3.0 |v16:1|)) (* 14.0 ?x1685)) (* (- 8.0) |v16:1|))))
 (let ((?x1180 (* 5.0 |v4:13|)))
 (let (($x545 (<= (+ (+ (+ (* ?x169 |v15:2|) (* 13.0 |v17:0|)) (* ?x1667 |v16:1|)) ?x1180) 20.0)))
 (let ((?x2614 (* 3.0 |v14:3|)))
 (let ((?x499 (+ (+ (+ (* 3.0 (rval2 |v8:9_st|)) (* ?x3091 |v12:5|)) (* 16.0 |v15:2|)) ?x2614)))
 (let (($x860 (and (and (and (<= ?x499 20.0) $x545) (or (<= ?x2929 ?x2589) $x1449)) $x1025)))
 (let ((?x1502 (+ (+ (+ (* ?x1391 |v15:2|) (* ?x1646 |v1:16|)) (* 8.0 |v16:1|)) (* 12.0 |v15:2|))))
 (let ((?x3439 (+ (+ (+ (rval2 |v6:11_st|) (* ?x3020 |v15:2|)) (* ?x1667 (rval2 |v8:9_st|))) (* ?x169 ?x2329))))
 (let ((?x1668 (* ?x1646 |v5:12|)))
 (let ((?x1371 (+ (+ (+ (* (- 6.0) ?x1685) (* 3.0 |v1:16|)) (* 15.0 |v3:14|)) ?x1668)))
 (let ((?x163 (+ (+ (+ (* 10.0 |v13:4|) (* (- 10.0) ?x2329)) (* (- 6.0) ?x2329)) (* ?x3195 |v12:5|))))
 (let (($x1834 (or (and (<= ?x163 12.0) (<= ?x1371 18.0)) (or (<= ?x3439 ?x2589) (<= ?x1502 20.0)))))
 (let (($x3073 (<= (+ (+ (+ ?x2186 (* 15.0 |v5:12|)) |v0:17|) (* 7.0 |v1:16|)) 16.0)))
 (let ((?x2910 (- 8.0)))
 (let ((?x3066 (- 10.0)))
 (let ((?x1755 (* ?x3066 |v5:12|)))
 (let ((?x1545 (* ?x1667 |v4:13|)))
 (let ((?x2283 (+ (+ (+ (* 16.0 (rval2 |v8:9_st|)) (* 5.0 (rval2 |v6:11_st|))) ?x1545) ?x1755)))
 (let ((?x1459 (* 16.0 |v5:12|)))
 (let ((?x2722 (+ (+ (+ (* ?x1667 |v5:12|) (* 2.0 (rval2 |v8:9_st|))) (* 18.0 |v13:4|)) ?x1459)))
 (let ((?x1675 (+ (+ (* 20.0 |v1:16|) (* ?x1431 |v2:15|)) (* 3.0 |v4:13|))))
 (let ((?x3354 (rval2 |v6:11_st|)))
 (let ((?x2168 (* 16.0 ?x3354)))
 (let ((?x1089 (+ (+ (+ (* 14.0 ?x3354) (* (- 12.0) |v1:16|)) (* 6.0 (rval2 |v8:9_st|))) ?x2168)))
 (let (($x2491 (and (or (<= ?x1089 4.0) (<= (+ ?x1675 (* 6.0 |v14:3|)) 5.0)) (or (<= ?x2722 0.0) (<= ?x2283 ?x2910)))))
 (let ((?x2855 (- 12.0)))
 (let ((?x1101 (+ (+ (* 11.0 (rval2 |v8:9_st|)) (* 11.0 ?x3354)) (* ?x2855 (rval2 |v8:9_st|)))))
 (let (($x188 (<= (+ (+ (+ (* 16.0 |v13:4|) (* 0.0 |v13:4|)) ?x2719) (* 12.0 ?x3354)) 14.0)))
 (let ((?x2006 (* ?x869 |v16:1|)))
 (let (($x3117 (<= (+ (+ (+ (* 0.0 |v14:3|) (* 11.0 |v16:1|)) (* ?x169 |v0:17|)) ?x2006) ?x169)))
 (let ((?x3141 (- 3.0)))
 (let (($x761 (<= (+ (+ (+ ?x2006 (* ?x1586 ?x3354)) (* ?x1667 ?x2087)) (* 13.0 |v16:1|)) ?x3141)))
 (let ((?x3119 (* 12.0 |v1:16|)))
 (let (($x1322 (<= (+ (+ (+ (* 19.0 ?x3354) (* 17.0 ?x2087)) (* 8.0 |v5:12|)) ?x3119) ?x869)))
 (let (($x441 (<= (+ (+ (+ (* 0.0 ?x2087) ?x2168) (* ?x169 |v12:5|)) (* ?x1431 ?x3354)) 18.0)))
 (let ((?x2073 (* 18.0 |v2:15|)))
 (let (($x1605 (<= (+ (+ (+ (* 14.0 ?x3354) (* 0.0 |v4:13|)) (* 8.0 |v13:4|)) ?x2073) 20.0)))
 (let ((?x1312 (* ?x2589 ?x963)))
 (let (($x1739 (<= (+ (+ (+ (* 0.0 |v1:16|) (* ?x2804 ?x1685)) (* ?x3195 ?x3354)) ?x1312) 6.0)))
 (let (($x2960 (<= (+ (+ (+ (* ?x1586 ?x2329) (* 20.0 |v0:17|)) |v15:2|) (* ?x2855 |v15:2|)) ?x3195)))
 (let ((?x3127 (* 14.0 |v2:15|)))
 (let ((?x2016 (+ (+ (* ?x2114 |v5:12|) (* 20.0 |v4:13|)) ?x3127)))
 (let ((?x2141 (* ?x169 |v1:16|)))
 (let (($x1189 (<= (+ (+ (+ (* ?x2589 |v13:4|) (* 6.0 ?x2087)) (* ?x1646 |v12:5|)) ?x2141) ?x1646)))
 (let (($x618 (and (and $x1189 (<= (+ ?x2016 (* (- 16.0) |v12:5|)) 10.0)) (and $x2960 $x1739))))
 (let (($x2336 (or (or $x618 (and (and $x1605 $x441) (and $x1322 $x761))) (or (or $x3117 (or $x188 (<= (+ ?x1101 |v1:16|) ?x2855))) $x2491))))
 (let ((?x3486 (* 9.0 |v12:5|)))
 (let (($x2481 (<= (+ (+ (+ (* 2.0 |v1:16|) (* 19.0 |v2:15|)) (* 6.0 ?x963)) ?x3486) 9.0)))
 (let (($x2468 (and (<= (+ (+ (+ (* ?x2114 |v4:13|) |v14:3|) (* 2.0 |v5:12|)) ?x2141) 12.0) $x2481)))
 (let ((?x3027 (+ (+ (+ (* 14.0 ?x1685) (* 9.0 ?x963)) (* ?x1646 |v14:3|)) (* 2.0 ?x2087))))
 (let ((?x2501 (* 3.0 ?x3354)))
 (let ((?x3287 (+ (+ (* 7.0 |v3:14|) (* 13.0 |v1:16|)) (* ?x2114 |v1:16|))))
 (let (($x704 (<= (+ (+ (+ ?x1459 (* ?x1586 ?x2087)) (* ?x2910 |v0:17|)) (* 19.0 |v17:0|)) 8.0)))
 (let ((?x3122 (- 6.0)))
 (let ((?x3113 (* ?x3122 |v4:13|)))
 (let (($x3239 (<= (+ (+ (+ (* 2.0 |v1:16|) (* 12.0 ?x2087)) (* 13.0 |v12:5|)) ?x3113) 13.0)))
 (let ((?x1794 (+ (+ (+ (* (- 16.0) |v13:4|) (* ?x3122 ?x1685)) (* ?x2114 |v15:2|)) (* 4.0 ?x2329))))
 (let (($x773 (and (<= (+ (+ (+ ?x2887 (* 16.0 ?x2087)) ?x1312) (* ?x3020 |v3:14|)) ?x3066) (<= ?x1794 ?x3195))))
 (let (($x934 (and (or $x773 (and $x3239 $x704)) (and (or (<= (+ ?x3287 ?x2501) 0.0) (<= ?x3027 14.0)) $x2468))))
 (let ((?x87 (* 14.0 ?x1685)))
 (let ((?x207 (+ (+ (+ (* 16.0 (rval2 |v8:9_st|)) (* (- 16.0) |v2:15|)) (* ?x1431 ?x3354)) ?x87)))
 (let ((?x656 (* 20.0 |v12:5|)))
 (let ((?x88 (+ (+ (+ (* 3.0 |v3:14|) (* ?x2114 |v16:1|)) (* ?x3122 (rval2 |v8:9_st|))) ?x656)))
 (let (($x2167 (<= (+ (+ (+ (* 4.0 |v0:17|) (* 11.0 ?x2087)) ?x2316) (* ?x1431 ?x963)) ?x2855)))
 (let ((?x2667 (+ (+ (+ (* 5.0 |v16:1|) (* ?x869 ?x1685)) (* 2.0 |v5:12|)) (* 19.0 |v13:4|))))
 (let ((?x2894 (* ?x2855 |v15:2|)))
 (let (($x286 (<= (+ (+ (+ (* ?x1646 |v1:16|) (* 16.0 |v12:5|)) (* 8.0 |v2:15|)) ?x2894) 6.0)))
 (let (($x397 (and $x286 (<= (+ (+ (+ (* ?x2910 |v12:5|) ?x1668) (* 15.0 |v1:16|)) |v13:4|) 8.0))))
 (let ((?x1690 (* 15.0 ?x2087)))
 (let (($x1095 (<= (+ (+ (+ (* ?x1667 |v13:4|) (* 6.0 |v1:16|)) (* ?x2589 |v4:13|)) ?x1690) ?x2589)))
 (let ((?x127 (* ?x1667 |v5:12|)))
 (let ((?x2185 (+ (+ (+ (* ?x2910 (rval2 |v8:9_st|)) (* 7.0 |v5:12|)) (* 5.0 ?x1685)) ?x127)))
 (let (($x3407 (or (and (and (<= ?x2185 ?x2811) $x1095) $x397) (or (and (<= ?x2667 ?x869) $x2167) (or (<= ?x88 ?x2811) (<= ?x207 ?x2804))))))
 (let (($x2681 (and (or (and $x3407 $x934) $x2336) (and (and (and $x3073 $x1834) $x860) (and (or $x665 $x3106) $x3376)))))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!8363)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!8362)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!8361)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!8360)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!8359)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!8358)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 $x2681)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
