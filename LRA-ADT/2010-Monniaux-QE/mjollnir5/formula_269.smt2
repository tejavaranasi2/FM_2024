; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((|v17:0| Real) )(forall ((|v16:1| Real) )(forall ((|v15:2| Real) )(forall ((|v14:3| Real) )(forall ((|v13:4| Real) )(forall ((|v12:5| Real) )(exists ((|v11:6_st| RealState) (val!7368 Real) )(exists ((|v10:7_st| RealState) (val!7369 Real) )(exists ((|v9:8_st| RealState) (val!7370 Real) )(exists ((|v8:9_st| RealState) (val!7371 Real) )(exists ((|v7:10_st| RealState) (val!7372 Real) )(exists ((|v6:11_st| RealState) (val!7373 Real) )(forall ((|v5:12| Real) )(forall ((|v4:13| Real) )(forall ((|v3:14| Real) )(forall ((|v2:15| Real) )(forall ((|v1:16| Real) )(forall ((|v0:17| Real) )(let ((?x1860 (* 10.0 |v14:3|)))
 (let (($x1090 (<= (+ (+ (+ (* 2.0 |v3:14|) |v4:13|) (* (- 19.0) (rval2 |v7:10_st|))) ?x1860) 15.0)))
 (let ((?x765 (- 4.0)))
 (let ((?x699 (* ?x765 |v0:17|)))
 (let ((?x50 (+ (+ (+ (* (- 14.0) (rval2 |v8:9_st|)) (* 16.0 |v16:1|)) (* 3.0 |v17:0|)) ?x699)))
 (let ((?x171 (- 10.0)))
 (let ((?x3426 (- 17.0)))
 (let ((?x902 (* ?x3426 |v2:15|)))
 (let ((?x372 (+ (+ (* 14.0 (rval2 |v6:11_st|)) (* (- 8.0) |v3:14|)) (* (- 7.0) |v16:1|))))
 (let ((?x3074 (- 2.0)))
 (let ((?x677 (- 9.0)))
 (let ((?x1404 (* ?x677 |v3:14|)))
 (let ((?x2933 (+ (+ (+ (* (- 14.0) |v3:14|) (* (- 14.0) |v3:14|)) ?x1404) (* ?x171 |v4:13|))))
 (let (($x1203 (<= ?x2933 ?x3074)))
 (let ((?x3029 (* 2.0 |v5:12|)))
 (let (($x884 (<= (+ (+ (+ ?x1404 (* 0.0 (rval2 |v9:8_st|))) (* 15.0 |v14:3|)) ?x3029) 10.0)))
 (let ((?x1190 (- 18.0)))
 (let ((?x539 (- 7.0)))
 (let ((?x1306 (* ?x539 |v0:17|)))
 (let ((?x845 (- 5.0)))
 (let ((?x3385 (* ?x845 |v0:17|)))
 (let (($x1491 (<= (+ (+ (+ (* (- 15.0) (rval2 |v8:9_st|)) (* 12.0 |v4:13|)) ?x3385) ?x1306) ?x1190)))
 (let ((?x2214 (- 19.0)))
 (let ((?x1810 (* 19.0 |v5:12|)))
 (let ((?x38 (+ (+ (+ (* 14.0 |v0:17|) (* (- 16.0) |v16:1|)) (* 6.0 (rval2 |v9:8_st|))) ?x1810)))
 (let ((?x2938 (+ (+ (+ (* 2.0 |v4:13|) (* ?x539 |v5:12|)) (* (- 14.0) |v17:0|)) (* 15.0 (rval2 |v11:6_st|)))))
 (let (($x2566 (and (or (and (<= ?x2938 13.0) (<= ?x38 ?x2214)) (and $x1491 $x884)) (and (or $x1203 (<= (+ ?x372 ?x902) ?x171)) (and (<= ?x50 19.0) $x1090)))))
 (let ((?x210 (rval2 |v10:7_st|)))
 (let ((?x469 (* 9.0 ?x210)))
 (let ((?x3079 (rval2 |v9:8_st|)))
 (let ((?x747 (* ?x845 ?x3079)))
 (let (($x1940 (<= (+ (+ (+ (* 20.0 |v0:17|) (* (- 8.0) (rval2 |v6:11_st|))) ?x747) ?x469) ?x2214)))
 (let ((?x966 (+ (+ (+ (* ?x677 |v15:2|) (* 12.0 |v12:5|)) (* 12.0 |v2:15|)) (* ?x3074 (rval2 |v8:9_st|)))))
 (let ((?x2339 (+ (+ (+ (* (- 6.0) |v5:12|) (* 2.0 |v13:4|)) (* (- 16.0) |v1:16|)) (* ?x171 |v13:4|))))
 (let ((?x1903 (- 14.0)))
 (let (($x1351 (<= (+ (+ (+ (* ?x845 |v17:0|) ?x1860) (* 2.0 |v14:3|)) (* 3.0 |v0:17|)) ?x1903)))
 (let ((?x3384 (+ (+ (+ (* 10.0 |v5:12|) (* 7.0 ?x3079)) (* 6.0 |v3:14|)) (* ?x3074 |v17:0|))))
 (let ((?x2081 (+ (+ (+ |v16:1| (* 20.0 |v4:13|)) (* 16.0 (rval2 |v7:10_st|))) (* ?x1903 |v16:1|))))
 (let ((?x1370 (+ (+ (+ (* 16.0 |v12:5|) (* ?x171 (rval2 |v8:9_st|))) (* (- 8.0) ?x210)) ?x747)))
 (let (($x1642 (and (or (and (<= ?x1370 6.0) (<= ?x2081 3.0)) (<= ?x3384 12.0)) (and (or $x1351 (<= ?x2339 20.0)) (or (<= ?x966 ?x539) $x1940)))))
 (let ((?x2661 (+ (+ (+ |v17:0| (* (- 16.0) ?x3079)) (* ?x765 |v15:2|)) (* (- 1.0) (rval2 |v8:9_st|)))))
 (let ((?x1348 (+ (+ (+ (* (- 15.0) ?x210) (* ?x845 |v1:16|)) (* ?x539 |v5:12|)) (* 6.0 (rval2 |v11:6_st|)))))
 (let ((?x134 (+ (+ (+ (* 18.0 |v13:4|) (* (- 1.0) |v2:15|)) (* ?x677 |v16:1|)) (* 5.0 |v13:4|))))
 (let ((?x3323 (- 11.0)))
 (let ((?x2553 (* ?x3323 |v12:5|)))
 (let ((?x424 (rval2 |v7:10_st|)))
 (let ((?x1510 (* 20.0 ?x424)))
 (let (($x2199 (<= (+ (+ (+ (* 12.0 |v13:4|) (* ?x677 (rval2 |v11:6_st|))) ?x1510) ?x2553) ?x677)))
 (let ((?x1568 (rval2 |v8:9_st|)))
 (let ((?x2773 (* 11.0 ?x1568)))
 (let (($x2898 (<= (+ (+ (+ (* 4.0 |v0:17|) (* 11.0 ?x210)) (* 12.0 |v2:15|)) ?x2773) 5.0)))
 (let (($x352 (<= (+ (+ (+ ?x1404 (* (- 12.0) |v0:17|)) ?x2553) (* (- 6.0) |v15:2|)) 17.0)))
 (let ((?x293 (+ (+ (+ (* 16.0 (rval2 |v11:6_st|)) (* ?x765 ?x424)) (* ?x1903 |v14:3|)) (* 5.0 (rval2 |v6:11_st|)))))
 (let ((?x115 (* ?x2214 |v5:12|)))
 (let ((?x930 (+ (+ (+ (* 10.0 ?x424) (* (- 20.0) (rval2 |v6:11_st|))) (* 2.0 ?x1568)) ?x115)))
 (let ((?x2650 (- 15.0)))
 (let (($x1853 (<= (+ (+ (+ (* 2.0 ?x1568) (* (- 20.0) |v13:4|)) |v5:12|) (* ?x539 |v4:13|)) ?x2650)))
 (let (($x1210 (or (and (and $x1853 (<= ?x930 ?x1190)) (and (<= ?x293 5.0) $x352)) (and (and $x2898 $x2199) (and (<= ?x134 8.0) (<= ?x1348 20.0))))))
 (let ((?x3073 (+ (+ (+ (* (- 13.0) |v17:0|) (* ?x2650 |v1:16|)) (* 19.0 |v12:5|)) (* (- 6.0) ?x1568))))
 (let ((?x3358 (+ (+ (+ (* (- 13.0) |v16:1|) (* 3.0 |v12:5|)) (* ?x539 |v14:3|)) (* 18.0 |v15:2|))))
 (let ((?x1782 (- 20.0)))
 (let ((?x124 (* ?x1782 |v1:16|)))
 (let (($x1864 (<= (+ (+ (+ (* ?x2214 |v13:4|) (* 0.0 |v3:14|)) (* (- 6.0) ?x210)) ?x124) ?x3074)))
 (let ((?x2531 (+ (+ (+ (* 17.0 ?x3079) (* (- 16.0) |v12:5|)) (* 3.0 |v14:3|)) (* ?x3426 |v17:0|))))
 (let ((?x1214 (+ (+ (+ (* 12.0 |v15:2|) (* ?x2214 ?x210)) (* 11.0 ?x210)) (* (- 13.0) ?x424))))
 (let ((?x2178 (* 16.0 |v13:4|)))
 (let ((?x1231 (+ (+ (* (- 6.0) |v12:5|) (* (- 13.0) (rval2 |v11:6_st|))) (* 18.0 |v12:5|))))
 (let (($x2824 (or (or (<= (+ ?x1231 ?x2178) ?x1782) (or (<= ?x1214 ?x539) (<= ?x2531 16.0))) (and (and $x1864 (<= ?x3358 ?x765)) (<= ?x3073 3.0)))))
 (let ((?x3272 (+ (+ (+ (* 6.0 (rval2 |v6:11_st|)) (* (- 16.0) ?x3079)) (* ?x3426 |v13:4|)) ?x1404)))
 (let ((?x1950 (- 3.0)))
 (let (($x1895 (<= (+ (+ (+ (* 11.0 ?x424) ?x124) (* 12.0 ?x424)) (* 0.0 ?x3079)) ?x1950)))
 (let ((?x3040 (* ?x539 |v5:12|)))
 (let (($x1046 (<= (+ (+ (+ (* 3.0 |v0:17|) (* 6.0 |v5:12|)) (* ?x1190 ?x210)) ?x3040) 10.0)))
 (let ((?x1059 (+ (+ (+ (* 3.0 ?x1568) (* 20.0 |v12:5|)) (* ?x3426 ?x424)) (* 19.0 |v16:1|))))
 (let ((?x2888 (+ (+ (+ (* ?x765 |v5:12|) ?x747) (* 5.0 |v17:0|)) (* 11.0 (rval2 |v6:11_st|)))))
 (let ((?x3451 (* 9.0 |v0:17|)))
 (let (($x1814 (<= (+ (+ (+ (* ?x3323 |v2:15|) (* ?x2650 |v2:15|)) (* 7.0 |v17:0|)) ?x3451) ?x539)))
 (let ((?x248 (+ (+ (+ (* (- 12.0) |v2:15|) (* ?x765 ?x3079)) (* ?x3323 |v3:14|)) (* ?x3074 ?x3079))))
 (let ((?x167 (* 13.0 |v16:1|)))
 (let (($x1737 (<= (+ (+ (+ (* 16.0 ?x3079) (* 18.0 ?x3079)) (* ?x677 |v12:5|)) ?x167) ?x171)))
 (let (($x1887 (or (or (or $x1737 (<= ?x248 4.0)) (or $x1814 (<= ?x2888 17.0))) (or (and (<= ?x1059 14.0) $x1046) (and $x1895 (<= ?x3272 1.0))))))
 (let ((?x2964 (+ (+ (+ (* ?x1903 |v1:16|) (* (- 16.0) |v4:13|)) (* ?x677 ?x210)) (* ?x677 |v17:0|))))
 (let ((?x604 (+ (+ (+ (* ?x1950 (rval2 |v11:6_st|)) (* 8.0 |v12:5|)) (* 15.0 |v15:2|)) (* ?x677 ?x1568))))
 (let ((?x1378 (* 5.0 |v4:13|)))
 (let ((?x371 (+ (+ (+ (* 6.0 (rval2 |v6:11_st|)) (* ?x3323 ?x3079)) (* 7.0 |v5:12|)) ?x1378)))
 (let (($x1697 (<= (+ (+ (+ (* ?x3074 |v2:15|) (* 13.0 ?x210)) ?x1810) (* 18.0 |v14:3|)) ?x677)))
 (let ((?x3213 (* 13.0 |v15:2|)))
 (let (($x876 (<= (+ (+ (+ (* ?x845 |v12:5|) (* 12.0 ?x424)) (* ?x539 |v2:15|)) ?x3213) ?x765)))
 (let ((?x1176 (* 7.0 ?x1568)))
 (let (($x390 (<= (+ (+ (+ (* 7.0 ?x424) (* ?x171 |v3:14|)) (* 12.0 |v17:0|)) ?x1176) ?x2214)))
 (let ((?x1385 (* 20.0 |v5:12|)))
 (let ((?x664 (+ (+ (+ (* (- 8.0) |v1:16|) (* 9.0 |v3:14|)) (* 8.0 |v17:0|)) ?x1385)))
 (let (($x597 (and (or (and (<= ?x664 ?x539) $x390) $x876) (or (or $x1697 (<= ?x371 ?x2650)) (and (<= ?x604 15.0) (<= ?x2964 ?x677))))))
 (let ((?x527 (- 13.0)))
 (let ((?x1213 (* ?x527 |v0:17|)))
 (let (($x3474 (<= (+ (+ (+ (* 4.0 ?x210) (* ?x3074 |v14:3|)) (* 16.0 ?x1568)) ?x1213) 17.0)))
 (let (($x536 (or (or (and $x3474 $x597) (or $x1887 $x2824)) (and (and $x1210 (<= ?x2661 ?x765)) (or $x1642 $x2566)))))
 (let (($x785 (not (= |v6:11_st| (RMk1 val!7373)))))
 (let (($x1017 (not (= |v7:10_st| (RMk1 val!7372)))))
 (let (($x2912 (not (= |v8:9_st| (RMk1 val!7371)))))
 (let (($x2702 (not (= |v9:8_st| (RMk1 val!7370)))))
 (let (($x1978 (not (= |v10:7_st| (RMk1 val!7369)))))
 (let (($x891 (not (= |v11:6_st| (RMk1 val!7368)))))
 (and $x891 $x1978 $x2702 $x2912 $x1017 $x785 $x536)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
 )
(check-sat)
