; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x1781 (and (and (not bool.b8) (not bool.b10)) (and (not bool.b5) (not bool.b14)))))
 (let (($x32392 (not bool.b12)))
 (let (($x13998 (and $x32392 $x1781)))
 (let (($x13993 (not (and (not bool.b5) bool.b23))))
 (let (($x15535 (not (and $x13993 (not $x13998)))))
 (let ((?x39571 (- 10.0)))
 (let ((?x1694 (+ x5 (* 1.0 ?lambda))))
 (let ((?x26295 (- 1.0)))
 (let ((?x7910 (* ?x26295 ?x1694)))
 (let (($x1908 (<= ?x7910 ?x39571)))
 (let (($x23748 (and $x1908 (and (not (<= (* 1.0 (+ x4 (* 60.0 ?lambda))) 4820.0)) $x15535))))
 (let ((?x18503 (+ x3 (* ?x26295 ?lambda))))
 (let ((?x28822 (* 1.0 ?x18503)))
 (let (($x28779 (<= ?x28822 0.0)))
 (let (($x26588 (and (<= (+ ?x28822 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 1200.0) (and $x1908 (and (<= ?x28822 20.0) (and (not bool.b23) $x13998))))))
 (let (($x417 (not (<= (+ ?x28822 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 723.0))))
 (let (($x24689 (and (not (and (not $x28779) (not (and $x417 $x26588)))) (not (and $x28779 (not $x23748))))))
 (let (($x28666 (not $x24689)))
 (let ((?x3288 (* 60.0 ?lambda)))
 (let ((?x6998 (+ x4 ?x3288)))
 (let ((?x1188 (* 1.0 ?x6998)))
 (let ((?x10560 (+ ?x1188 (* (- 60.0) ?x1694))))
 (let (($x19443 (<= ?x10560 4220.0)))
 (let (($x15927 (and (<= ?x10560 7400.0) (and (not (and (not $x15535) (not $x19443))) (not (and $x19443 $x28666))))))
 (let (($x16051 (<= (+ ?x28822 (* 1.0 ?x1694)) 10.0)))
 (let (($x28932 (and (<= (+ (* ?x26295 ?x18503) ?x7910) ?x39571) (and (not (and (not $x16051) $x28666)) (not (and $x16051 (not $x15927)))))))
 (let (($x26007 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x22588 (not bool.b22)))
 (let (($x39011 (and $x22588 (and $x26007 (not (and bool.b7 (not (and bool.b6 $x28932))))))))
 (let (($x9761 (exists ((?lambdaprime Real) )(! (let (($x22588 (not bool.b22)))
 (let (($x12688 (not (<= (* 1.0 (+ x3 (* (- 1.0) ?lambdaprime))) 33.0))))
 (let (($x6237 (and $x12688 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x23295 (not (<= (* 1.0 (+ x3 (* (- 1.0) ?lambdaprime))) 40.0))))
 (let (($x9183 (and (not (and $x23295 $x6237)) (and $x22588 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x6253 (and $x12688 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x20896 (and (not (and $x23295 $x6253)) (and $x22588 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x17889 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x12688)))
 (let (($x21696 (and (not (and $x23295 $x17889)) (and $x22588 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x30349 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x21696) (not $x20896)) (not $x9183)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x30349)))))))))))) :qid k!27))
 ))
 (or (or $x9761 (< ?lambda 0.0)) (not $x39011)))))))))))))))))))))))))))))))))
 )
(check-sat)
