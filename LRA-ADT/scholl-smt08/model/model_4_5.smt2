; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b1 () Bool)
(declare-fun bool.b0 () Bool)
(declare-fun bool.b2 () Bool)
(declare-fun bool.b31 () Bool)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(assert
 (forall ((?lambda Real) )(let (($x6784 (and bool.b31 (and (not bool.b2) (and (not bool.b0) bool.b1)))))
 (let (($x34444 (and (not $x6784) (not (and (not bool.b2) (and bool.b0 (not bool.b1)))))))
 (let ((?x2544 (+ x3 (* (/ 1.0 2.0) ?lambda))))
 (let ((?x12343 (* 1.0 ?x2544)))
 (let (($x7910 (<= (+ ?x12343 (* (- 5.0) (+ x5 (* (/ 1.0 10.0) ?lambda)))) 227.0)))
 (let (($x22254 (and (not $x7910) (and (not (and bool.b2 (and (not bool.b0) bool.b1))) $x34444))))
 (let (($x382 (<= ?x12343 242.0)))
 (let ((?x13456 (+ ?x12343 (* (/ 8.0 5.0) (+ x4 (* (/ (- 5.0) 16.0) ?lambda))))))
 (let ((?x13228 (+ x4 (* (/ (- 5.0) 16.0) ?lambda))))
 (let ((?x26295 (- 1.0)))
 (let ((?x6368 (* ?x26295 ?x13228)))
 (let (($x20494 (and (<= ?x6368 (- 20.0)) (not (<= (+ ?x12343 (* (/ (- 8.0) 5.0) ?x13228)) 195.0)))))
 (let (($x26723 (and (and (not $x20494) (not (and (not $x382) (<= ?x6368 (- 15.0))))) (not (and (not (<= ?x13456 266.0)) (and $x382 $x22254))))))
 (let (($x6452 (exists ((?lambdaprime Real) )(! (let (($x39282 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 340.0)))))
 (let (($x6788 (not (<= (* 1.0 (+ x4 (* (/ (- 5.0) 16.0) ?lambdaprime))) 0.0))))
 (let (($x14788 (not (and (not (and $x6788 $x39282)) (and (not bool.b0) (not bool.b1))))))
 (let (($x3890 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 335.0)))))
 (let (($x17590 (not (and $x6788 $x3890))))
 (let (($x28364 (and $x17590 (and bool.b31 (and bool.b2 (and bool.b0 (not bool.b1)))))))
 (let ((?x2544 (+ x3 (* (/ 1.0 2.0) ?lambdaprime))))
 (let ((?x26295 (- 1.0)))
 (let ((?x34458 (* ?x26295 ?x2544)))
 (let (($x1035 (not (<= ?x34458 (/ (- 475.0) 2.0)))))
 (let (($x19018 (and (not (and $x6788 $x1035)) (and bool.b31 (and (not bool.b2) (and bool.b0 (not bool.b1)))))))
 (let (($x12160 (and $x17590 (and (not bool.b31) (and bool.b2 (and bool.b0 (not bool.b1)))))))
 (let (($x7118 (not bool.b1)))
 (let (($x12386 (and bool.b0 $x7118)))
 (let (($x22690 (not bool.b2)))
 (let (($x25324 (and $x22690 $x12386)))
 (let (($x14795 (not bool.b31)))
 (let (($x4604 (not (<= (* 1.0 (+ x4 (* (/ (- 5.0) 16.0) ?lambdaprime))) 15.0))))
 (let (($x1573 (and (not (and (not (<= ?x34458 (- 235.0))) $x6788)) (and bool.b31 (and bool.b2 (and (not bool.b0) bool.b1))))))
 (let (($x6784 (and bool.b31 (and $x22690 (and (not bool.b0) bool.b1)))))
 (let (($x19208 (not (and (not (and (not (<= ?x34458 (/ (- 445.0) 2.0))) $x4604)) $x6784))))
 (let (($x13125 (and (not (and $x4604 (not (<= ?x34458 (- 235.0))))) (and $x14795 (and bool.b2 (and (not bool.b0) bool.b1))))))
 (let (($x8108 (and (and (and (not $x13125) $x19208) (not $x1573)) (not (and (not (and $x4604 $x1035)) (and $x14795 $x25324))))))
 (let (($x4418 (and (not (<= (* ?x26295 (+ x5 (* (/ 1.0 10.0) ?lambdaprime))) (- 3.0))) (and (and (and (and $x8108 (not $x12160)) (not $x19018)) (not $x28364)) $x14788))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x4418)))))))))))))))))))))))))) :qid k!22))
 ))
 (or (or $x6452 (< ?lambda 0.0)) $x26723))))))))))))))))
 )
(check-sat)
