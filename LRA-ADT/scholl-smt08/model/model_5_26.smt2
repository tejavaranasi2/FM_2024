; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b19 () Bool)
(declare-fun bool.b18 () Bool)
(declare-fun bool.b20 () Bool)
(declare-fun bool.b21 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b17 () Bool)
(declare-fun x3 () Real)
(assert
 (forall ((?lambda Real) )(let (($x22529 (not bool.b19)))
 (let (($x9791 (not bool.b18)))
 (let (($x10117 (and $x9791 $x22529)))
 (let (($x189 (not bool.b20)))
 (let (($x16256 (and $x189 $x10117)))
 (let (($x12288 (not bool.b21)))
 (let (($x24411 (and $x12288 $x16256)))
 (let (($x22588 (not bool.b22)))
 (let (($x10694 (and $x22588 $x24411)))
 (let (($x14107 (not bool.b23)))
 (let (($x19524 (not (and $x189 (not (and (not $x10117) (not (and bool.b18 bool.b19))))))))
 (let (($x11935 (not (and $x12288 (not (and $x19524 (not (and bool.b20 (not $x10117)))))))))
 (let (($x19671 (and (not (and $x22588 (not (and $x11935 (not (and bool.b21 (not $x16256))))))) (not (and bool.b22 (not $x24411))))))
 (let (($x71 (not (and (not (and $x14107 (not $x19671))) (not (and bool.b23 (not $x10694)))))))
 (let (($x30458 (not bool.b17)))
 (let (($x14795 (and (not (and $x30458 $x71)) (not (and bool.b17 (not (and $x14107 $x10694)))))))
 (let ((?x31857 (* 1.0 (+ x3 (* (/ (- 1.0) 20.0) ?lambda)))))
 (let (($x2474 (<= ?x31857 0.0)))
 (let (($x19976 (and $x2474 (and (not $x14795) (<= (* 1.0 (+ x4 (* 60.0 ?lambda))) 4820.0)))))
 (let (($x14661 (and $x14107 (not (and (not (and $x189 $x22588)) (not (and bool.b20 bool.b22)))))))
 (let (($x6566 (and $x12288 (not (and (not $x14661) (not (and bool.b23 (not (and $x189 $x22588)))))))))
 (let (($x12062 (not $x6566)))
 (let (($x14552 (and $x30458 (and $x12062 (not (and bool.b21 (not (and $x14107 (and $x189 $x22588)))))))))
 (let (($x13762 (and (not (and (not $x2474) (not (and $x22529 (and $x9791 $x14552))))) (not $x19976))))
 (let ((?x38309 (+ ?x31857 (* (/ 1.0 1200.0) (+ x4 (* 60.0 ?lambda))))))
 (let (($x6943 (and (<= ?x38309 (/ 20.0 3.0)) (and (not (<= ?x38309 (/ 241.0 60.0))) $x13762))))
 (let (($x20383 (exists ((?lambdaprime Real) )(! (let (($x25774 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 20.0) ?lambdaprime))) 33.0))))
 (let (($x10258 (and $x25774 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x16210 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 20.0) ?lambdaprime))) 40.0))))
 (let (($x20073 (and $x25774 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x3257 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x25774)))
 (let (($x14812 (and (not (and bool.b17 (not (and $x16210 $x3257)))) (not (and bool.b18 (not (and $x16210 $x20073)))))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not (and $x14812 (not (and bool.b19 (not (and $x16210 $x10258))))))))))))) :qid k!24))
 ))
 (or (or $x20383 (< ?lambda 0.0)) (not $x6943))))))))))))))))))))))))))))))
 )
(check-sat)
