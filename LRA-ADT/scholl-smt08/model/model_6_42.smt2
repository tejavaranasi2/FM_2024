; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x30600 (and (and (not bool.b8) (not bool.b10)) (and (not bool.b5) (not bool.b14)))))
 (let (($x7878 (not bool.b12)))
 (let (($x10295 (and $x7878 $x30600)))
 (let (($x33821 (not (and (not bool.b5) bool.b23))))
 (let (($x8040 (not (and $x33821 (not $x10295)))))
 (let (($x28339 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x15605 (and $x28339 (and (not (<= (* 1.0 (+ x4 (* 60.0 ?lambda))) 4820.0)) $x8040))))
 (let ((?x16563 (+ x3 (* (/ (- 1.0) 5.0) ?lambda))))
 (let ((?x17484 (* 1.0 ?x16563)))
 (let (($x14107 (<= ?x17484 0.0)))
 (let (($x636 (and (<= (+ ?x17484 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 1200.0) (and $x28339 (and (<= ?x17484 20.0) (and (not bool.b23) $x10295))))))
 (let (($x4865 (not (<= (+ ?x17484 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 723.0))))
 (let (($x16544 (not (and $x4865 $x636))))
 (let ((?x4242 (* 60.0 ?lambda)))
 (let ((?x1771 (+ x4 ?x4242)))
 (let ((?x16910 (* 1.0 ?x1771)))
 (let ((?x26928 (+ ?x16910 (* (- 60.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x11311 (<= ?x26928 4220.0)))
 (let (($x16693 (and $x11311 (not (and (not (and (not $x14107) $x16544)) (not (and $x14107 (not $x15605))))))))
 (let (($x15883 (and (<= ?x26928 7400.0) (and (not (and (not $x8040) (not $x11311))) (not $x16693)))))
 (let (($x3896 (<= (+ ?x17484 (* (/ 1.0 5.0) (+ x5 (* 1.0 ?lambda)))) 2.0)))
 (let ((?x11846 (+ (* (- 1.0) ?x16563) (* (/ (- 1.0) 5.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x14627 (and (<= ?x11846 (- 2.0)) (and (not (and (not $x3896) $x16544)) (not (and $x3896 (not $x15883)))))))
 (let (($x2170 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x28895 (not bool.b22)))
 (let (($x14186 (and $x28895 (and $x2170 (not (and bool.b7 (not (and bool.b6 $x14627))))))))
 (let (($x25527 (exists ((?lambdaprime Real) )(! (let (($x28895 (not bool.b22)))
 (let (($x6256 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))) 33.0))))
 (let (($x2245 (and $x6256 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x13827 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))) 40.0))))
 (let (($x6680 (and (not (and $x13827 $x2245)) (and $x28895 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x6459 (and $x6256 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x14859 (and (not (and $x13827 $x6459)) (and $x28895 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x472 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x6256)))
 (let (($x10110 (and (not (and $x13827 $x472)) (and $x28895 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x7714 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x10110) (not $x14859)) (not $x6680)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x7714)))))))))))) :qid k!27))
 ))
 (or (or $x25527 (< ?lambda 0.0)) (not $x14186))))))))))))))))))))))))))))))
 )
(check-sat)
