; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(declare-fun x5 () Real)
(assert
 (forall ((?lambda Real) )(let (($x10178 (not bool.b22)))
 (let (($x19566 (exists ((?lambdaprime Real) )(! (let (($x10178 (not bool.b22)))
 (let (($x12426 (not (<= (* 1.0 (+ x3 (* (- 1.0) ?lambdaprime))) 33.0))))
 (let (($x18570 (and $x12426 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x18647 (not (<= (* 1.0 (+ x3 (* (- 1.0) ?lambdaprime))) 40.0))))
 (let (($x15168 (and (not (and $x18647 $x18570)) (and $x10178 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x17526 (and $x12426 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x16326 (and (not (and $x18647 $x17526)) (and $x10178 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x17428 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x12426)))
 (let (($x28660 (and (not (and $x18647 $x17428)) (and $x10178 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x27346 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x28660) (not $x16326)) (not $x15168)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x27346)))))))))))) :qid k!22))
 ))
 (or (or $x19566 (< ?lambda 0.0)) (not (and $x10178 (and (not bool.b7) (and bool.b5 (not bool.b6)))))))))
 )
(check-sat)
