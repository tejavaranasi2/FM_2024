; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b5 () Bool)
(declare-fun x3 () Real)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun x5 () Real)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x9372 (not bool.b5)))
 (let (($x6958 (not (and $x9372 (not (<= (* 1.0 (+ x4 (* 60.0 ?lambda))) 4820.0))))))
 (let ((?x19246 (+ x3 (* (/ 1.0 2.0) ?lambda))))
 (let ((?x13985 (* 1.0 ?x19246)))
 (let (($x2608 (<= ?x13985 0.0)))
 (let (($x14294 (and (and (not bool.b8) (not bool.b10)) (and $x9372 (not bool.b14)))))
 (let (($x25887 (not bool.b12)))
 (let (($x13693 (and $x25887 $x14294)))
 (let (($x20073 (and (<= (+ ?x13985 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 1200.0) $x13693)))
 (let (($x5481 (not (<= (+ ?x13985 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda)))) 723.0))))
 (let (($x39109 (and (<= (+ ?x13985 (* 3.0 (+ x5 (* 1.0 ?lambda)))) 50.0) (and $x5481 (and (<= ?x13985 40.0) $x20073)))))
 (let (($x2462 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x11800 (and $x2462 (and (not (and (not $x2608) (not $x39109))) (not (and $x2608 $x6958))))))
 (let ((?x18222 (+ ?x13985 (* (/ 3.0 20.0) (+ x4 (* 60.0 ?lambda))))))
 (let ((?x6107 (+ ?x18222 (* (/ (- 19.0) 2.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x15469 (<= ?x6107 628.0)))
 (let ((?x15454 (+ ?x13985 (* (/ 3.0 40.0) (+ x4 (* 60.0 ?lambda))))))
 (let (($x9665 (<= ?x15454 610.0)))
 (let (($x2547 (<= ?x15454 (/ 743.0 2.0))))
 (let (($x5182 (not $x2547)))
 (let (($x11659 (and (not (and $x2547 (not (and $x5481 $x20073)))) (not (and $x5182 (not (and $x9665 (and (<= ?x13985 30.0) $x20073))))))))
 (let (($x14523 (and (not (and $x15469 (not (and $x2462 $x11659)))) (not (and (not $x13693) (not $x15469))))))
 (let (($x10771 (<= (+ ?x13985 (* (/ (- 1.0) 2.0) (+ x5 (* 1.0 ?lambda)))) 15.0)))
 (let (($x9761 (not (and $x5182 (not (and $x9665 (and (<= ?x13985 30.0) (and $x2462 $x13693))))))))
 (let (($x2688 (<= (+ ?x18222 (* (/ (- 13.0) 2.0) (+ x5 (* 1.0 ?lambda)))) 658.0)))
 (let (($x127 (and (not $x2688) (not (and $x9761 (not (and $x2547 (not (and $x2462 $x13693)))))))))
 (let (($x8470 (and $x2688 (not (and $x5182 (and $x9665 (and (<= ?x13985 30.0) (and $x2462 $x13693))))))))
 (let (($x15498 (and (not (and (not $x10771) (not (and (not $x8470) (not $x127))))) (not (and $x10771 (not (and (<= ?x6107 1105.0) $x14523)))))))
 (let (($x8015 (not bool.b23)))
 (let (($x12333 (and bool.b6 (and (not (and $x8015 (not $x15498))) (not (and bool.b23 (not $x11800)))))))
 (let (($x25119 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x6404 (not bool.b22)))
 (let (($x3867 (exists ((?lambdaprime Real) )(! (let (($x6404 (not bool.b22)))
 (let (($x5081 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 30.0)))))
 (let (($x10694 (and $x5081 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x8385 (and (not $x10694) (and $x6404 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x3155 (and $x5081 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x12590 (and (not $x3155) (and $x6404 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x11882 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x5081)))
 (let (($x39308 (and (not $x11882) (and $x6404 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x11604 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x39308) (not $x12590)) (not $x8385)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x11604))))))))))) :qid k!27))
 ))
 (or (or $x3867 (< ?lambda 0.0)) (not (and $x6404 (and $x25119 (not (and bool.b7 (not $x12333)))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
