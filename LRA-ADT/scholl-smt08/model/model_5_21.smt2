; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b19 () Bool)
(declare-fun bool.b18 () Bool)
(declare-fun bool.b20 () Bool)
(declare-fun bool.b21 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b17 () Bool)
(declare-fun x3 () Real)
(assert
 (forall ((?lambda Real) )(let (($x6437 (not bool.b19)))
 (let (($x36414 (not bool.b18)))
 (let (($x1579 (and $x36414 $x6437)))
 (let (($x6971 (not bool.b20)))
 (let (($x10076 (and $x6971 $x1579)))
 (let (($x1307 (not bool.b21)))
 (let (($x8237 (and $x1307 $x10076)))
 (let (($x850 (not bool.b22)))
 (let (($x4365 (and $x850 $x8237)))
 (let (($x5505 (not bool.b23)))
 (let (($x4337 (not (and $x6971 (not (and (not $x1579) (not (and bool.b18 bool.b19))))))))
 (let (($x5692 (not (and $x1307 (not (and $x4337 (not (and bool.b20 (not $x1579)))))))))
 (let (($x10045 (and (not (and $x850 (not (and $x5692 (not (and bool.b21 (not $x10076))))))) (not (and bool.b22 (not $x8237))))))
 (let (($x11588 (not (and (not (and $x5505 (not $x10045))) (not (and bool.b23 (not $x4365)))))))
 (let (($x8108 (not bool.b17)))
 (let (($x2403 (and (not (and $x8108 $x11588)) (not (and bool.b17 (not (and $x5505 $x4365)))))))
 (let ((?x13228 (* 1.0 (+ x3 (* (- 3.0) ?lambda)))))
 (let (($x10687 (<= ?x13228 0.0)))
 (let (($x22635 (and $x10687 (and (not $x2403) (<= (* 1.0 (+ x4 (* 20.0 ?lambda))) 4820.0)))))
 (let (($x23682 (and bool.b23 (not (and $x850 (and $x1307 (and $x6971 (and $x6437 (and $x8108 $x36414)))))))))
 (let (($x16159 (and bool.b22 (not (and $x1307 (and $x6971 (and $x6437 (and $x8108 $x36414))))))))
 (let (($x21053 (and (not (and $x1307 (not (and bool.b20 (and $x6437 (and $x8108 $x36414)))))) (not (and bool.b21 (not (and $x6971 (and $x6437 (and $x8108 $x36414)))))))))
 (let (($x25773 (and (not (and $x5505 (not (and (not (and $x850 (not $x21053))) (not $x16159))))) (not $x23682))))
 (let (($x11892 (not (<= (+ ?x13228 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 723.0))))
 (let (($x11 (and (<= (+ ?x13228 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 1200.0) (and $x11892 (and (not (and (not $x10687) (not $x25773))) (not $x22635))))))
 (let (($x8015 (exists ((?lambdaprime Real) )(! (let (($x19276 (not (<= (* 1.0 (+ x3 (* (- 3.0) ?lambdaprime))) 45.0))))
 (let (($x12400 (and $x19276 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x21212 (and $x19276 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x14436 (and (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4100.0))) $x19276)))
 (let (($x15238 (and (not (and bool.b17 (not $x14436))) (not (and bool.b18 (not $x21212))))))
 (let (($x12779 (not (and bool.b20 (<= (* 1.0 (+ x3 (* (- 3.0) ?lambdaprime))) 0.0)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not (and $x12779 (and $x15238 (not (and bool.b19 (not $x12400))))))))))))) :qid k!24))
 ))
 (or (or $x8015 (< ?lambda 0.0)) (not $x11)))))))))))))))))))))))))))))
 )
(check-sat)
