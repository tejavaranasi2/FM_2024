; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(declare-fun x5 () Real)
(assert
 (forall ((?lambda Real) )(let (($x6207 (not bool.b22)))
 (let (($x11787 (exists ((?lambdaprime Real) )(! (let (($x6207 (not bool.b22)))
 (let (($x2314 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))) 33.0))))
 (let (($x5188 (and $x2314 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x9446 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))) 40.0))))
 (let (($x19654 (and (not (and $x9446 $x5188)) (and $x6207 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x6027 (and $x2314 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x5170 (and (not (and $x9446 $x6027)) (and $x6207 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x3288 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x2314)))
 (let (($x24145 (and (not (and $x9446 $x3288)) (and $x6207 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x25244 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x24145) (not $x5170)) (not $x19654)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x25244)))))))))))) :qid k!22))
 ))
 (or (or $x11787 (< ?lambda 0.0)) (not (and $x6207 (and (not bool.b7) (and bool.b5 (not bool.b6)))))))))
 )
(check-sat)
