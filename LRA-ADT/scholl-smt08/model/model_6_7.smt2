; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun x3 () Real)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(assert
 (forall ((?lambda Real) )(let (($x28895 (not bool.b22)))
 (let (($x7867 (exists ((?lambdaprime Real) )(! (let (($x11644 (not (and bool.b22 (<= (* 1.0 (+ x3 (* (- 3.0) ?lambdaprime))) 40.0)))))
 (let ((?x9316 (* 1.0 (+ x3 (* (- 3.0) ?lambdaprime)))))
 (let (($x901 (<= ?x9316 40.0)))
 (let (($x14907 (and $x901 (and (not bool.b22) (and bool.b7 (and (not bool.b5) bool.b6))))))
 (let (($x28895 (not bool.b22)))
 (let (($x18950 (not (<= ?x9316 45.0))))
 (let (($x39249 (and $x18950 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x18121 (and (not $x39249) (and $x28895 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x320 (and $x18950 (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x6784 (and (not $x320) (and $x28895 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x14107 (and (not (<= (* (- 1.0) (+ x4 (* 60.0 ?lambdaprime))) (- 4100.0))) $x18950)))
 (let (($x2245 (and (not $x14107) (and $x28895 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x27791 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (and (not $x2245) (not $x6784)) (not $x18121)) (not $x14907)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not (and $x27791 $x11644)))))))))))))))) :qid k!22))
 ))
 (or (or $x7867 (< ?lambda 0.0)) (not (and $x28895 (and (not bool.b7) (and bool.b5 (not bool.b6)))))))))
 )
(check-sat)
