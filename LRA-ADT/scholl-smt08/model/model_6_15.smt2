; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(declare-fun x4 () Real)
(declare-fun x3 () Real)
(declare-fun x5 () Real)
(assert
 (forall ((?lambda Real) )(let (($x28895 (not bool.b22)))
 (let (($x1381 (exists ((?lambdaprime Real) )(! (let (($x28895 (not bool.b22)))
 (let (($x1195 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 30.0)))))
 (let (($x3544 (and $x1195 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x22909 (and (not $x3544) (and $x28895 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x6275 (and $x1195 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x2170 (and (not $x6275) (and $x28895 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x17889 (and (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4100.0))) $x1195)))
 (let (($x526 (and (not $x17889) (and $x28895 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x5982 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x526) (not $x2170)) (not $x22909)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x5982))))))))))) :qid k!22))
 ))
 (or (or $x1381 (< ?lambda 0.0)) (not (and $x28895 (and (not bool.b7) (and bool.b5 (not bool.b6)))))))))
 )
(check-sat)
