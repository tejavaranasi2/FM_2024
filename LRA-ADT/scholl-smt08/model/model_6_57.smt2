; benchmark generated from python API
(set-info :status unknown)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun bool.b5 () Bool)
(declare-fun x4 () Real)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let ((?x33724 (+ x3 (* (/ (- 1.0) 5.0) ?lambda))))
 (let ((?x1382 (* 1.0 ?x33724)))
 (let ((?x39197 (+ ?x1382 (* (/ 1.0 5.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x13856 (<= ?x39197 2.0)))
 (let (($x33893 (not bool.b5)))
 (let (($x10110 (not (and $x33893 (not (<= (* 1.0 (+ x4 (* 40.0 ?lambda))) 4820.0))))))
 (let (($x12295 (<= ?x1382 0.0)))
 (let (($x25324 (and (and (not bool.b8) (not bool.b10)) (and $x33893 (not bool.b14)))))
 (let (($x15440 (not bool.b12)))
 (let (($x3942 (and $x15440 $x25324)))
 (let (($x25773 (and (<= (+ ?x1382 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 1200.0) $x3942)))
 (let (($x9440 (not (<= (+ ?x1382 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 723.0))))
 (let (($x14171 (and (<= (+ ?x1382 (* 3.0 (+ x5 (* 1.0 ?lambda)))) 50.0) (and $x9440 (and (<= ?x1382 40.0) $x25773)))))
 (let (($x2006 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x31904 (and $x2006 (and (not (and (not $x12295) (not $x14171))) (not (and $x12295 $x10110))))))
 (let ((?x19018 (+ (* (- 1.0) ?x33724) (* (/ (- 1.0) 5.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x4331 (<= ?x19018 (- 2.0))))
 (let (($x39348 (and $x4331 (and (not (and (not $x13856) (not $x31904))) (not (and bool.b5 $x13856))))))
 (let ((?x25358 (+ ?x1382 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda))))))
 (let ((?x12160 (+ ?x25358 (* (/ (- 29.0) 5.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x7620 (<= ?x12160 665.0)))
 (let (($x2692 (not $x7620)))
 (let (($x9028 (<= ?x12160 1142.0)))
 (let ((?x18927 (+ ?x1382 (* (/ 3.0 40.0) (+ x4 (* 40.0 ?lambda))))))
 (let (($x6452 (<= ?x18927 610.0)))
 (let (($x4418 (<= ?x18927 (/ 743.0 2.0))))
 (let (($x14872 (not $x4418)))
 (let (($x22573 (and (not (and $x4418 (not (and $x9440 $x25773)))) (not (and $x14872 (not (and $x6452 (and (<= ?x1382 30.0) $x25773))))))))
 (let (($x17398 (and (not (<= ?x39197 22.0)) (not (and $x14872 (and $x6452 (and (<= ?x1382 30.0) (and $x2006 $x3942))))))))
 (let (($x30642 (not (and $x4331 (and (not $x17398) (not (and (not $x3942) (<= ?x39197 22.0))))))))
 (let (($x11698 (and $x9028 (and (not (and $x2692 $x30642)) (not (and $x7620 (not (and $x2006 $x22573))))))))
 (let (($x11935 (not bool.b23)))
 (let (($x28249 (and (not (and $x11935 (not $x11698))) (not (and bool.b23 (not (and $x9028 (and $x2692 $x39348))))))))
 (let (($x27500 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x10530 (not bool.b22)))
 (let (($x18585 (and $x10530 (and $x27500 (not (and bool.b7 (not (and bool.b6 $x28249))))))))
 (let (($x19524 (exists ((?lambdaprime Real) )(! (let (($x10530 (not bool.b22)))
 (let ((?x33724 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))))
 (let ((?x1382 (* 1.0 ?x33724)))
 (let (($x6368 (<= ?x1382 30.0)))
 (let (($x17754 (not $x6368)))
 (let (($x24325 (and $x17754 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x13197 (and (not $x24325) (and $x10530 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x320 (and $x17754 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x24214 (and (not $x320) (and $x10530 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x13324 (and (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4100.0))) $x17754)))
 (let (($x19043 (and (not $x13324) (and $x10530 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x2544 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x19043) (not $x24214)) (not $x13197)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x2544)))))))))))))) :qid k!27))
 ))
 (or (or $x19524 (< ?lambda 0.0)) (not $x18585))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
