; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x12098 (and (and (not bool.b8) (not bool.b10)) (and (not bool.b5) (not bool.b14)))))
 (let (($x8601 (not bool.b12)))
 (let (($x24252 (and $x8601 $x12098)))
 (let (($x811 (not $x24252)))
 (let (($x16753 (not (and (not bool.b5) bool.b23))))
 (let (($x10563 (not (<= (* 1.0 (+ x4 (* 40.0 ?lambda))) 4820.0))))
 (let (($x26377 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x2121 (and (not (and (not $x26377) (not (and (not bool.b5) $x10563)))) (not (and $x26377 (not (and $x10563 (not (and $x16753 $x811)))))))))
 (let ((?x17243 (+ x3 (* (- 3.0) ?lambda))))
 (let ((?x14985 (* 1.0 ?x17243)))
 (let (($x22130 (<= ?x14985 0.0)))
 (let (($x12237 (<= (+ (* (- 1.0) ?x17243) (* (- 3.0) (+ x5 (* 1.0 ?lambda)))) (- 30.0))))
 (let (($x23687 (<= (+ ?x14985 (* 3.0 (+ x5 (* 1.0 ?lambda)))) 30.0)))
 (let (($x19609 (and $x23687 (and (not (and bool.b5 (not $x12237))) (not (and $x12237 $x811))))))
 (let (($x2850 (and (not (and (not bool.b23) (not (and (<= ?x14985 30.0) $x24252)))) (not (and bool.b23 (not $x19609))))))
 (let ((?x3691 (+ ?x14985 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda))))))
 (let (($x4526 (<= ?x3691 1200.0)))
 (let (($x9314 (not (<= ?x3691 723.0))))
 (let (($x8563 (not $x26377)))
 (let (($x15258 (not (and $x8563 (not (and $x23687 (and $x9314 (and (not bool.b5) $x4526))))))))
 (let (($x19566 (<= ?x14985 20.0)))
 (let (($x22873 (and $x19566 (and $x15258 (not (and $x26377 (not (and $x9314 (and $x4526 $x2850)))))))))
 (let (($x9716 (and bool.b6 (and (not (and (not $x22130) (not $x22873))) (not (and $x22130 (not $x2121)))))))
 (let (($x7840 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x18927 (not bool.b22)))
 (let (($x321 (exists ((?lambdaprime Real) )(! (let (($x14024 (not (and bool.b22 (<= (* 1.0 (+ x3 (* (- 3.0) ?lambdaprime))) 20.0)))))
 (let ((?x17243 (+ x3 (* (- 3.0) ?lambdaprime))))
 (let ((?x14985 (* 1.0 ?x17243)))
 (let (($x19566 (<= ?x14985 20.0)))
 (let (($x6958 (and $x19566 (and (not bool.b22) (and bool.b7 (and (not bool.b5) bool.b6))))))
 (let (($x18927 (not bool.b22)))
 (let (($x65 (not (<= ?x14985 45.0))))
 (let (($x9359 (and $x65 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x22097 (and (not $x9359) (and $x18927 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x9857 (and $x65 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x34874 (and (not $x9857) (and $x18927 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x4565 (and (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4100.0))) $x65)))
 (let (($x8353 (and (not $x4565) (and $x18927 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x26377 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))))
 (let (($x8563 (not $x26377)))
 (let (($x3929 (and $x8563 (and (and (and (not $x8353) (not $x34874)) (not $x22097)) (not $x6958)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not (and $x3929 $x14024))))))))))))))))))) :qid k!27))
 ))
 (or (or $x321 (< ?lambda 0.0)) (not (and $x18927 (and $x7840 (not (and bool.b7 (not $x9716))))))))))))))))))))))))))))))))))
 )
(check-sat)
