; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b5 () Bool)
(declare-fun x3 () Real)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun x5 () Real)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x24656 (not bool.b5)))
 (let (($x18647 (not (and $x24656 (not (<= (* 1.0 (+ x4 (* 40.0 ?lambda))) 4820.0))))))
 (let ((?x2121 (+ x3 (* (/ 1.0 2.0) ?lambda))))
 (let ((?x16779 (* 1.0 ?x2121)))
 (let (($x16995 (<= ?x16779 0.0)))
 (let (($x7620 (and (and (not bool.b8) (not bool.b10)) (and $x24656 (not bool.b14)))))
 (let (($x21494 (not bool.b12)))
 (let (($x6782 (and $x21494 $x7620)))
 (let (($x2692 (and (<= (+ ?x16779 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 1200.0) $x6782)))
 (let (($x3097 (not (<= (+ ?x16779 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 723.0))))
 (let (($x27721 (and (<= (+ ?x16779 (* 3.0 (+ x5 (* 1.0 ?lambda)))) 50.0) (and $x3097 (and (<= ?x16779 40.0) $x2692)))))
 (let (($x15395 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x11077 (and $x15395 (and (not (and (not $x16995) (not $x27721))) (not (and $x16995 $x18647))))))
 (let (($x16326 (and (<= (+ ?x16779 (* (/ 3.0 40.0) (+ x4 (* 40.0 ?lambda)))) 610.0) (and (<= ?x16779 30.0) $x2692))))
 (let ((?x120 (+ ?x16779 (* (/ 3.0 40.0) (+ x4 (* 40.0 ?lambda))))))
 (let (($x2116 (<= ?x120 (/ 743.0 2.0))))
 (let (($x16097 (and (not (and $x2116 (not (and $x3097 $x2692)))) (not (and (not $x2116) (not $x16326))))))
 (let (($x92 (not (and $x15395 $x16097))))
 (let ((?x13544 (+ ?x16779 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda))))))
 (let ((?x3888 (+ ?x13544 (* (/ (- 13.0) 2.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x18809 (<= ?x3888 658.0)))
 (let (($x11763 (and (<= ?x3888 1135.0) (and (not (and (not $x6782) (not $x18809))) (not (and $x18809 $x92))))))
 (let (($x33792 (<= (+ ?x16779 (* (/ (- 1.0) 2.0) (+ x5 (* 1.0 ?lambda)))) 15.0)))
 (let (($x14625 (not bool.b23)))
 (let (($x7044 (and $x14625 (not (and (not (and (not $x33792) $x92)) (not (and $x33792 (not $x11763))))))))
 (let (($x13297 (not (and bool.b6 (and (not $x7044) (not (and bool.b23 (not $x11077))))))))
 (let (($x33634 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x6680 (not bool.b22)))
 (let (($x21212 (exists ((?lambdaprime Real) )(! (let (($x6680 (not bool.b22)))
 (let (($x10563 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 30.0)))))
 (let (($x18503 (and $x10563 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x14560 (and (not $x18503) (and $x6680 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x6253 (and $x10563 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x23069 (and (not $x6253) (and $x6680 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x13197 (and (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4100.0))) $x10563)))
 (let (($x39523 (and (not $x13197) (and $x6680 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x9166 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x39523) (not $x23069)) (not $x14560)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x9166))))))))))) :qid k!27))
 ))
 (or (or $x21212 (< ?lambda 0.0)) (not (and $x6680 (and $x33634 (not (and bool.b7 $x13297))))))))))))))))))))))))))))))))))))
 )
(check-sat)
