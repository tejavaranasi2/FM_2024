; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b5 () Bool)
(declare-fun x3 () Real)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun x5 () Real)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x9605 (not bool.b5)))
 (let (($x12190 (not (and $x9605 (not (<= (* 1.0 (+ x4 (* 20.0 ?lambda))) 4820.0))))))
 (let ((?x4331 (* 1.0 ?lambda)))
 (let ((?x4604 (+ x3 ?x4331)))
 (let ((?x2006 (* 1.0 ?x4604)))
 (let (($x3949 (<= ?x2006 0.0)))
 (let (($x2018 (and (and (not bool.b8) (not bool.b10)) (and $x9605 (not bool.b14)))))
 (let (($x3635 (not bool.b12)))
 (let (($x71 (and $x3635 $x2018)))
 (let (($x19668 (and (<= (+ ?x2006 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 1200.0) $x71)))
 (let (($x6275 (not (<= (+ ?x2006 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 723.0))))
 (let (($x33821 (and (<= (+ ?x2006 (* 3.0 (+ x5 ?x4331))) 50.0) (and $x6275 (and (<= ?x2006 40.0) $x19668)))))
 (let ((?x12098 (- 10.0)))
 (let ((?x13708 (+ x5 ?x4331)))
 (let ((?x26295 (- 1.0)))
 (let ((?x22588 (* ?x26295 ?x13708)))
 (let (($x24252 (<= ?x22588 ?x12098)))
 (let (($x6566 (and $x24252 (and (not (and (not $x3949) (not $x33821))) (not (and $x3949 $x12190))))))
 (let (($x3470 (and (<= (+ ?x2006 (* (/ 3.0 40.0) (+ x4 (* 20.0 ?lambda)))) 610.0) (and (<= ?x2006 30.0) $x19668))))
 (let ((?x4456 (+ ?x2006 (* (/ 3.0 40.0) (+ x4 (* 20.0 ?lambda))))))
 (let (($x19609 (<= ?x4456 (/ 743.0 2.0))))
 (let (($x39426 (and (not (and $x19609 (not (and $x6275 $x19668)))) (not (and (not $x19609) (not $x3470))))))
 (let (($x7021 (not (and $x24252 $x39426))))
 (let (($x4014 (and (not (and (not (<= (+ ?x2006 ?x22588) ?x12098)) $x7021)) (not (and (not $x71) (<= (+ ?x2006 ?x22588) ?x12098))))))
 (let (($x5081 (not $x4014)))
 (let ((?x12461 (+ ?x2006 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda))))))
 (let ((?x8795 (+ ?x12461 (* (- 4.0) ?x13708))))
 (let (($x1852 (<= ?x8795 683.0)))
 (let (($x38974 (and (not (and (not (<= (+ ?x2006 ?x22588) 10.0)) $x5081)) (not (and (not $x71) (<= (+ ?x2006 ?x22588) 10.0))))))
 (let (($x14294 (and (<= ?x8795 1160.0) (and (not (and (not $x1852) (not $x38974))) (not (and $x1852 $x5081))))))
 (let (($x16758 (and (not (<= (+ ?x12461 (* (/ (- 19.0) 2.0) ?x13708)) 628.0)) (not $x14294))))
 (let (($x16779 (not (and (<= (+ ?x12461 (* (/ (- 19.0) 2.0) ?x13708)) 628.0) $x7021))))
 (let (($x14621 (not bool.b23)))
 (let (($x31279 (and (not (and $x14621 (not (and $x16779 (not $x16758))))) (not (and bool.b23 (not $x6566))))))
 (let (($x9319 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x6680 (not bool.b22)))
 (let (($x19908 (and $x6680 (and $x9319 (not (and bool.b7 (not (and bool.b6 $x31279))))))))
 (let (($x4418 (exists ((?lambdaprime Real) )(! (let (($x6680 (not bool.b22)))
 (let (($x33724 (not (<= (* (- 1.0) (+ x3 (* 1.0 ?lambdaprime))) (- 20.0)))))
 (let (($x24264 (and $x33724 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x22566 (and (not $x24264) (and $x6680 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x15045 (and $x33724 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x12822 (and (not $x15045) (and $x6680 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x26606 (and $x33724 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4100.0))))))
 (let (($x12605 (and (not $x26606) (and $x6680 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x22529 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x12605) (not $x12822)) (not $x22566)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x22529))))))))))) :qid k!27))
 ))
 (or (or $x4418 (< ?lambda 0.0)) (not $x19908)))))))))))))))))))))))))))))))))))))))))
 )
(check-sat)
