; benchmark generated from python API
(set-info :status unknown)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b5 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun bool.b23 () Bool)
(declare-fun x4 () Real)
(declare-fun x5 () Real)
(declare-fun x3 () Real)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x19043 (and (and (not bool.b8) (not bool.b10)) (and (not bool.b5) (not bool.b14)))))
 (let (($x7884 (not bool.b12)))
 (let (($x31351 (and $x7884 $x19043)))
 (let (($x204 (not (and (not bool.b5) bool.b23))))
 (let (($x12371 (not (and $x204 (not $x31351)))))
 (let (($x31904 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x32216 (and $x31904 (and (not (<= (* 1.0 (+ x4 (* 40.0 ?lambda))) 4820.0)) $x12371))))
 (let ((?x6788 (+ x3 (* (/ (- 1.0) 5.0) ?lambda))))
 (let ((?x3090 (* 1.0 ?x6788)))
 (let (($x12333 (<= ?x3090 0.0)))
 (let (($x12098 (and (<= (+ ?x3090 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 1200.0) (and $x31904 (and (<= ?x3090 20.0) (and (not bool.b23) $x31351))))))
 (let (($x14084 (not (<= (+ ?x3090 (* (/ 3.0 20.0) (+ x4 (* 40.0 ?lambda)))) 723.0))))
 (let (($x8191 (and (not (and (not $x12333) (not (and $x14084 $x12098)))) (not (and $x12333 (not $x32216))))))
 (let (($x149 (not $x8191)))
 (let ((?x4565 (* 40.0 ?lambda)))
 (let ((?x6784 (+ x4 ?x4565)))
 (let ((?x8959 (* 1.0 ?x6784)))
 (let ((?x13862 (+ ?x8959 (* (- 40.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x18569 (<= ?x13862 4420.0)))
 (let (($x6872 (and (<= ?x13862 7600.0) (and (not (and (not $x12371) (not $x18569))) (not (and $x18569 $x149))))))
 (let (($x30037 (<= (+ ?x3090 (* (/ 1.0 5.0) (+ x5 (* 1.0 ?lambda)))) 2.0)))
 (let ((?x14612 (+ (* (- 1.0) ?x6788) (* (/ (- 1.0) 5.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x17484 (and (<= ?x14612 (- 2.0)) (and (not (and (not $x30037) $x149)) (not (and $x30037 (not $x6872)))))))
 (let (($x2883 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x22588 (not bool.b22)))
 (let (($x28049 (and $x22588 (and $x2883 (not (and bool.b7 (not (and bool.b6 $x17484))))))))
 (let (($x13541 (exists ((?lambdaprime Real) )(! (let (($x22588 (not bool.b22)))
 (let (($x15393 (not (<= (* 1.0 (+ x3 (* (/ (- 1.0) 5.0) ?lambdaprime))) 30.0))))
 (let (($x22873 (and $x15393 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x9751 (and (not $x22873) (and $x22588 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x5669 (and $x15393 (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x9183 (and (not $x5669) (and $x22588 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x31775 (and (not (<= (* (- 1.0) (+ x4 (* 40.0 ?lambdaprime))) (- 4100.0))) $x15393)))
 (let (($x11576 (and (not $x31775) (and $x22588 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x2545 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x11576) (not $x9183)) (not $x9751)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x2545))))))))))) :qid k!27))
 ))
 (or (or $x13541 (< ?lambda 0.0)) (not $x28049))))))))))))))))))))))))))))))
 )
(check-sat)
