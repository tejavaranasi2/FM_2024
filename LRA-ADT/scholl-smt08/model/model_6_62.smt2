; benchmark generated from python API
(set-info :status unknown)
(declare-fun x4 () Real)
(declare-fun bool.b5 () Bool)
(declare-fun x3 () Real)
(declare-fun bool.b14 () Bool)
(declare-fun bool.b10 () Bool)
(declare-fun bool.b8 () Bool)
(declare-fun bool.b12 () Bool)
(declare-fun x5 () Real)
(declare-fun bool.b23 () Bool)
(declare-fun bool.b6 () Bool)
(declare-fun bool.b7 () Bool)
(declare-fun bool.b22 () Bool)
(assert
 (forall ((?lambda Real) )(let (($x15535 (not bool.b5)))
 (let (($x26798 (not (and $x15535 (not (<= (* 1.0 (+ x4 (* 20.0 ?lambda))) 4820.0))))))
 (let ((?x30945 (+ x3 (* (/ 1.0 2.0) ?lambda))))
 (let ((?x13346 (* 1.0 ?x30945)))
 (let (($x18155 (<= ?x13346 0.0)))
 (let (($x7081 (and (and (not bool.b8) (not bool.b10)) (and $x15535 (not bool.b14)))))
 (let (($x22690 (not bool.b12)))
 (let (($x7609 (and $x22690 $x7081)))
 (let (($x12334 (and (<= (+ ?x13346 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 1200.0) $x7609)))
 (let (($x5280 (not (<= (+ ?x13346 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda)))) 723.0))))
 (let (($x33767 (and (<= (+ ?x13346 (* 3.0 (+ x5 (* 1.0 ?lambda)))) 50.0) (and $x5280 (and (<= ?x13346 40.0) $x12334)))))
 (let (($x8544 (<= (* (- 1.0) (+ x5 (* 1.0 ?lambda))) (- 10.0))))
 (let (($x39105 (and $x8544 (and (not (and (not $x18155) (not $x33767))) (not (and $x18155 $x26798))))))
 (let (($x23943 (and (<= (+ ?x13346 (* (/ 3.0 40.0) (+ x4 (* 20.0 ?lambda)))) 610.0) (and (<= ?x13346 30.0) $x12334))))
 (let ((?x5663 (+ ?x13346 (* (/ 3.0 40.0) (+ x4 (* 20.0 ?lambda))))))
 (let (($x10042 (<= ?x5663 (/ 743.0 2.0))))
 (let (($x12491 (and (not (and $x10042 (not (and $x5280 $x12334)))) (not (and (not $x10042) (not $x23943))))))
 (let (($x26677 (not (and $x8544 $x12491))))
 (let ((?x755 (+ ?x13346 (* (/ 3.0 20.0) (+ x4 (* 20.0 ?lambda))))))
 (let ((?x20628 (+ ?x755 (* (/ (- 7.0) 2.0) (+ x5 (* 1.0 ?lambda))))))
 (let (($x27288 (<= ?x20628 688.0)))
 (let (($x12130 (and (<= ?x20628 1165.0) (and (not (and (not $x7609) (not $x27288))) (not (and $x27288 $x26677))))))
 (let (($x7974 (<= (+ ?x13346 (* (/ (- 1.0) 2.0) (+ x5 (* 1.0 ?lambda)))) 15.0)))
 (let (($x7850 (not bool.b23)))
 (let (($x320 (and $x7850 (not (and (not (and (not $x7974) $x26677)) (not (and $x7974 (not $x12130))))))))
 (let (($x451 (not (and bool.b6 (and (not $x320) (not (and bool.b23 (not $x39105))))))))
 (let (($x10434 (not (and (not bool.b7) (not (and bool.b5 (not bool.b6)))))))
 (let (($x2549 (not bool.b22)))
 (let (($x29468 (exists ((?lambdaprime Real) )(! (let (($x2549 (not bool.b22)))
 (let (($x13456 (not (<= (* (- 1.0) (+ x3 (* (/ 1.0 2.0) ?lambdaprime))) (- 20.0)))))
 (let (($x29790 (and $x13456 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4910.0))))))
 (let (($x15605 (and (not $x29790) (and $x2549 (and (not bool.b7) (and (not bool.b5) bool.b6))))))
 (let (($x15593 (and $x13456 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4500.0))))))
 (let (($x15598 (and (not $x15593) (and $x2549 (and bool.b7 (and (not bool.b5) (not bool.b6)))))))
 (let (($x18623 (and $x13456 (not (<= (* (- 1.0) (+ x4 (* 20.0 ?lambdaprime))) (- 4100.0))))))
 (let (($x13283 (and (not $x18623) (and $x2549 (and (not bool.b7) (and (not bool.b5) (not bool.b6)))))))
 (let (($x5273 (and (not (<= (* (- 1.0) (+ x5 (* 1.0 ?lambdaprime))) (- 10.0))) (and (and (not $x13283) (not $x15598)) (not $x15605)))))
 (and (and (<= 0.0 ?lambdaprime) (<= ?lambdaprime ?lambda)) (not $x5273))))))))))) :qid k!27))
 ))
 (or (or $x29468 (< ?lambda 0.0)) (not (and $x2549 (and $x10434 (not (and bool.b7 $x451))))))))))))))))))))))))))))))))))))
 )
(check-sat)
