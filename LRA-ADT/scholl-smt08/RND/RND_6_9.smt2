; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (exists ((?y1_st RealState) (val!0 Real) )(let (($x591 (forall ((?y2 Real) )(! (forall ((?y3 Real) )(! (forall ((?y4 Real) )(! (forall ((?y5 Real) )(! (let (($x600 (< (+ (+ (* 97.0 ?y2) (* (- 67.0) (rval2 ?y1_st))) (* 88.0 x1)) 61.0)))
 (let ((?x407 (* 32.0 x1)))
 (let ((?x579 (rval2 ?y1_st)))
 (let ((?x286 (- 60.0)))
 (let ((?x601 (* ?x286 ?x579)))
 (let ((?x404 (* 11.0 ?y3)))
 (let ((?x405 (+ (+ (* 96.0 ?y5) (* 20.0 ?y4)) ?x404)))
 (let ((?x396 (- 13.0)))
 (let ((?x390 (+ (+ (* 81.0 ?y5) (* (- 35.0) ?y4)) (* (- 28.0) ?y2))))
 (let ((?x188 (- 78.0)))
 (let ((?x382 (* (- 43.0) x1)))
 (let ((?x510 (* 57.0 ?x579)))
 (let ((?x377 (* 5.0 ?y2)))
 (let ((?x378 (+ (+ (+ (* 15.0 ?y5) (* (- 82.0) ?y4)) (* (- 29.0) ?y3)) ?x377)))
 (let (($x571 (or (> (+ (+ ?x378 ?x510) ?x382) ?x188) (<= (+ ?x390 (* (- 6.0) ?x579)) ?x396))))
 (let (($x506 (exists ((?y6 Real) )(! (let ((?x228 (- 17.0)))
 (let ((?x264 (* ?x228 x1)))
 (let ((?x364 (+ (+ (* 2.0 ?y5) (* (- 5.0) ?y4)) (* 27.0 ?y3))))
 (= (+ (+ ?x364 (* 31.0 (rval2 ?y1_st))) ?x264) 0.0)))) :qid k!20))
 ))
 (let (($x568 (exists ((?y6 Real) )(! (let ((?x355 (* 30.0 x1)))
 (let ((?x573 (rval2 ?y1_st)))
 (let ((?x516 (* 85.0 ?x573)))
 (let ((?x351 (* 77.0 ?y2)))
 (let ((?x352 (+ (+ (+ (* 95.0 ?y6) (* 71.0 ?y5)) (* 69.0 ?y3)) ?x351)))
 (let ((?x104 (- 54.0)))
 (let ((?x341 (* 46.0 x1)))
 (let ((?x567 (* 28.0 ?x573)))
 (let ((?x339 (+ (+ (+ (* (- 32.0) ?y6) (* (- 11.0) ?y5)) (* 3.0 ?y3)) (* (- 11.0) ?y2))))
 (and (not (= (+ (+ ?x339 ?x567) ?x341) ?x104)) (> (+ (+ ?x352 ?x516) ?x355) 0.0))))))))))) :qid k!20))
 ))
 (let ((?x326 (- 58.0)))
 (let ((?x324 (* (- 4.0) x1)))
 (let ((?x320 (+ (+ (+ (* (- 15.0) ?y5) (* (- 19.0) ?y4)) (* 62.0 ?y3)) (* 96.0 ?y2))))
 (let ((?x301 (- 91.0)))
 (let ((?x197 (- 76.0)))
 (let ((?x298 (* ?x197 x1)))
 (let ((?x296 (+ (+ (+ (* (- 3.0) ?y5) (* (- 77.0) ?y4)) (* 85.0 ?y3)) (* 23.0 ?y2))))
 (let (($x546 (or (<= (+ (+ ?x296 ?x601) ?x298) ?x301) (<= (+ (* (- 48.0) ?x579) (* (- 100.0) x1)) 98.0))))
 (let (($x539 (or (or $x546 (not (= (+ (+ ?x320 (* (- 94.0) ?x579)) ?x324) ?x326))) $x568)))
 (or $x539 (or (or $x506 $x571) (and (<= (+ (+ ?x405 ?x601) ?x407) 36.0) $x600))))))))))))))))))))))))))))) :qid k!20))
  :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x467 (forall ((?y3 Real) )(! (let ((?x276 (- 5.0)))
 (let ((?x273 (* (- 50.0) x1)))
 (let (($x540 (>= (+ (+ (* (- 90.0) ?y3) (* (- 80.0) (rval2 ?y1_st))) ?x273) ?x276)))
 (let ((?x228 (- 17.0)))
 (let ((?x264 (* ?x228 x1)))
 (let (($x522 (< (+ (+ (* (- 52.0) ?y3) (* (- 30.0) (rval2 ?y1_st))) ?x264) 88.0)))
 (let (($x256 (forall ((?y4 Real) )(! (< (+ (+ (* 75.0 ?y4) (* (- 12.0) ?y3)) (* (- 27.0) x1)) 67.0) :qid k!20))
 ))
 (let (($x519 (exists ((?y4 Real) )(! (let ((?x242 (* (- 7.0) x1)))
 (let (($x511 (= (+ (+ (* (- 19.0) ?y4) (* (- 28.0) (rval2 ?y1_st))) ?x242) 0.0)))
 (not $x511))) :qid k!20))
 ))
 (let (($x457 (exists ((?y4 Real) )(! (let ((?x234 (- 12.0)))
 (let ((?x231 (* 100.0 x1)))
 (let ((?x225 (* (- 77.0) ?y3)))
 (let ((?x226 (+ (* (- 100.0) ?y4) ?x225)))
 (= (+ (+ ?x226 (* (- 17.0) (rval2 ?y1_st))) ?x231) ?x234))))) :qid k!20))
 ))
 (let (($x497 (exists ((?y4 Real) )(! (let ((?x216 (* (- 74.0) x1)))
 (let ((?x475 (+ (+ (+ (* 22.0 ?y4) (* 2.0 ?y3)) (* 65.0 (rval2 ?y1_st))) ?x216)))
 (let (($x207 (forall ((?y5 Real) )(! (let ((?x204 (+ (+ (+ (* (- 76.0) ?y5) (* 19.0 ?y4)) (* 63.0 ?y3)) (* (- 46.0) x1))))
 (< ?x204 (- 2.0))) :qid k!20))
 ))
 (or $x207 (< ?x475 0.0))))) :qid k!20))
 ))
 (let (($x502 (forall ((?y4 Real) )(! (forall ((?y5 Real) )(! (let ((?x188 (- 78.0)))
 (let ((?x189 (* ?x188 x1)))
 (let ((?x476 (rval2 ?y1_st)))
 (let ((?x465 (* 10.0 ?x476)))
 (let ((?x183 (+ (+ (* 29.0 ?y5) (* (- 79.0) ?y4)) (* (- 70.0) ?y3))))
 (let ((?x171 (* 54.0 x1)))
 (let ((?x488 (+ (+ (+ (* (- 94.0) ?y5) (* (- 59.0) ?y4)) (* 46.0 ?x476)) ?x171)))
 (let (($x487 (<= (+ (* 16.0 ?y4) (* 43.0 ?x476)) 0.0)))
 (let ((?x153 (* 90.0 x1)))
 (let ((?x147 (* 27.0 ?y3)))
 (let ((?x148 (+ (+ (* (- 92.0) ?y5) (* 2.0 ?y4)) ?x147)))
 (and (and (< (+ (+ ?x148 (* (- 89.0) ?x476)) ?x153) 4.0) $x487) (or (<= ?x488 57.0) (not (= (+ (+ ?x183 ?x465) ?x189) 0.0))))))))))))))) :qid k!20))
  :qid k!20))
 ))
 (and $x502 (and $x497 (or (and $x457 $x519) (or $x256 (or $x522 $x540)))))))))))))))) :qid k!20))
 ))
 (let (($x753 (exists ((?y2 Real) )(! (exists ((?y3 Real) )(! (let (($x500 (exists ((?y4 Real) )(! (let ((?x130 (* (- 61.0) x1)))
 (let ((?x123 (+ (* 58.0 ?y3) (* (- 41.0) ?y2))))
 (< (+ (+ ?x123 (* (- 46.0) (rval2 ?y1_st))) ?x130) 7.0))) :qid k!20))
 ))
 (let (($x452 (forall ((?y4 Real) )(! (let ((?x114 (* (- 63.0) x1)))
 (let ((?x109 (* (- 29.0) ?y2)))
 (let ((?x110 (+ (+ (* 84.0 ?y4) (* (- 54.0) ?y3)) ?x109)))
 (let ((?x95 (- 35.0)))
 (let ((?x96 (* ?x95 x1)))
 (let ((?x442 (+ (+ (+ (* (- 67.0) ?y4) (* 64.0 ?y3)) (* 32.0 (rval2 ?y1_st))) ?x96)))
 (or (not (= ?x442 3.0)) (> (+ (+ ?x110 (* (- 71.0) (rval2 ?y1_st))) ?x114) 0.0)))))))) :qid k!20))
 ))
 (let (($x464 (exists ((?y4 Real) )(! (exists ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x79 (- 41.0)))
 (let ((?x80 (* ?x79 x1)))
 (let ((?x573 (rval2 ?y1_st)))
 (let ((?x567 (* 28.0 ?x573)))
 (let ((?x74 (+ (+ (+ (* 26.0 ?y5) (* (- 90.0) ?y4)) (* 56.0 ?y3)) (* 76.0 ?y2))))
 (not (= (+ (+ ?x74 ?x567) ?x80) 93.0))))))) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x445 (exists ((?y4 Real) )(! (exists ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x56 (- 80.0)))
 (< (+ (+ (* 53.0 ?y6) (* (- 71.0) ?y3)) (* 77.0 (rval2 ?y1_st))) ?x56)) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x749 (exists ((?y4 Real) )(! (forall ((?y5 Real) )(! (let ((?x40 (- 94.0)))
 (let ((?x36 (- 67.0)))
 (let ((?x37 (* ?x36 x1)))
 (let ((?x490 (+ (+ (+ (* 44.0 ?y5) (* (- 19.0) ?y2)) (* 83.0 (rval2 ?y1_st))) ?x37)))
 (let ((?x25 (- 62.0)))
 (let ((?x22 (* (- 95.0) x1)))
 (let ((?x13 (+ (* (- 83.0) ?y4) (* 39.0 ?y2))))
 (or (>= (+ (+ ?x13 (* (- 93.0) (rval2 ?y1_st))) ?x22) ?x25) (= ?x490 ?x40))))))))) :qid k!20))
  :qid k!20))
 ))
 (or (and $x749 $x445) (and $x464 (and $x452 $x500)))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x758 (not (= ?y1_st (RMk1 val!0)))))
 (and $x758 (and (or $x753 $x467) $x591)))))))
 )
(check-sat)
