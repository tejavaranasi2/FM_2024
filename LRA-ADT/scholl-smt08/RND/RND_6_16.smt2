; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (let (($x1461 (exists ((?y1_st RealState) (val!24 Real) )(forall ((?y2 Real) )(let (($x1459 (forall ((?y4 Real) )(! (exists ((?y5 Real) )(! (let (($x1410 (forall ((?y6 Real) )(! (let ((?x1215 (+ (+ (+ (* (- 70.0) ?y6) (* 29.0 ?y5)) (* (- 82.0) ?y4)) (* (- 11.0) x1))))
 (let (($x1217 (not (= ?x1215 0.0))))
 (let ((?x312 (- 2.0)))
 (let ((?x1126 (* ?x312 x1)))
 (let ((?x1273 (rval2 ?y1_st)))
 (let ((?x592 (* 91.0 ?x1273)))
 (let ((?x1236 (* 76.0 ?y2)))
 (let ((?x1237 (+ (+ (* 11.0 ?y5) (* (- 32.0) ?y4)) ?x1236)))
 (let ((?x1242 (+ (+ (+ (* (- 74.0) ?y6) (* 31.0 ?y5)) (* 83.0 ?y4)) (* 66.0 ?y2))))
 (let (($x1128 (< (+ ?x1242 (* (- 59.0) x1)) (- 95.0))))
 (let ((?x28 (- 24.0)))
 (let ((?x605 (- 15.0)))
 (let ((?x343 (* ?x605 x1)))
 (let ((?x1140 (* 12.0 ?y2)))
 (let ((?x380 (+ (+ (+ (* (- 96.0) ?y6) (* 59.0 ?y5)) (* 55.0 ?y4)) ?x1140)))
 (let (($x1443 (and (and (= (+ (+ ?x380 (* (- 16.0) ?x1273)) ?x343) ?x28) $x1128) (or (>= (+ (+ ?x1237 ?x592) ?x1126) 0.0) $x1217))))
 (let ((?x503 (- 1.0)))
 (let ((?x1165 (* ?x503 x1)))
 (let (($x800 (>= (+ (+ (+ (* ?x312 ?y6) (* (- 74.0) ?y2)) (* 60.0 ?x1273)) ?x1165) 0.0)))
 (let (($x761 (= (+ (+ (* (- 73.0) ?y4) (* 51.0 ?y2)) (* 59.0 ?x1273)) 50.0)))
 (let ((?x1313 (- 54.0)))
 (let ((?x1258 (* ?x1313 x1)))
 (let ((?x645 (+ (+ (+ (* (- 46.0) ?y5) (* 11.0 ?y2)) (* 39.0 ?x1273)) ?x1258)))
 (and (and (>= ?x645 37.0) (and (not $x761) $x800)) $x1443)))))))))))))))))))))))) :qid k!20))
 ))
 (let ((?x453 (- 86.0)))
 (let ((?x479 (- 12.0)))
 (let ((?x492 (* ?x479 x1)))
 (let ((?x672 (+ (+ (+ (* 79.0 ?y5) (* 1.0 ?y4)) (* 53.0 (rval2 ?y1_st))) ?x492)))
 (let ((?x266 (- 73.0)))
 (let ((?x583 (* ?x266 x1)))
 (let ((?x795 (rval2 ?y1_st)))
 (let ((?x767 (* 77.0 ?x795)))
 (let ((?x514 (+ (+ (* 46.0 ?y5) (* (- 11.0) ?y4)) (* (- 68.0) ?y2))))
 (let ((?x53 (* 22.0 x1)))
 (let ((?x509 (+ (* (- 54.0) ?y4) (* (- 87.0) ?y2))))
 (let (($x580 (and (> (+ (+ ?x509 (* (- 32.0) ?x795)) ?x53) 51.0) (<= (+ (+ ?x514 ?x767) ?x583) 77.0))))
 (let ((?x455 (* (- 20.0) x1)))
 (let ((?x608 (+ (+ (+ (* (- 97.0) ?y5) (* (- 82.0) ?y4)) (* 38.0 ?x795)) ?x455)))
 (let ((?x56 (- 80.0)))
 (let ((?x486 (* ?x56 x1)))
 (let ((?x431 (+ (+ (+ (* (- 19.0) ?y5) (* (- 70.0) ?y2)) (* 69.0 ?x795)) ?x486)))
 (let ((?x150 (- 33.0)))
 (let (($x629 (> (+ (+ (* 47.0 ?y5) (* (- 90.0) ?y2)) (* 78.0 ?x795)) ?x150)))
 (let ((?x1035 (- 32.0)))
 (let ((?x960 (+ (* 99.0 ?y5) (* 100.0 x1))))
 (let (($x131 (>= ?x960 ?x1035)))
 (let (($x776 (or (or (and $x131 $x629) (or (= ?x431 5.0) (> ?x608 0.0))) (or $x580 (< ?x672 ?x453)))))
 (and $x776 $x1410))))))))))))))))))))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x791 (forall ((?y3 Real) )(! (forall ((?y4 Real) )(! (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x1320 (- 17.0)))
 (let ((?x251 (* 84.0 x1)))
 (let ((?x1333 (rval2 ?y1_st)))
 (let ((?x1544 (* 97.0 ?x1333)))
 (let ((?x914 (* 65.0 ?y2)))
 (let ((?x908 (+ (+ (+ (* 27.0 ?y6) (* (- 24.0) ?y5)) (* 89.0 ?y4)) (* (- 93.0) ?y3))))
 (let ((?x111 (+ ?x908 ?x914)))
 (let ((?x53 (* 22.0 x1)))
 (let ((?x780 (* 71.0 ?x1333)))
 (let ((?x104 (* 48.0 ?y2)))
 (let ((?x895 (+ (+ (* 44.0 ?y6) (* (- 41.0) ?y4)) ?x104)))
 (let (($x1543 (and (= (+ (+ ?x895 ?x780) ?x53) 0.0) (< (+ (+ ?x111 ?x1544) ?x251) ?x1320))))
 (let ((?x1110 (- 7.0)))
 (let (($x928 (<= (+ (+ (* 3.0 ?y4) (* (- 78.0) ?y3)) (* (- 48.0) x1)) ?x1110)))
 (let ((?x309 (* (- 51.0) x1)))
 (let ((?x668 (+ (+ (+ (* 70.0 ?y3) (* (- 85.0) ?y2)) (* (- 93.0) ?x1333)) ?x309)))
 (let ((?x36 (+ (+ (+ (* 75.0 ?y6) (* (- 65.0) ?y4)) (* (- 77.0) ?y2)) (* (- 76.0) x1))))
 (let (($x748 (>= ?x36 34.0)))
 (let ((?x1196 (- 8.0)))
 (let ((?x890 (* 15.0 x1)))
 (let ((?x42 (+ (+ (+ (* 36.0 ?y6) (* 67.0 ?y5)) (* 11.0 ?y4)) (* (- 84.0) ?y2))))
 (let ((?x302 (- 45.0)))
 (let ((?x300 (- 42.0)))
 (let ((?x301 (* ?x300 x1)))
 (let ((?x858 (+ (+ (+ (* (- 90.0) ?y6) (* 48.0 ?y5)) (* (- 94.0) ?y4)) (* (- 48.0) ?y3))))
 (let ((?x861 (+ ?x858 (* 96.0 ?y2))))
 (let ((?x719 (* 1.0 x1)))
 (let ((?x614 (* 70.0 ?x1333)))
 (let ((?x277 (+ (+ (+ (* 11.0 ?y6) (* 75.0 ?y5)) (* 6.0 ?y3)) (* (- 63.0) ?y2))))
 (let (($x600 (or (not (= (+ (+ ?x277 ?x614) ?x719) 57.0)) (not (= (+ (+ ?x861 (* (- 34.0) ?x1333)) ?x301) ?x302)))))
 (let (($x807 (or $x600 (and (>= (+ (+ ?x42 (* (- 21.0) ?x1333)) ?x890) ?x1196) $x748))))
 (let ((?x637 (- 92.0)))
 (let ((?x342 (* ?x637 x1)))
 (let ((?x1026 (+ (+ (* (- 32.0) ?y6) (* 16.0 ?y4)) (* (- 18.0) ?y2))))
 (let ((?x377 (- 6.0)))
 (let ((?x865 (- 83.0)))
 (let ((?x170 (* ?x865 x1)))
 (let ((?x701 (* 40.0 ?x1333)))
 (let ((?x135 (- 74.0)))
 (let ((?x964 (* ?x135 ?y3)))
 (let ((?x109 (+ (+ (+ (* 94.0 ?y6) (* (- 19.0) ?y5)) (* (- 86.0) ?y4)) ?x964)))
 (let (($x178 (or (= (+ (+ ?x109 ?x701) ?x170) ?x377) (<= (+ (+ ?x1026 (* (- 69.0) ?x1333)) ?x342) 0.0))))
 (let ((?x376 (* 79.0 ?x1333)))
 (let ((?x60 (+ (+ (+ (* 18.0 ?y5) (* (- 64.0) ?y4)) (* (- 87.0) ?y3)) (* (- 37.0) ?y2))))
 (let ((?x439 (+ (+ (+ (* 57.0 ?y6) (* (- 41.0) ?y4)) (* (- 82.0) ?y3)) (* (- 5.0) ?y2))))
 (let (($x385 (< (+ ?x439 (* (- 53.0) x1)) 40.0)))
 (let ((?x921 (* 34.0 x1)))
 (let ((?x604 (* 84.0 ?x1333)))
 (let ((?x49 (* 90.0 ?y2)))
 (let ((?x573 (+ (+ (+ (* 7.0 ?y6) (* (- 79.0) ?y5)) (* (- 100.0) ?y4)) (* (- 71.0) ?y3))))
 (let ((?x44 (+ ?x573 ?x49)))
 (let ((?x579 (* 8.0 x1)))
 (let ((?x1155 (+ (+ (+ (* 33.0 ?y6) (* 84.0 ?y5)) (* (- 36.0) ?y4)) (* (- 77.0) ?y3))))
 (let ((?x1012 (+ ?x1155 (* (- 46.0) ?y2))))
 (let (($x545 (or (= (+ (+ ?x1012 (* (- 44.0) ?x1333)) ?x579) 0.0) (> (+ (+ ?x44 ?x604) ?x921) 0.0))))
 (and (and (and $x545 (or $x385 (>= (+ ?x60 ?x376) 16.0))) $x178) (and $x807 (or (or (> ?x668 0.0) $x928) $x1543)))))))))))))))))))))))))))))))))))))))))))))))))))))))))) :qid k!20))
  :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x1100 (not (= ?y1_st (RMk1 val!24)))))
 (and $x1100 (and $x791 $x1459))))))
 )
 ))
 (let (($x1550 (forall ((?y1 Real) )(exists ((?y2_st RealState) (val!21 Real) )(exists ((?y3_st RealState) (val!22 Real) )(forall ((?y4 Real) )(exists ((?y5_st RealState) (val!23 Real) )(let ((?x795 (rval2 ?y3_st)))
 (let ((?x797 (* 21.0 ?x795)))
 (let ((?x740 (+ (+ (+ (* 66.0 (rval2 ?y5_st)) (* 4.0 ?y4)) ?x797) (* (- 35.0) (rval2 ?y2_st)))))
 (let (($x584 (< (+ (+ (* 82.0 ?y4) (* 69.0 ?x795)) (* 67.0 (rval2 ?y2_st))) 10.0)))
 (let ((?x281 (- 26.0)))
 (let ((?x270 (* ?x281 x1)))
 (let ((?x259 (+ (+ (* 66.0 (rval2 ?y5_st)) (* (- 89.0) (rval2 ?y2_st))) (* (- 49.0) ?y1))))
 (let ((?x1142 (- 46.0)))
 (let ((?x1253 (* ?x1142 x1)))
 (let ((?x708 (+ (+ (+ (* 73.0 (rval2 ?y5_st)) (* (- 15.0) ?y4)) (* 52.0 ?x795)) (* 12.0 (rval2 ?y2_st)))))
 (let (($x516 (or (= (+ (+ ?x708 (* 69.0 ?y1)) ?x1253) 72.0) (> (+ ?x259 ?x270) 47.0))))
 (let ((?x202 (- 98.0)))
 (let ((?x582 (+ (+ (+ (* 87.0 (rval2 ?y5_st)) (* (- 36.0) ?y4)) (* 55.0 ?x795)) (* (- 99.0) (rval2 ?y2_st)))))
 (let ((?x907 (- 91.0)))
 (let ((?x1207 (* ?x907 x1)))
 (let ((?x304 (* 94.0 ?y1)))
 (let ((?x1022 (+ (+ (+ (* 13.0 ?y4) (* (- 7.0) ?x795)) (* 52.0 (rval2 ?y2_st))) ?x304)))
 (let (($x1053 (or (not (= (+ ?x1022 ?x1207) 0.0)) (>= (+ ?x582 (* (- 56.0) ?y1)) ?x202))))
 (let ((?x1019 (- 63.0)))
 (let ((?x1276 (* 77.0 x1)))
 (let ((?x1169 (* 74.0 ?y1)))
 (let ((?x1224 (+ (+ (+ (* 1.0 ?y4) (* 20.0 ?x795)) (* (- 42.0) (rval2 ?y2_st))) ?x1169)))
 (let ((?x331 (- 28.0)))
 (let ((?x1135 (* 12.0 x1)))
 (let ((?x361 (+ (+ (* (- 4.0) (rval2 ?y5_st)) (* (- 22.0) ?x795)) (* (- 18.0) (rval2 ?y2_st)))))
 (let (($x1179 (and (and (and (> (+ ?x361 ?x1135) ?x331) (= (+ ?x1224 ?x1276) ?x1019)) $x1053) (or $x516 (or $x584 (not (= ?x740 77.0)))))))
 (let ((?x1149 (- 19.0)))
 (let ((?x1003 (* 49.0 x1)))
 (let (($x581 (<= (+ (+ (* (- 66.0) (rval2 ?y5_st)) (* (- 73.0) ?x795)) ?x1003) ?x1149)))
 (let ((?x1166 (* 66.0 x1)))
 (let ((?x1193 (+ (+ (* (- 80.0) (rval2 ?y5_st)) (* (- 78.0) (rval2 ?y2_st))) ?x1169)))
 (let ((?x176 (* 46.0 x1)))
 (let ((?x538 (+ (+ (+ (* 38.0 ?y4) (* 35.0 ?x795)) (* (- 80.0) (rval2 ?y2_st))) ?x176)))
 (let ((?x551 (* 68.0 ?y1)))
 (let ((?x530 (+ (+ (* (- 47.0) (rval2 ?y5_st)) (* 1.0 ?y4)) (* (- 42.0) ?x795))))
 (let (($x484 (and (>= (+ (+ (+ ?x530 (* (- 8.0) (rval2 ?y2_st))) ?x551) ?x1135) 61.0) (not (= ?x538 48.0)))))
 (let (($x758 (not (= ?y5_st (RMk1 val!23)))))
 (let (($x1441 (not (= ?y3_st (RMk1 val!22)))))
 (let (($x1186 (not (= ?y2_st (RMk1 val!21)))))
 (and $x1186 $x1441 $x758 (and (or $x484 (and (>= (+ ?x1193 ?x1166) 25.0) $x581)) $x1179))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
 ))
 (let (($x252 (forall ((?y2 Real) )(let (($x628 (or (not (= (+ (* 52.0 ?y2) (* 41.0 x1)) (- 67.0))) (> (* (- 43.0) ?y2) (- 97.0)))))
 (let (($x630 (forall ((?y3 Real) )(! (< (+ (+ (* (- 42.0) ?y3) (* 53.0 ?y2)) (* (- 42.0) x1)) 88.0) :qid k!20))
 ))
 (let (($x1233 (forall ((?y3 Real) )(! (< (+ (+ (* 11.0 ?y3) (* (- 77.0) ?y2)) (* 73.0 x1)) 0.0) :qid k!20))
 ))
 (let (($x1008 (or (>= (* (- 89.0) ?y2) (- 68.0)) (= (+ (* (- 65.0) ?y2) (* (- 56.0) x1)) (- 84.0)))))
 (let (($x1228 (exists ((?y3 Real) )(! (let (($x641 (= (+ (+ (* 32.0 ?y3) (* (- 92.0) ?y2)) (* (- 78.0) x1)) 0.0)))
 (or (> (+ (* (- 65.0) ?y3) (* 27.0 x1)) 74.0) $x641)) :qid k!20))
 ))
 (and (and $x1228 (or $x1008 (> (* 63.0 ?y2) 27.0))) (and $x1233 (and $x630 $x628)))))))))
 ))
 (let (($x1091 (forall ((?y3 Real) )(forall ((?y4 Real) )(let (($x765 (> (+ (+ (* 37.0 ?y4) (* 50.0 ?y3)) (* (- 50.0) x1)) 0.0)))
 (let ((?x266 (- 73.0)))
 (let ((?x583 (* ?x266 x1)))
 (or (>= (+ (+ (* (- 14.0) ?y4) (* (- 56.0) ?y3)) ?x583) 91.0) $x765)))))
 )
 ))
 (let (($x806 (exists ((?y4_st RealState) (val!20 Real) )(let (($x419 (and (>= (* 93.0 x1) (- 26.0)) (< (* 43.0 x1) (- 32.0)))))
 (let (($x758 (not (= ?y4_st (RMk1 val!20)))))
 (and $x758 $x419))))
 ))
 (let (($x1051 (forall ((?y4 Real) )(< (+ (* (- 79.0) ?y4) (* 96.0 x1)) 61.0))
 ))
 (let (($x1190 (forall ((?y5 Real) )(< (* 76.0 ?y5) 0.0))
 ))
 (let (($x607 (exists ((?y4_st RealState) (val!19 Real) )(let (($x758 (not (= ?y4_st (RMk1 val!19)))))
 (and $x758 (= (+ (* (- 82.0) (rval2 ?y4_st)) (* (- 56.0) x1)) 21.0))))
 ))
 (let (($x983 (or (= (* (- 52.0) x1) (- 18.0)) (not (= (* 74.0 x1) 0.0)))))
 (let (($x727 (exists ((?y1_st RealState) (val!17 Real) )(forall ((?y2 Real) )(exists ((?y3_st RealState) (val!18 Real) )(forall ((?y4 Real) )(forall ((?y5 Real) )(let ((?x503 (- 1.0)))
 (let ((?x1194 (+ (+ (* (- 58.0) ?y4) (* (- 13.0) (rval2 ?y3_st))) (* 93.0 (rval2 ?y1_st)))))
 (let ((?x719 (* 1.0 x1)))
 (let ((?x1314 (+ (+ (+ (* 84.0 ?y5) (* 79.0 ?y4)) (* 42.0 (rval2 ?y3_st))) ?x719)))
 (let (($x813 (not (= ?y3_st (RMk1 val!18)))))
 (let (($x1186 (not (= ?y1_st (RMk1 val!17)))))
 (and $x1186 $x813 (or (> ?x1314 5.0) (not (= ?x1194 ?x503)))))))))))
 )
 )
 )
 )
 ))
 (let (($x1362 (forall ((?y1 Real) )(exists ((?y2_st RealState) (val!16 Real) )(forall ((?y3 Real) )(let (($x1331 (forall ((?y5 Real) )(! (let ((?x1336 (* (- 23.0) x1)))
 (let ((?x1337 (+ (+ (* (- 53.0) ?y3) (* (- 43.0) (rval2 ?y2_st))) (* 27.0 ?y1))))
 (let (($x416 (not (= (+ (* (- 41.0) ?y5) (* (- 43.0) x1)) 20.0))))
 (and $x416 (< (+ ?x1337 ?x1336) 94.0))))) :qid k!20))
 ))
 (let ((?x297 (* 29.0 x1)))
 (let ((?x1341 (+ (+ (* (- 88.0) ?y3) (* (- 58.0) (rval2 ?y2_st))) (* 71.0 ?y1))))
 (let ((?x300 (- 42.0)))
 (let ((?x1320 (- 17.0)))
 (let ((?x1097 (* ?x1320 x1)))
 (let (($x1332 (<= (+ (+ (* (- 45.0) ?y3) (* (- 94.0) (rval2 ?y2_st))) ?x1097) ?x300)))
 (let (($x1342 (>= (+ (+ (* 98.0 (rval2 ?y2_st)) (* 92.0 ?y1)) (* (- 97.0) x1)) 0.0)))
 (let (($x1100 (not (= ?y2_st (RMk1 val!16)))))
 (and $x1100 (and (or (and $x1342 $x1332) (< (+ ?x1341 ?x297) 0.0)) $x1331))))))))))))
 )
 )
 ))
 (let (($x339 (or (and $x1362 $x727) (or (and (or (and $x983 $x607) $x1190) (or $x1051 $x806)) (and $x1091 $x252)))))
 (let (($x837 (forall ((?y1 Real) )(forall ((?y2 Real) )(let (($x388 (forall ((?y4 Real) )(! (<= (+ (+ (* (- 2.0) ?y4) (* 96.0 ?y1)) (* 98.0 x1)) 0.0) :qid k!20))
 ))
 (let (($x382 (forall ((?y4 Real) )(! (let (($x138 (<= (+ (+ (* (- 71.0) ?y4) (* 58.0 ?y2)) (* (- 6.0) x1)) 0.0)))
 (and (= (* (- 55.0) ?y4) 51.0) $x138)) :qid k!20))
 ))
 (let (($x239 (forall ((?y4 Real) )(! (let (($x323 (forall ((?y5 Real) )(! (let ((?x556 (* 6.0 x1)))
 (let ((?x276 (+ (+ (+ (* (- 77.0) ?y5) (* (- 81.0) ?y2)) (* 65.0 ?y1)) ?x556)))
 (< ?x276 22.0))) :qid k!20))
 ))
 (let (($x507 (exists ((?y5 Real) )(! (let ((?x555 (- 49.0)))
 (let ((?x1320 (- 17.0)))
 (let ((?x1097 (* ?x1320 x1)))
 (> (+ (+ (* (- 35.0) ?y5) (* (- 78.0) ?y4)) ?x1097) ?x555)))) :qid k!20))
 ))
 (or $x507 $x323))) :qid k!20))
 ))
 (let (($x346 (forall ((?y4 Real) )(! (forall ((?y5 Real) )(! (let (($x553 (forall ((?y6 Real) )(! (let ((?x309 (* (- 51.0) x1)))
 (let ((?x1115 (+ (+ (+ (* (- 91.0) ?y6) (* (- 61.0) ?y4)) (* 20.0 ?y2)) (* 58.0 ?y1))))
 (< (+ ?x1115 ?x309) 25.0))) :qid k!20))
 ))
 (and (not (= (+ (* (- 27.0) ?y2) (* (- 64.0) ?y1)) 12.0)) $x553)) :qid k!20))
  :qid k!20))
 ))
 (and $x346 (or $x239 (and $x382 (or $x388 (= (* 19.0 ?y1) 0.0))))))))))
 )
 ))
 (let (($x1348 (exists ((?y2_st RealState) (val!15 Real) )(let (($x320 (exists ((?y3 Real) )(! (exists ((?y4 Real) )(! (exists ((?y5 Real) )(! (>= (+ (+ (* (- 83.0) ?y5) (* (- 2.0) ?y4)) (* 78.0 ?y3)) 34.0) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x1298 (exists ((?y5 Real) )(! (> (+ (* (- 28.0) ?y5) (* 4.0 (rval2 ?y2_st))) 62.0) :qid k!20))
 ))
 (let (($x1286 (exists ((?y3 Real) )(! (let (($x1303 (>= (+ (+ (* 90.0 ?y3) (* 27.0 (rval2 ?y2_st))) (* (- 42.0) x1)) 0.0)))
 (let (($x340 (forall ((?y5 Real) )(! (let ((?x1313 (- 54.0)))
 (let (($x946 (= (+ (+ (* (- 94.0) ?y5) (* 30.0 ?y3)) (* 50.0 x1)) ?x1313)))
 (not $x946))) :qid k!20))
 ))
 (and $x340 $x1303))) :qid k!20))
 ))
 (let (($x1345 (forall ((?y3 Real) )(! (forall ((?y4 Real) )(! (forall ((?y5 Real) )(! (let (($x535 (= (+ (* (- 56.0) ?y5) (* 90.0 x1)) 0.0)))
 (let (($x1292 (forall ((?y6 Real) )(! (let ((?x921 (* 34.0 x1)))
 (let ((?x920 (+ (+ (* (- 53.0) ?y6) (* 77.0 ?y5)) (* 51.0 ?y4))))
 (< (+ (+ ?x920 (* (- 12.0) (rval2 ?y2_st))) ?x921) 79.0))) :qid k!20))
 ))
 (and $x1292 $x535))) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x758 (not (= ?y2_st (RMk1 val!15)))))
 (and $x758 (or $x1345 (or $x1286 (and $x1298 $x320))))))))))
 ))
 (or (and (and (and $x1348 $x837) $x339) $x1550) $x1461))))))))))))))))
(check-sat)
