; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (exists ((?y1_st RealState) (val!258 Real) )(exists ((?y2_st RealState) (val!259 Real) )(let (($x11291 (exists ((?y3 Real) )(! (exists ((?y4 Real) )(! (let ((?x9708 (* (- 6.0) x1)))
 (let ((?x6868 (rval2 ?y1_st)))
 (let ((?x6396 (* 57.0 ?x6868)))
 (let ((?x9764 (* 21.0 ?y4)))
 (let ((?x5963 (+ ?x9764 (* (- 8.0) ?y3))))
 (let ((?x436 (* (- 19.0) x1)))
 (let ((?x7186 (* 80.0 ?y4)))
 (let ((?x10651 (+ ?x7186 (* (- 95.0) ?y3))))
 (let ((?x5417 (+ (+ (+ ?x10651 (* (- 98.0) (rval2 ?y2_st))) (* (- 16.0) ?x6868)) ?x436)))
 (let (($x9153 (and (= ?x5417 11.0) (<= (+ (+ (+ ?x5963 (* (- 53.0) (rval2 ?y2_st))) ?x6396) ?x9708) 5.0))))
 (let ((?x8949 (* 10.0 x1)))
 (let ((?x3811 (* 76.0 ?x6868)))
 (let ((?x4978 (* 74.0 ?y4)))
 (let ((?x4275 (+ ?x4978 (* (- 81.0) ?y3))))
 (let (($x593 (not (= (+ (+ (+ ?x4275 (* (- 95.0) (rval2 ?y2_st))) ?x3811) ?x8949) 33.0))))
 (let ((?x10919 (- 66.0)))
 (let ((?x8732 (* 86.0 x1)))
 (let ((?x4561 (* 65.0 ?y4)))
 (let ((?x10132 (+ ?x4561 (* (- 77.0) ?y3))))
 (let ((?x8901 (+ (+ (+ ?x10132 (* (- 14.0) (rval2 ?y2_st))) (* (- 85.0) ?x6868)) ?x8732)))
 (let ((?x9341 (* 8.0 ?y4)))
 (let ((?x6701 (+ ?x9341 (* (- 71.0) ?y3))))
 (let (($x4135 (= (+ (+ ?x6701 (* (- 12.0) (rval2 ?y2_st))) (* (- 46.0) ?x6868)) ?x10919)))
 (let ((?x11246 (- 7.0)))
 (let ((?x9681 (* (- 51.0) x1)))
 (let ((?x5162 (+ (* (- 13.0) ?y4) (* (- 56.0) ?y3))))
 (let ((?x731 (+ (+ (+ ?x5162 (* (- 73.0) (rval2 ?y2_st))) (* (- 15.0) ?x6868)) ?x9681)))
 (let (($x9324 (not (= (+ (* (- 61.0) ?y4) (* (- 62.0) (rval2 ?y2_st))) 51.0))))
 (or (and (or $x9324 (<= ?x731 ?x11246)) (or (not $x4135) (not (= ?x8901 ?x10919)))) (or (and (= (* (- 25.0) ?x6868) (- 85.0)) $x593) $x9153)))))))))))))))))))))))))))))) :qid k!18))
  :qid k!18))
 ))
 (let (($x2668 (exists ((?y4 Real) )(! (let ((?x9644 (* (- 31.0) x1)))
 (let (($x1093 (< (+ (+ (* 88.0 (rval2 ?y2_st)) (* 2.0 (rval2 ?y1_st))) ?x9644) 46.0)))
 (let ((?x5822 (- 63.0)))
 (let ((?x2362 (* (- 9.0) x1)))
 (let ((?x8145 (rval2 ?y1_st)))
 (let ((?x4267 (* 89.0 ?x8145)))
 (let (($x5104 (= (+ (+ (+ (* 37.0 ?y4) (* (- 22.0) (rval2 ?y2_st))) ?x4267) ?x2362) ?x5822)))
 (let (($x9823 (and (< (+ (* (- 100.0) (rval2 ?y2_st)) (* (- 10.0) x1)) (- 35.0)) $x5104)))
 (let ((?x10188 (- 69.0)))
 (let (($x2355 (<= (+ (+ (* 50.0 ?y4) (* 94.0 (rval2 ?y2_st))) (* (- 55.0) x1)) ?x10188)))
 (let (($x3601 (or $x2355 (>= (+ (* (- 53.0) (rval2 ?y2_st)) (* 94.0 x1)) 0.0))))
 (let (($x9916 (= (+ (+ (* (- 21.0) ?y4) (* 8.0 ?x8145)) (* 53.0 x1)) 23.0)))
 (let (($x8799 (<= (+ (+ (* 32.0 ?y4) (* 35.0 ?x8145)) (* (- 84.0) x1)) 0.0)))
 (and (and (and $x8799 (not $x9916)) $x3601) (or $x9823 $x1093))))))))))))))) :qid k!18))
 ))
 (let (($x8701 (exists ((?y4 Real) )(! (let ((?x3319 (- 95.0)))
 (let ((?x4327 (- 88.0)))
 (let ((?x12996 (* ?x4327 x1)))
 (and (>= (+ (+ (* (- 82.0) ?y4) (* 39.0 (rval2 ?y1_st))) ?x12996) ?x3319) (> (* 86.0 (rval2 ?y1_st)) (- 21.0)))))) :qid k!18))
 ))
 (let ((?x3278 (- 33.0)))
 (let ((?x9954 (* (- 3.0) x1)))
 (let (($x4476 (= (+ (+ (* 61.0 (rval2 ?y2_st)) (* 31.0 (rval2 ?y1_st))) ?x9954) ?x3278)))
 (let (($x4196 (exists ((?y4 Real) )(! (let ((?x2271 (* 38.0 x1)))
 (let ((?x8145 (rval2 ?y1_st)))
 (let ((?x2658 (* 15.0 ?x8145)))
 (let (($x3745 (<= (+ (+ (+ (* 1.0 ?y4) (* (- 38.0) (rval2 ?y2_st))) ?x2658) ?x2271) 0.0)))
 (let (($x6557 (= (+ (* 75.0 ?y4) (* (- 19.0) x1)) (- 93.0))))
 (and $x6557 $x3745)))))) :qid k!18))
 ))
 (let (($x959 (and (and $x4196 (and (not $x4476) (> (* (- 91.0) (rval2 ?y1_st)) 0.0))) $x8701)))
 (let (($x2972 (forall ((?y3 Real) )(! (let ((?x867 (- 100.0)))
 (let ((?x6265 (* ?x867 x1)))
 (let ((?x1316 (+ (+ (* (- 77.0) ?y3) (* 21.0 (rval2 ?y2_st))) (* 30.0 (rval2 ?y1_st)))))
 (let ((?x11816 (- 80.0)))
 (let ((?x12028 (* (- 32.0) x1)))
 (let ((?x8145 (rval2 ?y1_st)))
 (let ((?x8669 (* 46.0 ?x8145)))
 (let ((?x3875 (+ (+ (+ (* (- 34.0) ?y3) (* (- 4.0) (rval2 ?y2_st))) ?x8669) ?x12028)))
 (let ((?x5329 (- 35.0)))
 (let ((?x4045 (* ?x5329 x1)))
 (let (($x1052 (= (+ (+ (* (- 55.0) ?y3) (* (- 40.0) (rval2 ?y2_st))) ?x4045) 0.0)))
 (let (($x9901 (or (and (not $x1052) (> (* 59.0 ?x8145) 80.0)) (or (< ?x3875 ?x11816) (< (+ ?x1316 ?x6265) 19.0)))))
 (let ((?x7665 (- 79.0)))
 (let ((?x12271 (* 27.0 x1)))
 (let ((?x8665 (+ (+ (* (- 15.0) ?y3) (* (- 37.0) (rval2 ?y2_st))) (* (- 63.0) ?x8145))))
 (let (($x2048 (or (= (+ (* 95.0 ?y3) (* (- 88.0) (rval2 ?y2_st))) (- 24.0)) (> (+ ?x8665 ?x12271) ?x7665))))
 (let ((?x6236 (- 14.0)))
 (let ((?x9424 (* ?x7665 x1)))
 (let ((?x8758 (+ (+ (+ (* 10.0 ?y3) (* 17.0 (rval2 ?y2_st))) (* (- 74.0) ?x8145)) ?x9424)))
 (let ((?x4214 (* 62.0 x1)))
 (let (($x4799 (>= (+ (+ (* (- 41.0) (rval2 ?y2_st)) (* (- 1.0) ?x8145)) ?x4214) 0.0)))
 (let (($x1938 (= (+ (+ (* 42.0 ?y3) (* (- 2.0) (rval2 ?y2_st))) (* 7.0 x1)) 36.0)))
 (let ((?x675 (* 52.0 x1)))
 (let ((?x720 (+ (+ (* (- 74.0) ?y3) (* (- 66.0) (rval2 ?y2_st))) (* (- 46.0) ?x8145))))
 (let (($x9481 (and (<= (+ (* 17.0 ?x8145) (* (- 11.0) x1)) 0.0) (< (+ ?x720 ?x675) 25.0))))
 (let ((?x436 (* (- 19.0) x1)))
 (let ((?x1296 (+ (+ (+ (* (- 44.0) ?y3) (* 81.0 (rval2 ?y2_st))) (* 29.0 ?x8145)) ?x436)))
 (let (($x8985 (and (= (+ (* (- 4.0) ?x8145) (* 9.0 x1)) (- 30.0)) (<= ?x1296 84.0))))
 (let (($x9565 (forall ((?y4 Real) )(! (let ((?x9168 (+ (+ (* (- 39.0) ?y4) (* (- 29.0) ?y3)) (* (- 70.0) x1))))
 (let (($x2973 (<= ?x9168 32.0)))
 (let ((?x2843 (* (- 48.0) x1)))
 (let ((?x1047 (+ (* (- 54.0) ?y4) (* (- 14.0) ?y3))))
 (let ((?x3843 (+ (+ (+ ?x1047 (* 46.0 (rval2 ?y2_st))) (* (- 77.0) (rval2 ?y1_st))) ?x2843)))
 (and (>= ?x3843 64.0) $x2973)))))) :qid k!18))
 ))
 (and (or (and $x9565 $x8985) (or $x9481 (not $x1938))) (or (and (or $x4799 (>= ?x8758 ?x6236)) $x2048) $x9901))))))))))))))))))))))))))))))) :qid k!18))
 ))
 (let (($x3470 (not (= ?y2_st (RMk1 val!259)))))
 (let (($x10155 (not (= ?y1_st (RMk1 val!258)))))
 (and $x10155 $x3470 (and (or $x2972 (and $x959 $x2668)) $x11291))))))))))))))
 )
 )
(check-sat)
