; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (let (($x10921 (forall ((?y1 Real) )(let (($x6497 (forall ((?y2 Real) )(! (let (($x7833 (or (> (+ (* 23.0 ?y2) (* (- 65.0) ?y1)) 0.0) (<= (+ (* (- 71.0) ?y2) (* 15.0 x1)) 38.0))))
 (let ((?x6282 (+ (+ (* (- 87.0) ?y2) (* (- 40.0) ?y1)) (* (- 10.0) x1))))
 (let (($x7595 (and (<= ?x6282 92.0) (<= (+ (* (- 90.0) ?y1) (* (- 18.0) x1)) (- 79.0)))))
 (let (($x2772 (exists ((?y3 Real) )(! (let (($x6239 (>= (+ (+ (* (- 69.0) ?y3) (* (- 27.0) ?y2)) (* 71.0 x1)) 4.0)))
 (let (($x6369 (= (+ (+ (* 51.0 ?y3) (* 48.0 ?y1)) (* (- 85.0) x1)) 3.0)))
 (and (not $x6369) $x6239))) :qid k!17))
 ))
 (or $x2772 (or $x7595 $x7833)))))) :qid k!17))
 ))
 (let (($x7505 (exists ((?y3 Real) )(! (let (($x358 (<= (+ (+ (* (- 25.0) ?y3) (* (- 11.0) ?y1)) (* 85.0 x1)) (- 21.0))))
 (and $x358 (>= (+ (* (- 87.0) ?y3) (* 37.0 ?y1)) 79.0))) :qid k!17))
 ))
 (let (($x2689 (exists ((?y3 Real) )(! (>= (+ (+ (* (- 92.0) ?y3) (* 5.0 ?y1)) (* 61.0 x1)) 97.0) :qid k!17))
 ))
 (let (($x10802 (exists ((?y3 Real) )(! (<= (+ (* (- 68.0) ?y3) (* 27.0 x1)) (- 78.0)) :qid k!17))
 ))
 (and (and (and $x10802 $x2689) $x7505) $x6497))))))
 ))
 (let (($x8489 (exists ((?y1_st RealState) (val!195 Real) )(forall ((?y3 Real) )(let (($x9996 (>= (+ (+ (* (- 5.0) ?y3) (* 11.0 (rval2 ?y1_st))) (* 23.0 x1)) 40.0)))
 (let (($x3778 (<= (+ (* 79.0 ?y3) (* 14.0 x1)) 0.0)))
 (let (($x13228 (not (= (+ (* (- 41.0) ?y3) (* (- 61.0) x1)) 53.0))))
 (let (($x11268 (or (= (+ (* (- 79.0) ?y3) (* (- 17.0) (rval2 ?y1_st))) (- 33.0)) $x13228)))
 (let (($x10998 (not (= ?y1_st (RMk1 val!195)))))
 (and $x10998 (or $x11268 (or $x3778 $x9996)))))))))
 )
 ))
 (let (($x661 (exists ((?y1_st RealState) (val!194 Real) )(forall ((?y2 Real) )(let (($x10855 (forall ((?y3 Real) )(! (let (($x9168 (= (+ (+ (* 75.0 ?y3) (* (- 62.0) ?y2)) (* 24.0 (rval2 ?y1_st))) 33.0)))
 (not $x9168)) :qid k!17))
 ))
 (let (($x1796 (forall ((?y3 Real) )(! (let ((?x10793 (* 4.0 x1)))
 (let ((?x6640 (+ (* (- 31.0) ?y3) (* 67.0 ?y2))))
 (< (+ (+ ?x6640 (* (- 2.0) (rval2 ?y1_st))) ?x10793) 82.0))) :qid k!17))
 ))
 (let (($x3779 (forall ((?y3 Real) )(! (let ((?x10150 (- 54.0)))
 (let (($x11941 (= (+ (+ (* 32.0 ?y3) (* (- 25.0) ?y2)) (* 23.0 (rval2 ?y1_st))) ?x10150)))
 (not $x11941))) :qid k!17))
 ))
 (let ((?x10188 (* 33.0 x1)))
 (let (($x13137 (= (+ (+ (* (- 70.0) ?y2) (* (- 98.0) (rval2 ?y1_st))) ?x10188) 0.0)))
 (let (($x4373 (or (<= (+ (* (- 23.0) ?y2) (* (- 20.0) (rval2 ?y1_st))) (- 91.0)) $x13137)))
 (let (($x10998 (not (= ?y1_st (RMk1 val!194)))))
 (and $x10998 (or (and $x4373 $x3779) (and $x1796 $x10855)))))))))))
 )
 ))
 (let (($x7086 (forall ((?y1 Real) )(exists ((?y3_st RealState) (val!193 Real) )(let (($x3263 (and (not (= (* (- 86.0) ?y1) (- 90.0))) (= (* (- 47.0) (rval2 ?y3_st)) 0.0))))
 (let (($x11628 (not (= ?y3_st (RMk1 val!193)))))
 (and $x11628 $x3263))))
 )
 ))
 (let (($x6804 (exists ((?y1_st RealState) (val!192 Real) )(let (($x3165 (exists ((?y2 Real) )(! (exists ((?y3 Real) )(! (let ((?x11201 (- 92.0)))
 (let (($x9534 (>= (+ (+ (* 20.0 ?y3) (* (- 42.0) ?y2)) (* 62.0 x1)) ?x11201)))
 (let ((?x5731 (- 4.0)))
 (let ((?x10883 (* (- 22.0) x1)))
 (let (($x1828 (or (= (+ (+ (* (- 65.0) ?y3) (* 65.0 (rval2 ?y1_st))) ?x10883) ?x5731) $x9534)))
 (let ((?x6917 (- 2.0)))
 (let ((?x3212 (* (- 35.0) x1)))
 (let ((?x4755 (+ (+ (+ (* 50.0 ?y3) (* 72.0 ?y2)) (* (- 6.0) (rval2 ?y1_st))) ?x3212)))
 (let (($x2497 (and (<= ?x4755 ?x5731) (< (+ (+ (* (- 73.0) ?y2) (* 88.0 (rval2 ?y1_st))) ?x10883) ?x6917))))
 (or $x2497 $x1828)))))))))) :qid k!17))
  :qid k!17))
 ))
 (let (($x6249 (and (not (= (+ (* 63.0 (rval2 ?y1_st)) (* (- 98.0) x1)) 69.0)) (> (+ (* 15.0 (rval2 ?y1_st)) (* (- 74.0) x1)) 0.0))))
 (let (($x8562 (exists ((?y2 Real) )(! (let (($x8288 (exists ((?y3 Real) )(! (let ((?x3382 (- 50.0)))
 (let ((?x9246 (* 32.0 x1)))
 (let ((?x5372 (+ (* (- 86.0) ?y3) (* 50.0 ?y2))))
 (< (+ (+ ?x5372 (* (- 80.0) (rval2 ?y1_st))) ?x9246) ?x3382)))) :qid k!17))
 ))
 (let ((?x13059 (- 80.0)))
 (let ((?x4827 (* (- 60.0) x1)))
 (let (($x6117 (>= (+ (+ (* (- 23.0) ?y2) (* (- 57.0) (rval2 ?y1_st))) ?x4827) ?x13059)))
 (let (($x7031 (and (>= (+ (* 14.0 ?y2) (* (- 86.0) (rval2 ?y1_st))) 19.0) $x6117)))
 (and $x7031 $x8288)))))) :qid k!17))
 ))
 (let (($x11628 (not (= ?y1_st (RMk1 val!192)))))
 (and $x11628 (and (or $x8562 $x6249) $x3165)))))))
 ))
 (and (and $x6804 $x7086) (or (or $x661 $x8489) $x10921))))))))
(check-sat)
