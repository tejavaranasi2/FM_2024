; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (let (($x4391 (forall ((?y1 Real) )(let (($x5470 (forall ((?y2 Real) )(! (let ((?x4782 (- 71.0)))
 (let (($x7070 (< (+ (+ (* 15.0 ?y2) (* (- 60.0) ?y1)) (* (- 55.0) x1)) ?x4782)))
 (let (($x2415 (and (and (<= (* (- 94.0) ?y2) 38.0) (> (* 6.0 ?y1) 0.0)) $x7070)))
 (let (($x10862 (forall ((?y3 Real) )(! (let ((?x7665 (- 79.0)))
 (> (+ (+ (* (- 90.0) ?y2) (* (- 18.0) ?y1)) (* 19.0 x1)) ?x7665)) :qid k!20))
 ))
 (let (($x10813 (exists ((?y3 Real) )(! (let ((?x100 (- 87.0)))
 (> (+ (+ (* (- 10.0) ?y3) (* (- 100.0) ?y1)) (* 88.0 x1)) ?x100)) :qid k!20))
 ))
 (let (($x5766 (and (<= (* 78.0 ?y2) 92.0) (= (+ (* 89.0 ?y2) (* 50.0 ?y1)) (- 40.0)))))
 (let (($x10793 (or (and (and $x5766 $x10813) $x10862) (or (> (+ (* 23.0 ?y2) (* (- 65.0) ?y1)) 0.0) $x2415))))
 (let (($x3083 (exists ((?y3 Real) )(! (let (($x6703 (forall ((?y4 Real) )(! (let ((?x761 (+ (+ (+ (* (- 69.0) ?y4) (* (- 27.0) ?y3)) (* 71.0 ?y1)) (* 92.0 x1))))
 (< ?x761 4.0)) :qid k!20))
 ))
 (let (($x11223 (forall ((?y4 Real) )(! (let ((?x820 (+ (+ (+ (* 48.0 ?y4) (* 56.0 ?y2)) (* 43.0 ?y1)) (* (- 1.0) x1))))
 (not (= ?x820 51.0))) :qid k!20))
 ))
 (let (($x6814 (forall ((?y4 Real) )(! (let ((?x12118 (+ (+ (* (- 85.0) ?y3) (* (- 42.0) ?y2)) (* (- 20.0) ?y1))))
 (not (= ?x12118 3.0))) :qid k!20))
 ))
 (and (or $x6814 $x11223) $x6703)))) :qid k!20))
 ))
 (or $x3083 $x10793))))))))) :qid k!20))
 ))
 (let (($x2550 (exists ((?y3 Real) )(! (exists ((?y4 Real) )(! (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x5345 (* 85.0 x1)))
 (let ((?x8780 (* 37.0 ?y1)))
 (let ((?x5830 (+ (+ (+ (* 79.0 ?y6) (* (- 25.0) ?y5)) (* (- 87.0) ?y4)) (* (- 11.0) ?y3))))
 (<= (+ (+ ?x5830 ?x8780) ?x5345) (- 21.0))))) :qid k!20))
  :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x9099 (exists ((?y3 Real) )(! (forall ((?y5 Real) )(! (let ((?x12467 (+ (+ (+ (* (- 92.0) ?y5) (* 5.0 ?y3)) (* 61.0 ?y1)) (* (- 70.0) x1))))
 (< ?x12467 97.0)) :qid k!20))
  :qid k!20))
 ))
 (let (($x3319 (exists ((?y3 Real) )(! (let ((?x6970 (- 68.0)))
 (let (($x5320 (< (+ (+ (* 27.0 ?y3) (* (- 80.0) ?y1)) (* (- 16.0) x1)) ?x6970)))
 (let (($x11497 (or (<= (* 3.0 x1) (- 78.0)) (<= (+ (* (- 98.0) ?y3) (* 6.0 ?y1)) 0.0))))
 (and $x11497 $x5320)))) :qid k!20))
 ))
 (and (and (and $x3319 $x9099) $x2550) $x5470))))))
 ))
 (let (($x7766 (exists ((?y1_st RealState) (val!217 Real) )(forall ((?y3 Real) )(forall ((?y4 Real) )(forall ((?y5 Real) )(forall ((?y6 Real) )(let ((?x1229 (* 14.0 x1)))
 (let ((?x3003 (rval2 ?y1_st)))
 (let ((?x2390 (* 11.0 ?x3003)))
 (let ((?x12629 (+ (+ (* 40.0 ?y6) (* 79.0 ?y5)) (* (- 5.0) ?y4))))
 (let ((?x6283 (- 33.0)))
 (let ((?x8255 (+ (+ (+ (* 53.0 ?y6) (* (- 79.0) ?y5)) (* (- 41.0) ?y4)) (* (- 17.0) ?y3))))
 (let (($x5788 (= ?x8255 ?x6283)))
 (let (($x406 (not (= ?y1_st (RMk1 val!217)))))
 (and $x406 (and $x5788 (<= (+ (+ ?x12629 ?x2390) ?x1229) 0.0))))))))))))
 )
 )
 )
 )
 ))
 (let (($x4408 (exists ((?y1_st RealState) (val!216 Real) )(forall ((?y2 Real) )(let (($x9151 (forall ((?y3 Real) )(! (let (($x10938 (= (+ (+ (* 75.0 ?y3) (* (- 62.0) ?y2)) (* 24.0 (rval2 ?y1_st))) 33.0)))
 (not $x10938)) :qid k!20))
 ))
 (let (($x10707 (forall ((?y3 Real) )(! (let ((?x11044 (- 2.0)))
 (let (($x10376 (>= (+ (+ (* 65.0 ?y3) (* (- 30.0) ?y2)) (* (- 98.0) x1)) ?x11044)))
 (let ((?x10114 (* 59.0 x1)))
 (let ((?x248 (+ (+ (+ (* 67.0 ?y3) (* 4.0 ?y2)) (* (- 25.0) (rval2 ?y1_st))) ?x10114)))
 (or (>= ?x248 82.0) (and (<= (* (- 33.0) (rval2 ?y1_st)) (- 31.0)) $x10376)))))) :qid k!20))
 ))
 (let (($x12572 (forall ((?y3 Real) )(! (let ((?x6332 (* (- 67.0) x1)))
 (let ((?x6760 (* 23.0 ?y3)))
 (let ((?x2908 (+ ?x6760 (* (- 82.0) ?y2))))
 (let ((?x1900 (- 25.0)))
 (let ((?x240 (- 100.0)))
 (let ((?x11315 (* ?x240 x1)))
 (let ((?x13210 (- 30.0)))
 (let ((?x2470 (* ?x13210 ?y2)))
 (let ((?x10969 (+ (* (- 18.0) ?y3) ?x2470)))
 (let ((?x7090 (- 54.0)))
 (let (($x9371 (= (+ (+ (* 77.0 ?y2) (* 98.0 (rval2 ?y1_st))) (* (- 82.0) x1)) ?x7090)))
 (or (and (not $x9371) (= (+ (+ ?x10969 (* 82.0 (rval2 ?y1_st))) ?x11315) ?x1900)) (> (+ (+ ?x2908 (* (- 24.0) (rval2 ?y1_st))) ?x6332) 32.0))))))))))))) :qid k!20))
 ))
 (let (($x5692 (exists ((?y4 Real) )(! (let ((?x10567 (- 98.0)))
 (let ((?x2519 (* ?x10567 ?y2)))
 (let ((?x5266 (+ (* (- 70.0) ?y4) ?x2519)))
 (not (= (+ ?x5266 (* 33.0 (rval2 ?y1_st))) 0.0))))) :qid k!20))
 ))
 (let ((?x7665 (- 79.0)))
 (let ((?x11192 (* ?x7665 x1)))
 (let (($x10875 (= (+ (+ (* (- 33.0) ?y2) (* (- 68.0) (rval2 ?y1_st))) ?x11192) 0.0)))
 (let (($x6148 (or (>= (+ (* (- 75.0) (rval2 ?y1_st)) (* (- 53.0) x1)) (- 23.0)) $x10875)))
 (let (($x551 (forall ((?y3 Real) )(! (let ((?x12135 (- 91.0)))
 (let ((?x3202 (* 93.0 x1)))
 (let ((?x8190 (+ (* (- 20.0) ?y3) (* 38.0 ?y2))))
 (<= (+ (+ ?x8190 (* (- 61.0) (rval2 ?y1_st))) ?x3202) ?x12135)))) :qid k!20))
 ))
 (let (($x6351 (not (= ?y1_st (RMk1 val!216)))))
 (and $x6351 (or (and (or (and $x551 $x6148) $x5692) $x12572) (and $x10707 $x9151))))))))))))))
 )
 ))
 (let (($x10392 (forall ((?y1 Real) )(exists ((?y3_st RealState) (val!215 Real) )(forall ((?y4 Real) )(let (($x13134 (exists ((?y5 Real) )(! (exists ((?y6 Real) )(! (not (= (+ (* (- 47.0) ?y4) (* (- 86.0) (rval2 ?y3_st))) (- 90.0))) :qid k!20))
  :qid k!20))
 ))
 (let (($x6791 (= (+ (+ (* 76.0 ?y4) (* (- 40.0) ?y1)) (* 79.0 x1)) 8.0)))
 (let ((?x11044 (- 2.0)))
 (let ((?x1184 (* ?x11044 x1)))
 (let ((?x2228 (+ (+ (* (- 66.0) ?y4) (* 75.0 (rval2 ?y3_st))) (* (- 71.0) ?y1))))
 (let ((?x11433 (* (- 38.0) x1)))
 (let ((?x2334 (+ (+ (+ (* 40.0 ?y4) (* 95.0 (rval2 ?y3_st))) (* 61.0 ?y1)) ?x11433)))
 (let (($x1076 (= (* (- 91.0) x1) 0.0)))
 (let (($x10561 (and (or $x1076 (>= ?x2334 88.0)) (and (not (= (+ ?x2228 ?x1184) 30.0)) $x6791))))
 (let (($x6351 (not (= ?y3_st (RMk1 val!215)))))
 (and $x6351 (and $x10561 $x13134)))))))))))))
 )
 )
 ))
 (let (($x10267 (exists ((?y1_st RealState) (val!214 Real) )(let (($x465 (exists ((?y2 Real) )(! (exists ((?y3 Real) )(! (forall ((?y4 Real) )(! (let ((?x8197 (- 92.0)))
 (let ((?x1438 (* (- 76.0) x1)))
 (let ((?x8095 (+ (+ (+ (* 20.0 ?y4) (* (- 42.0) ?y3)) (* 62.0 (rval2 ?y1_st))) ?x1438)))
 (let (($x4173 (exists ((?y5 Real) )(! (let ((?x6098 (- 4.0)))
 (let ((?x10772 (+ (+ (+ (* (- 65.0) ?y5) (* 65.0 ?y3)) (* (- 22.0) ?y2)) (* (- 69.0) x1))))
 (= ?x10772 ?x6098))) :qid k!20))
 ))
 (let (($x12648 (forall ((?y5 Real) )(! (let ((?x6098 (- 4.0)))
 (let ((?x1218 (* (- 6.0) x1)))
 (let ((?x370 (+ (+ (* (- 2.0) ?y5) (* 50.0 ?y4)) (* 72.0 ?y2))))
 (> (+ (+ ?x370 (* (- 73.0) (rval2 ?y1_st))) ?x1218) ?x6098)))) :qid k!20))
 ))
 (and $x12648 (or $x4173 (< ?x8095 ?x8197)))))))) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x11939 (not (= (+ (* (- 97.0) (rval2 ?y1_st)) (* (- 24.0) x1)) 15.0))))
 (let (($x10694 (and (> (+ (* (- 30.0) (rval2 ?y1_st)) (* 79.0 x1)) 0.0) (>= (+ (* 8.0 (rval2 ?y1_st)) (* 93.0 x1)) (- 74.0)))))
 (let (($x4131 (forall ((?y5 Real) )(! (let ((?x11319 (- 94.0)))
 (let ((?x10770 (* ?x11319 x1)))
 (= (+ (+ (* 63.0 ?y5) (* (- 98.0) (rval2 ?y1_st))) ?x10770) 69.0))) :qid k!20))
 ))
 (let (($x7232 (exists ((?y2 Real) )(! (let (($x8623 (exists ((?y3 Real) )(! (let (($x12132 (exists ((?y4 Real) )(! (let ((?x12435 (- 86.0)))
 (< (+ (+ (* (- 80.0) ?y4) (* 5.0 (rval2 ?y1_st))) (* 28.0 x1)) ?x12435)) :qid k!20))
 ))
 (let (($x10553 (forall ((?y4 Real) )(! (let ((?x963 (- 50.0)))
 (let ((?x2661 (* (- 64.0) x1)))
 (let ((?x8173 (rval2 ?y1_st)))
 (let ((?x7504 (* 20.0 ?x8173)))
 (let ((?x6927 (* 46.0 ?y2)))
 (let ((?x13059 (+ (+ (* 50.0 ?y4) (* 32.0 ?y3)) ?x6927)))
 (< (+ (+ ?x13059 ?x7504) ?x2661) ?x963))))))) :qid k!20))
 ))
 (and $x10553 $x12132))) :qid k!20))
 ))
 (let (($x9940 (forall ((?y3 Real) )(! (forall ((?y4 Real) )(! (let ((?x11816 (- 80.0)))
 (let ((?x1432 (* 53.0 x1)))
 (let ((?x8173 (rval2 ?y1_st)))
 (let ((?x7504 (* 20.0 ?x8173)))
 (let ((?x413 (+ (+ (* (- 23.0) ?y4) (* (- 57.0) ?y3)) (* (- 60.0) ?y2))))
 (>= (+ (+ ?x413 ?x7504) ?x1432) ?x11816)))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x2474 (exists ((?y3 Real) )(! (let (($x2465 (= (+ (+ (* 10.0 ?y2) (* 14.0 (rval2 ?y1_st))) (* 25.0 x1)) 14.0)))
 (let ((?x9461 (- 82.0)))
 (let ((?x5911 (* ?x9461 x1)))
 (let ((?x8896 (+ (* (- 86.0) ?y3) (* (- 87.0) ?y2))))
 (and (>= (+ (+ ?x8896 (* (- 20.0) (rval2 ?y1_st))) ?x5911) 19.0) $x2465))))) :qid k!20))
 ))
 (and (and $x2474 $x9940) $x8623)))) :qid k!20))
 ))
 (let (($x10703 (not (= ?y1_st (RMk1 val!214)))))
 (and $x10703 (and (or $x7232 (and $x4131 (or $x10694 $x11939))) $x465)))))))))
 ))
 (and (and $x10267 $x10392) (or (or $x4408 $x7766) $x4391))))))))
(check-sat)
