; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (let (($x8057 (exists ((?y2_st RealState) (val!323 Real) )(let (($x10623 (forall ((?y3 Real) )(! (forall ((?y5 Real) )(! (let ((?x3983 (- 53.0)))
 (let ((?x4869 (* 42.0 x1)))
 (let ((?x3543 (+ (* (- 16.0) ?y5) (* (- 48.0) ?y3))))
 (or (>= (+ (+ ?x3543 (* 67.0 (rval2 ?y2_st))) ?x4869) ?x3983) (<= (+ (* 81.0 (rval2 ?y2_st)) (* 21.0 x1)) (- 4.0)))))) :qid k!19))
  :qid k!19))
 ))
 (let (($x5179 (forall ((?y3 Real) )(! (exists ((?y4 Real) )(! (exists ((?y5 Real) )(! (forall ((?y6 Real) )(! (let ((?x3733 (+ (+ (+ (* (- 35.0) ?y5) (* 40.0 ?y4)) (* 88.0 ?y3)) (* (- 45.0) x1))))
 (< ?x3733 28.0)) :qid k!19))
  :qid k!19))
  :qid k!19))
  :qid k!19))
 ))
 (let (($x6180 (exists ((?y3 Real) )(! (let (($x3399 (forall ((?y4 Real) )(! (> (+ (+ (* 86.0 ?y4) (* 90.0 (rval2 ?y2_st))) (* (- 52.0) x1)) 89.0) :qid k!19))
 ))
 (let (($x2167 (exists ((?y4 Real) )(! (let ((?x7063 (- 8.0)))
 (let ((?x9863 (* 92.0 x1)))
 (let ((?x4363 (* ?x7063 ?y4)))
 (let ((?x2753 (+ ?x4363 (* (- 68.0) ?y3))))
 (< (+ (+ ?x2753 (* (- 60.0) (rval2 ?y2_st))) ?x9863) ?x7063))))) :qid k!19))
 ))
 (let (($x7658 (forall ((?y5 Real) )(! (not (= (* 71.0 ?y5) 69.0)) :qid k!19))
 ))
 (or $x7658 (and $x2167 $x3399))))) :qid k!19))
 ))
 (let (($x10259 (exists ((?y3 Real) )(! (forall ((?y4 Real) )(! (> (+ (* (- 49.0) ?y3) (* (- 26.0) (rval2 ?y2_st))) 0.0) :qid k!19))
  :qid k!19))
 ))
 (let (($x1480 (not (= (+ (* (- 8.0) (rval2 ?y2_st)) (* 97.0 x1)) (- 90.0)))))
 (let (($x8217 (and (= (+ (* 3.0 (rval2 ?y2_st)) (* (- 59.0) x1)) 0.0) $x1480)))
 (let (($x1109 (>= (* (- 8.0) x1) 0.0)))
 (let (($x6875 (or $x1109 (< (+ (* (- 38.0) (rval2 ?y2_st)) (* 74.0 x1)) 46.0))))
 (let (($x7568 (or (> (+ (* 66.0 (rval2 ?y2_st)) (* (- 75.0) x1)) 0.0) $x6875)))
 (let (($x8272 (not (= ?y2_st (RMk1 val!323)))))
 (and $x8272 (or (or (or (and $x7568 $x8217) $x10259) $x6180) (and $x5179 $x10623))))))))))))))
 ))
 (let (($x10103 (exists ((?y2_st RealState) (val!321 Real) )(forall ((?y3 Real) )(exists ((?y4_st RealState) (val!322 Real) )(forall ((?y5 Real) )(let (($x10860 (exists ((?y6 Real) )(! (let ((?x5245 (* (- 76.0) x1)))
 (let ((?x6080 (+ (+ (* 63.0 ?y5) (* (- 20.0) (rval2 ?y4_st))) (* 2.0 (rval2 ?y2_st)))))
 (= (+ ?x6080 ?x5245) 81.0))) :qid k!19))
 ))
 (let ((?x10086 (- 23.0)))
 (let ((?x7692 (rval2 ?y2_st)))
 (let ((?x126 (* 14.0 ?x7692)))
 (let ((?x778 (+ (+ (+ (* 44.0 ?y5) (* 66.0 (rval2 ?y4_st))) (* (- 56.0) ?y3)) ?x126)))
 (let ((?x5450 (- 21.0)))
 (let ((?x9391 (* (- 13.0) x1)))
 (let ((?x7401 (+ (+ (+ (* (- 54.0) ?y5) (* 32.0 (rval2 ?y4_st))) (* 40.0 ?y3)) (* 25.0 ?x7692))))
 (let ((?x8351 (+ (+ (+ (* 67.0 ?y5) (* 6.0 (rval2 ?y4_st))) (* (- 26.0) ?y3)) (* (- 58.0) ?x7692))))
 (let ((?x10432 (- 31.0)))
 (let ((?x6244 (- 96.0)))
 (let ((?x10394 (* ?x6244 x1)))
 (let ((?x9668 (+ (+ (* ?x6244 ?y5) (* (- 55.0) (rval2 ?y4_st))) (* (- 70.0) ?y3))))
 (let (($x5867 (and (= (+ (+ ?x9668 (* (- 95.0) ?x7692)) ?x10394) ?x10432) (>= ?x8351 31.0))))
 (let (($x9005 (not (= ?y4_st (RMk1 val!322)))))
 (let (($x10774 (not (= ?y2_st (RMk1 val!321)))))
 (and $x10774 $x9005 (and $x5867 (and (and (= (+ ?x7401 ?x9391) ?x5450) (>= ?x778 ?x10086)) $x10860))))))))))))))))))))
 )
 )
 )
 ))
 (let (($x3773 (forall ((?y3 Real) )(forall ((?y5 Real) )(let (($x6457 (forall ((?y6 Real) )(! (let (($x6203 (>= (+ (+ (* 73.0 ?y6) (* (- 9.0) ?y3)) (* (- 39.0) x1)) 88.0)))
 (let (($x7428 (> (+ (+ (* (- 35.0) ?y6) (* (- 35.0) ?y5)) (* 93.0 x1)) 14.0)))
 (or (and $x7428 (> (+ (* 99.0 ?y5) (* (- 1.0) ?y3)) 83.0)) (or $x6203 (>= (+ (* (- 80.0) ?y5) (* (- 30.0) x1)) 0.0))))) :qid k!19))
 ))
 (let (($x379 (exists ((?y6 Real) )(! (let ((?x4724 (+ (+ (* (- 63.0) ?y6) (* (- 2.0) ?y5)) (* (- 5.0) ?y3))))
 (let ((?x9950 (+ (+ (+ (* 49.0 ?y6) (* 87.0 ?y5)) (* 68.0 ?y3)) (* (- 64.0) x1))))
 (and (>= ?x9950 94.0) (< ?x4724 (- 14.0))))) :qid k!19))
 ))
 (and $x379 $x6457))))
 )
 ))
 (and $x3773 (and $x10103 $x8057))))))
(check-sat)
