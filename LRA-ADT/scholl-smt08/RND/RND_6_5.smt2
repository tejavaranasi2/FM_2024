; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (exists ((?y1_st RealState) (val!45 Real) )(exists ((?y2_st RealState) (val!46 Real) )(let (($x1956 (exists ((?y3 Real) )(! (exists ((?y4 Real) )(! (let ((?x378 (* (- 6.0) x1)))
 (let ((?x1273 (rval2 ?y1_st)))
 (let ((?x1982 (* 57.0 ?x1273)))
 (let ((?x1999 (* 21.0 ?y4)))
 (let ((?x10118 (+ ?x1999 (* (- 8.0) ?y3))))
 (let ((?x2043 (* (- 19.0) x1)))
 (let ((?x3776 (* 80.0 ?y4)))
 (let ((?x9239 (+ ?x3776 (* (- 95.0) ?y3))))
 (let ((?x1973 (+ (+ (+ ?x9239 (* (- 98.0) (rval2 ?y2_st))) (* (- 16.0) ?x1273)) ?x2043)))
 (let (($x1976 (and (= ?x1973 11.0) (<= (+ (+ (+ ?x10118 (* (- 53.0) (rval2 ?y2_st))) ?x1982) ?x378) 5.0))))
 (let ((?x2655 (* 10.0 x1)))
 (let ((?x1966 (* 76.0 ?x1273)))
 (let ((?x1810 (* 74.0 ?y4)))
 (let ((?x9011 (+ ?x1810 (* (- 81.0) ?y3))))
 (let (($x1977 (not (= (+ (+ (+ ?x9011 (* (- 95.0) (rval2 ?y2_st))) ?x1966) ?x2655) 33.0))))
 (let ((?x1063 (- 66.0)))
 (let ((?x2189 (* 86.0 x1)))
 (let ((?x1474 (* 65.0 ?y4)))
 (let ((?x9960 (+ ?x1474 (* (- 77.0) ?y3))))
 (let ((?x1959 (+ (+ (+ ?x9960 (* (- 14.0) (rval2 ?y2_st))) (* (- 85.0) ?x1273)) ?x2189)))
 (let ((?x5046 (* 8.0 ?y4)))
 (let ((?x9895 (+ ?x5046 (* (- 71.0) ?y3))))
 (let (($x1995 (= (+ (+ ?x9895 (* (- 12.0) (rval2 ?y2_st))) (* (- 46.0) ?x1273)) ?x1063)))
 (let ((?x1110 (- 7.0)))
 (let ((?x309 (* (- 51.0) x1)))
 (let ((?x8658 (+ (* (- 13.0) ?y4) (* (- 56.0) ?y3))))
 (let ((?x1927 (+ (+ (+ ?x8658 (* (- 73.0) (rval2 ?y2_st))) (* (- 15.0) ?x1273)) ?x309)))
 (let (($x2513 (not (= (+ (* (- 61.0) ?y4) (* (- 62.0) (rval2 ?y2_st))) 51.0))))
 (or (and (or $x2513 (<= ?x1927 ?x1110)) (or (not $x1995) (not (= ?x1959 ?x1063)))) (or (and (= (* (- 25.0) ?x1273) (- 85.0)) $x1977) $x1976)))))))))))))))))))))))))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x1922 (exists ((?y4 Real) )(! (let (($x1920 (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x1088 (- 35.0)))
 (let ((?x3629 (* 37.0 x1)))
 (let ((?x1998 (+ (+ (+ (* 46.0 ?y6) (* (- 63.0) ?y5)) (* 88.0 (rval2 ?y1_st))) ?x3629)))
 (< ?x1998 ?x1088)))) :qid k!20))
  :qid k!20))
 ))
 (let ((?x1181 (- 69.0)))
 (let (($x2148 (<= (+ (+ (* 50.0 ?y4) (* 94.0 (rval2 ?y2_st))) (* (- 55.0) x1)) ?x1181)))
 (let (($x2149 (or $x2148 (>= (+ (* (- 53.0) (rval2 ?y2_st)) (* 94.0 x1)) 0.0))))
 (let (($x2522 (exists ((?y5 Real) )(! (<= (+ (+ (* 23.0 ?y5) (* 32.0 ?y4)) (* (- 21.0) (rval2 ?y2_st))) 0.0) :qid k!20))
 ))
 (and (and $x2522 $x2149) $x1920)))))) :qid k!20))
 ))
 (let (($x1908 (exists ((?y4 Real) )(! (let (($x2112 (forall ((?y5 Real) )(! (= (+ (* (- 95.0) ?y5) (* (- 82.0) (rval2 ?y2_st))) 3.0) :qid k!20))
 ))
 (and $x2112 (> (* 86.0 (rval2 ?y1_st)) (- 21.0)))) :qid k!20))
 ))
 (let (($x2137 (exists ((?y5 Real) )(! (not (= (+ (* 61.0 (rval2 ?y2_st)) (* 31.0 x1)) (- 33.0))) :qid k!20))
 ))
 (let (($x2091 (exists ((?y4 Real) )(! (exists ((?y5 Real) )(! (let ((?x63 (- 93.0)))
 (= (+ (+ (* 75.0 ?y4) (* 1.0 (rval2 ?y2_st))) (* (- 38.0) x1)) ?x63)) :qid k!20))
  :qid k!20))
 ))
 (let (($x1785 (forall ((?y3 Real) )(! (let (($x1868 (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x8762 (+ (+ (* (- 80.0) ?y6) (* 80.0 ?y5)) (* 19.0 ?y3))))
 (let ((?x1914 (+ (+ ?x8762 (* (- 55.0) (rval2 ?y2_st))) (* (- 34.0) (rval2 ?y1_st)))))
 (let ((?x2655 (* 10.0 x1)))
 (let ((?x9632 (+ (+ (* (- 24.0) ?y6) (* (- 14.0) ?y5)) (* (- 79.0) ?y3))))
 (or (>= (+ (+ ?x9632 (* 95.0 (rval2 ?y1_st))) ?x2655) 0.0) (not (= ?x1914 0.0))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x2079 (= (+ (+ (* 42.0 ?y3) (* (- 2.0) (rval2 ?y2_st))) (* 7.0 x1)) 36.0)))
 (let ((?x5767 (* 52.0 x1)))
 (let ((?x1878 (+ (+ (* (- 74.0) ?y3) (* (- 66.0) (rval2 ?y2_st))) (* (- 46.0) (rval2 ?y1_st)))))
 (let (($x1885 (and (<= (+ (* 17.0 (rval2 ?y1_st)) (* (- 11.0) x1)) 0.0) (< (+ ?x1878 ?x5767) 25.0))))
 (let ((?x2043 (* (- 19.0) x1)))
 (let ((?x1837 (+ (+ (* (- 44.0) ?y3) (* 81.0 (rval2 ?y2_st))) (* 29.0 (rval2 ?y1_st)))))
 (let (($x1809 (and (= (+ (* (- 4.0) (rval2 ?y1_st)) (* 9.0 x1)) (- 30.0)) (<= (+ ?x1837 ?x2043) 84.0))))
 (let (($x1712 (forall ((?y4 Real) )(! (let ((?x9974 (+ (+ (* (- 39.0) ?y4) (* (- 29.0) ?y3)) (* (- 70.0) x1))))
 (let (($x9975 (<= ?x9974 32.0)))
 (let ((?x267 (* (- 48.0) x1)))
 (let ((?x662 (- 14.0)))
 (let ((?x3405 (* ?x662 ?y3)))
 (let ((?x9046 (+ (* (- 54.0) ?y4) ?x3405)))
 (let ((?x1722 (+ (+ (+ ?x9046 (* 46.0 (rval2 ?y2_st))) (* (- 77.0) (rval2 ?y1_st))) ?x267)))
 (and (>= ?x1722 64.0) $x9975)))))))) :qid k!20))
 ))
 (and (or (and $x1712 $x1809) (or $x1885 (not $x2079))) $x1868)))))))))) :qid k!20))
 ))
 (let (($x758 (not (= ?y2_st (RMk1 val!46)))))
 (let (($x813 (not (= ?y1_st (RMk1 val!45)))))
 (and $x813 $x758 (and (or $x1785 (and (and (and $x2091 $x2137) $x1908) $x1922)) $x1956)))))))))))
 )
 )
(check-sat)
