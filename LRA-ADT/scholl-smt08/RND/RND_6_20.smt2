; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (let (($x115 (forall ((?y1 Real) )(exists ((?y3_st RealState) (val!59 Real) )(let (($x1786 (exists ((?y4 Real) )(! (let (($x2461 (forall ((?y5 Real) )(! (let ((?x2386 (* 96.0 x1)))
 (let ((?x2497 (+ (+ (+ (* (- 11.0) ?y5) (* 97.0 ?y4)) (* 83.0 (rval2 ?y3_st))) (* 22.0 ?y1))))
 (let (($x2623 (>= (+ (+ (* 11.0 ?y5) (* 4.0 (rval2 ?y3_st))) (* 75.0 x1)) 1.0)))
 (let (($x2503 (= (+ (+ (* (- 44.0) ?y5) (* 82.0 ?y4)) (* (- 37.0) ?y1)) 0.0)))
 (let ((?x769 (- 18.0)))
 (let (($x141 (or (= (+ (+ (* 60.0 ?y5) (* 92.0 ?y1)) (* 47.0 x1)) ?x769) (not $x2503))))
 (or $x141 (or $x2623 (<= (+ ?x2497 ?x2386) 0.0))))))))) :qid k!20))
 ))
 (let (($x990 (exists ((?y5 Real) )(! (let ((?x1956 (* 43.0 x1)))
 (let ((?x2511 (* 92.0 ?y1)))
 (let ((?x1138 (rval2 ?y3_st)))
 (let ((?x2658 (* 4.0 ?x1138)))
 (let ((?x2360 (+ (* (- 8.0) ?y5) (* (- 93.0) ?y4))))
 (let (($x2417 (<= (+ (+ (* (- 56.0) ?y5) (* 99.0 ?y1)) (* (- 46.0) x1)) 32.0)))
 (and $x2417 (= (+ (+ (+ ?x2360 ?x2658) ?x2511) ?x1956) 0.0)))))))) :qid k!20))
 ))
 (let (($x2354 (>= (+ (* 80.0 ?y4) (* 80.0 x1)) 67.0)))
 (let (($x2493 (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x2344 (* 12.0 x1)))
 (let ((?x2422 (+ (+ (+ (* (- 53.0) ?y6) (* 89.0 (rval2 ?y3_st))) (* 82.0 ?y1)) ?x2344)))
 (let ((?x635 (* 12.0 ?y1)))
 (let ((?x305 (+ (+ (+ (* 85.0 ?y5) (* 14.0 ?y4)) (* (- 24.0) (rval2 ?y3_st))) ?x635)))
 (or (<= ?x305 0.0) (not (= ?x2422 0.0))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x2571 (exists ((?y6 Real) )(! (let (($x2326 (not (= (+ (* (- 28.0) ?y4) (* (- 44.0) x1)) (- 60.0)))))
 (let ((?x2304 (- 39.0)))
 (let ((?x2317 (* 57.0 x1)))
 (let ((?x2709 (+ (+ (+ (* 53.0 ?y6) (* (- 57.0) ?y4)) (* 54.0 (rval2 ?y3_st))) ?x2317)))
 (let ((?x9239 (- 74.0)))
 (let (($x936 (< (+ (+ (* (- 73.0) ?y6) (* (- 89.0) ?y1)) (* 37.0 x1)) ?x9239)))
 (let ((?x2553 (- 78.0)))
 (let ((?x417 (* ?x2553 x1)))
 (let ((?x2413 (+ (+ (+ (* 96.0 ?y6) (* (- 82.0) (rval2 ?y3_st))) (* ?x2304 ?y1)) ?x417)))
 (let ((?x2165 (* 93.0 x1)))
 (let ((?x8762 (- 59.0)))
 (let ((?x1052 (* ?x8762 ?y1)))
 (let ((?x2296 (+ (* (- 50.0) ?y6) (* 99.0 ?y4))))
 (let (($x2399 (and (>= (+ (+ (+ ?x2296 (* (- 87.0) (rval2 ?y3_st))) ?x1052) ?x2165) 67.0) (< ?x2413 0.0))))
 (or (and $x2399 (and $x936 (not (= ?x2709 ?x2304)))) $x2326))))))))))))))) :qid k!20))
 ))
 (or $x2571 (or (and $x2493 $x2354) (and $x990 $x2461)))))))) :qid k!20))
 ))
 (let (($x2708 (exists ((?y4 Real) )(! (forall ((?y5 Real) )(! (exists ((?y6 Real) )(! (let ((?x1888 (- 86.0)))
 (let ((?x195 (* (- 69.0) x1)))
 (let ((?x443 (- 1.0)))
 (let ((?x37 (* ?x443 ?y5)))
 (let ((?x137 (+ (* (- 68.0) ?y6) ?x37)))
 (let ((?x2277 (- 27.0)))
 (let ((?x2060 (- 31.0)))
 (let ((?x2275 (* ?x2060 x1)))
 (let ((?x2267 (* 60.0 ?y4)))
 (let ((?x2268 (+ (+ (* (- 60.0) ?y6) (* (- 47.0) ?y5)) ?x2267)))
 (let (($x2406 (= (+ (+ (+ ?x2268 (* (- 21.0) (rval2 ?y3_st))) (* 47.0 ?y1)) ?x2275) ?x2277)))
 (let (($x2409 (or (not $x2406) (>= (+ (+ ?x137 (* (- 61.0) (rval2 ?y3_st))) ?x195) ?x1888))))
 (let (($x1058 (< (+ (* 55.0 ?y5) (* (- 38.0) x1)) 0.0)))
 (let (($x6090 (= (+ (+ (* (- 83.0) (rval2 ?y3_st)) (* 35.0 ?y1)) (* 5.0 x1)) 69.0)))
 (or (and (not $x6090) $x1058) $x2409))))))))))))))) :qid k!20))
  :qid k!20))
  :qid k!20))
 ))
 (let (($x2551 (exists ((?y4 Real) )(! (let (($x336 (or (< (+ (* 43.0 ?y4) (* 40.0 ?y1)) 61.0) (> (+ (* (- 9.0) ?y1) (* 8.0 x1)) 68.0))))
 (let ((?x818 (- 70.0)))
 (let (($x6173 (= (+ (+ (* 58.0 ?y4) (* (- 91.0) ?y1)) (* 40.0 x1)) ?x818)))
 (let (($x8561 (<= (+ (+ (* 57.0 ?y4) (* 12.0 (rval2 ?y3_st))) (* (- 58.0) ?y1)) 0.0)))
 (let (($x6365 (forall ((?y5 Real) )(! (let ((?x1119 (* (- 52.0) x1)))
 (let ((?x2509 (+ (+ (+ (* 35.0 ?y5) (* 36.0 ?y4)) (* 52.0 (rval2 ?y3_st))) ?x1119)))
 (let ((?x8762 (- 59.0)))
 (let ((?x1106 (* ?x8762 x1)))
 (let ((?x939 (+ (+ (+ (* 22.0 ?y5) (* 22.0 (rval2 ?y3_st))) (* (- 12.0) ?y1)) ?x1106)))
 (let ((?x2060 (- 31.0)))
 (let ((?x2081 (- 5.0)))
 (let ((?x2210 (* ?x2081 x1)))
 (let ((?x6158 (+ (+ (* (- 3.0) ?y4) (* (- 55.0) (rval2 ?y3_st))) (* 49.0 ?y1))))
 (and (> (+ ?x6158 ?x2210) ?x2060) (and (< ?x939 0.0) (< ?x2509 0.0)))))))))))) :qid k!20))
 ))
 (and $x6365 (or (and $x8561 (not $x6173)) $x336))))))) :qid k!20))
 ))
 (let (($x758 (not (= ?y3_st (RMk1 val!59)))))
 (and $x758 (and (or $x2551 $x2708) $x1786)))))))
 )
 ))
 (let (($x2516 (forall ((?y2 Real) )(exists ((?y3_st RealState) (val!58 Real) )(forall ((?y4 Real) )(let (($x1019 (forall ((?y5 Real) )(! (let (($x2562 (forall ((?y6 Real) )(! (let ((?x1738 (+ (+ (+ (* (- 1.0) ?y6) (* 59.0 ?y4)) (* 65.0 (rval2 ?y3_st))) (* 66.0 ?y2))))
 (let ((?x10550 (* 75.0 x1)))
 (let ((?x2180 (+ (+ (* (- 76.0) ?y6) (* (- 1.0) ?y5)) (* 10.0 ?y4))))
 (and (<= (+ (+ ?x2180 (* (- 19.0) ?y2)) ?x10550) 59.0) (< ?x1738 0.0))))) :qid k!20))
 ))
 (let ((?x504 (- 45.0)))
 (let ((?x2174 (* 84.0 x1)))
 (let ((?x1975 (+ (+ (+ (* 88.0 ?y4) (* (- 91.0) (rval2 ?y3_st))) (* 46.0 ?y2)) ?x2174)))
 (let ((?x1888 (- 86.0)))
 (let ((?x2165 (* 93.0 x1)))
 (let ((?x2161 (* 40.0 ?y5)))
 (let ((?x849 (+ ?x2161 (* (- 17.0) ?y4))))
 (let (($x2171 (and (< (+ (+ ?x849 (* (- 41.0) (rval2 ?y3_st))) ?x2165) ?x1888) (<= ?x1975 ?x504))))
 (let ((?x1146 (- 28.0)))
 (let ((?x219 (+ (* (- 2.0) ?y5) (* 4.0 ?y4))))
 (let ((?x20 (* 46.0 x1)))
 (let ((?x2141 (+ (* (- 19.0) ?y5) (* 78.0 ?y4))))
 (let (($x1989 (or (>= (+ (+ ?x2141 (* (- 17.0) (rval2 ?y3_st))) ?x20) 0.0) (> (+ (+ ?x219 (* (- 58.0) (rval2 ?y3_st))) (* 1.0 ?y2)) ?x1146))))
 (let (($x23 (<= (+ (+ (* 71.0 ?y5) (* 93.0 ?y4)) (* 27.0 x1)) 0.0)))
 (let ((?x9571 (- 44.0)))
 (let ((?x992 (- 33.0)))
 (let ((?x263 (* ?x992 x1)))
 (let ((?x3021 (+ (+ (+ (* 33.0 ?y5) (* 70.0 ?y4)) (* (- 29.0) (rval2 ?y3_st))) (* (- 14.0) ?y2))))
 (let ((?x2120 (* 49.0 x1)))
 (let ((?x1990 (+ (+ (+ (* 85.0 ?y5) (* 16.0 ?y4)) (* 61.0 (rval2 ?y3_st))) (* (- 65.0) ?y2))))
 (let (($x1120 (or (>= (+ ?x1990 ?x2120) ?x1888) (or (and (< (+ ?x3021 ?x263) ?x9571) $x23) $x1989))))
 (let (($x2538 (exists ((?y6 Real) )(! (let ((?x8762 (- 59.0)))
 (let ((?x1106 (* ?x8762 x1)))
 (let ((?x485 (rval2 ?y3_st)))
 (let ((?x2472 (* 33.0 ?x485)))
 (let ((?x1206 (+ (+ (* (- 26.0) ?y6) (* 1.0 ?y5)) (* 5.0 ?y4))))
 (let ((?x9239 (- 74.0)))
 (let ((?x2136 (* 14.0 x1)))
 (let ((?x2094 (+ (+ (* (- 7.0) ?y6) (* (- 68.0) ?y5)) (* (- 36.0) ?y4))))
 (or (< (+ (+ ?x2094 (* 61.0 ?y2)) ?x2136) ?x9239) (> (+ (+ (+ ?x1206 ?x2472) (* (- 76.0) ?y2)) ?x1106) 92.0)))))))))) :qid k!20))
 ))
 (let (($x2479 (forall ((?y6 Real) )(! (let ((?x9571 (- 44.0)))
 (let ((?x10049 (- 37.0)))
 (let ((?x2085 (* ?x10049 x1)))
 (let ((?x485 (rval2 ?y3_st)))
 (let ((?x2005 (- 42.0)))
 (let ((?x83 (* ?x2005 ?x485)))
 (let ((?x40 (+ (+ (* (- 15.0) ?y6) (* (- 5.0) ?y5)) (* (- 43.0) ?y4))))
 (< (+ (+ ?x40 ?x83) ?x2085) ?x9571)))))))) :qid k!20))
 ))
 (let (($x1998 (exists ((?y6 Real) )(! (let ((?x150 (- 43.0)))
 (let ((?x578 (* (- 34.0) x1)))
 (let ((?x485 (rval2 ?y3_st)))
 (let ((?x2005 (- 42.0)))
 (let ((?x83 (* ?x2005 ?x485)))
 (let ((?x1247 (+ (* (- 72.0) ?y6) (* (- 9.0) ?y5))))
 (> (+ (+ (+ ?x1247 ?x83) (* (- 22.0) ?y2)) ?x578) ?x150))))))) :qid k!20))
 ))
 (or (or (and (or $x1998 $x2479) $x2538) $x1120) (and $x2171 $x2562))))))))))))))))))))))))))) :qid k!20))
 ))
 (let (($x1063 (exists ((?y5 Real) )(! (forall ((?y6 Real) )(! (let ((?x712 (* 87.0 x1)))
 (let ((?x874 (+ (* (- 63.0) ?y6) (* 14.0 ?y5))))
 (let ((?x2155 (+ (+ (+ ?x874 (* (- 33.0) (rval2 ?y3_st))) (* (- 26.0) ?y2)) ?x712)))
 (let ((?x453 (- 56.0)))
 (let ((?x2055 (* 48.0 x1)))
 (let ((?x1074 (+ (* (- 18.0) ?y6) (* 66.0 ?y5))))
 (let (($x1966 (< (+ (+ (+ ?x1074 (* (- 43.0) (rval2 ?y3_st))) (* 31.0 ?y2)) ?x2055) ?x453)))
 (let ((?x2005 (- 42.0)))
 (let ((?x1150 (* (- 40.0) x1)))
 (let ((?x1038 (+ (+ (+ (* 36.0 ?y5) (* 70.0 ?y4)) (* (- 76.0) (rval2 ?y3_st))) (* (- 63.0) ?y2))))
 (let ((?x1176 (* 8.0 x1)))
 (let ((?x485 (rval2 ?y3_st)))
 (let ((?x2486 (* 61.0 ?x485)))
 (let ((?x1065 (+ (+ (* (- 20.0) ?y6) (* (- 18.0) ?y5)) (* (- 60.0) ?y4))))
 (let ((?x1158 (* (- 67.0) x1)))
 (let ((?x2521 (+ (+ (+ (* 65.0 ?y6) (* 82.0 ?y4)) (* 19.0 ?x485)) (* (- 1.0) ?y2))))
 (let (($x2083 (or (not (= (+ ?x2521 ?x1158) 5.0)) (<= (+ (+ (+ ?x1065 ?x2486) (* 100.0 ?y2)) ?x1176) 0.0))))
 (let ((?x2061 (- 51.0)))
 (let ((?x1042 (* ?x2061 x1)))
 (let ((?x1914 (+ (+ (+ (* 77.0 ?y6) (* (- 18.0) ?x485)) (* (- 20.0) ?y2)) ?x1042)))
 (let ((?x1005 (- 85.0)))
 (let ((?x1991 (* ?x2005 x1)))
 (let ((?x1923 (+ (+ (+ (* (- 88.0) ?y6) (* 45.0 ?y4)) (* (- 78.0) ?x485)) (* (- 59.0) ?y2))))
 (and (or (and (not (= (+ ?x1923 ?x1991) ?x1005)) (not (= ?x1914 0.0))) $x2083) (or (not (= (+ ?x1038 ?x1150) ?x2005)) (or $x1966 (<= ?x2155 0.0))))))))))))))))))))))))))) :qid k!20))
  :qid k!20))
 ))
 (let (($x4241 (exists ((?y6 Real) )(! (let ((?x818 (- 70.0)))
 (let ((?x2002 (* 38.0 x1)))
 (let ((?x814 (+ (* (- 93.0) ?y6) (* (- 96.0) ?y4))))
 (let (($x1181 (<= (+ (+ (+ ?x814 (* 95.0 (rval2 ?y3_st))) (* 11.0 ?y2)) ?x2002) ?x818)))
 (let ((?x1088 (* 85.0 x1)))
 (let ((?x2335 (* 12.0 ?y2)))
 (let ((?x1007 (+ (+ (+ (* (- 94.0) ?y6) (* (- 37.0) (rval2 ?y3_st))) ?x2335) ?x1088)))
 (let ((?x2061 (- 51.0)))
 (let ((?x10098 (- 96.0)))
 (let ((?x2124 (* ?x10098 x1)))
 (let ((?x6141 (+ (+ (+ (* (- 90.0) ?y4) (* 65.0 (rval2 ?y3_st))) (* 61.0 ?y2)) ?x2124)))
 (let ((?x9571 (- 44.0)))
 (let ((?x10550 (* 75.0 x1)))
 (let ((?x698 (+ (+ (* (- 97.0) ?y6) (* (- 11.0) (rval2 ?y3_st))) (* 72.0 ?y2))))
 (let (($x1125 (and (and (>= (+ ?x698 ?x10550) ?x9571) (not (= ?x6141 ?x2061))) (or (= ?x1007 0.0) $x1181))))
 (let ((?x244 (+ (+ (+ (* 22.0 ?y6) (* 75.0 ?y4)) (* 63.0 (rval2 ?y3_st))) (* (- 68.0) ?y2))))
 (let ((?x9240 (* 86.0 x1)))
 (let ((?x2524 (* 93.0 ?y2)))
 (let ((?x6110 (+ (+ (+ (* 95.0 ?y6) (* 63.0 ?y4)) (* 73.0 (rval2 ?y3_st))) ?x2524)))
 (let ((?x10462 (- 47.0)))
 (let (($x2766 (>= (+ (+ (* 83.0 ?y6) (* (- 71.0) ?y4)) (* (- 57.0) ?y2)) ?x10462)))
 (or (or (and $x2766 (> (+ ?x6110 ?x9240) 18.0)) (not (= ?x244 0.0))) $x1125)))))))))))))))))))))) :qid k!20))
 ))
 (let (($x6188 (not (= ?y3_st (RMk1 val!58)))))
 (and $x6188 (or (and $x4241 $x1063) $x1019)))))))
 )
 )
 ))
 (or $x2516 $x115))))
(check-sat)
