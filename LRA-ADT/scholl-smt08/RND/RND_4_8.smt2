; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (declare-fun x1 () Real)
(assert
 (forall ((?y1 Real) )(exists ((?y2_st RealState) (val!14 Real) )(let (($x375 (not (= (+ (* (- 29.0) (rval2 ?y2_st)) (* (- 84.0) x1)) 90.0))))
 (let (($x250 (and (= (+ (* (- 96.0) (rval2 ?y2_st)) (* (- 28.0) ?y1)) (- 39.0)) (or (> (+ (* (- 11.0) ?y1) (* (- 23.0) x1)) 0.0) $x375))))
 (let (($x475 (exists ((?y4 Real) )(! (let ((?x1327 (* (- 37.0) x1)))
 (let ((?x497 (+ (+ (+ (* 27.0 ?y4) (* (- 17.0) (rval2 ?y2_st))) (* 75.0 ?y1)) ?x1327)))
 (not (= ?x497 24.0)))) :qid k!17))
 ))
 (let (($x474 (> (+ (+ (* 34.0 (rval2 ?y2_st)) (* 3.0 ?y1)) (* (- 78.0) x1)) 51.0)))
 (let (($x457 (or $x474 (< (+ (* (- 54.0) (rval2 ?y2_st)) (* 69.0 ?y1)) (- 95.0)))))
 (let (($x681 (exists ((?y4 Real) )(! (let (($x285 (= (+ (+ (* 14.0 (rval2 ?y2_st)) (* (- 98.0) ?y1)) (* 46.0 x1)) 83.0)))
 (let (($x404 (= (+ (+ (* (- 1.0) ?y4) (* (- 48.0) ?y1)) (* 61.0 x1)) 0.0)))
 (let (($x692 (= (+ (+ (* 48.0 ?y4) (* 70.0 ?y1)) (* (- 44.0) x1)) 69.0)))
 (let ((?x1278 (- 77.0)))
 (let ((?x1276 (* 77.0 x1)))
 (let ((?x688 (+ (+ (* (- 80.0) ?y4) (* (- 34.0) (rval2 ?y2_st))) (* (- 64.0) ?y1))))
 (or (or (>= (+ ?x688 ?x1276) ?x1278) (not $x692)) (and $x404 $x285)))))))) :qid k!17))
 ))
 (let (($x758 (not (= ?y2_st (RMk1 val!14)))))
 (and $x758 (or $x681 (and (and $x457 $x475) $x250)))))))))))
 )
 )
(check-sat)
