; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((?x1 Real) )(exists ((?x2_st RealState) (val!516 Real) )(forall ((?x3 Real) )(exists ((?x4_st RealState) (val!517 Real) )(let ((?x12491 (rval2 ?x4_st)))
 (let ((?x14640 (* 30.0 ?x12491)))
 (let ((?x1692 (+ (+ (+ (* 57.0 ?x1) (* (- 35.0) (rval2 ?x2_st))) (* 67.0 ?x3)) ?x14640)))
 (let ((?x17983 (- 82.0)))
 (let (($x12515 (> (+ (+ (* 63.0 ?x1) (* 7.0 ?x3)) (* (- 11.0) ?x12491)) ?x17983)))
 (let ((?x14180 (- 9.0)))
 (let ((?x7869 (+ (+ (* (- 11.0) (rval2 ?x2_st)) (* 95.0 ?x3)) (* (- 57.0) ?x12491))))
 (let (($x6854 (< (+ (+ (* 58.0 (rval2 ?x2_st)) (* 36.0 ?x3)) (* 40.0 ?x12491)) 19.0)))
 (let (($x11014 (> (+ (+ (* 69.0 ?x1) (* 98.0 ?x3)) (* (- 73.0) ?x12491)) 0.0)))
 (let (($x5526 (<= (+ (+ (* 85.0 (rval2 ?x2_st)) (* 65.0 ?x3)) (* (- 56.0) ?x12491)) 74.0)))
 (let (($x17033 (or (or $x5526 $x11014) (or (and $x6854 (= ?x7869 ?x14180)) (and $x12515 (<= ?x1692 84.0))))))
 (let (($x23573 (<= (+ (+ (* (- 40.0) (rval2 ?x2_st)) (* 29.0 ?x3)) (* 19.0 ?x12491)) 0.0)))
 (let (($x11833 (<= (+ (+ (* (- 69.0) ?x1) (* 99.0 ?x3)) (* 70.0 ?x12491)) 54.0)))
 (let ((?x16407 (- 2.0)))
 (let ((?x13669 (- 22.0)))
 (let ((?x2375 (* ?x13669 ?x3)))
 (let ((?x14387 (+ (+ (+ (* 53.0 ?x1) (* (- 70.0) (rval2 ?x2_st))) ?x2375) (* (- 39.0) ?x12491))))
 (let ((?x7453 (- 99.0)))
 (let ((?x20136 (+ (+ (* 90.0 (rval2 ?x2_st)) (* (- 31.0) ?x3)) (* (- 61.0) ?x12491))))
 (let (($x11608 (not (= (+ (* (- 4.0) (rval2 ?x2_st)) (* (- 23.0) ?x3)) 0.0))))
 (let (($x19881 (> (+ (+ (* (- 45.0) ?x1) (* 38.0 ?x3)) (* 89.0 ?x12491)) 68.0)))
 (let (($x13812 (not (= (+ (* (- 85.0) (rval2 ?x2_st)) (* (- 48.0) ?x3)) 0.0))))
 (let ((?x1222 (- 8.0)))
 (let ((?x21527 (+ (+ (* ?x13669 (rval2 ?x2_st)) (* (- 36.0) ?x3)) (* (- 29.0) ?x12491))))
 (let (($x3595 (and (and (or (< ?x21527 ?x1222) $x13812) (and $x19881 $x11608)) (or (and (= ?x20136 ?x7453) (< ?x14387 ?x16407)) (and $x11833 $x23573)))))
 (let ((?x9348 (- 62.0)))
 (let (($x19217 (< (+ (+ (* 100.0 ?x1) (* 62.0 (rval2 ?x2_st))) (* 31.0 ?x3)) ?x9348)))
 (let (($x9927 (<= (+ (+ (* 31.0 ?x1) (* 69.0 (rval2 ?x2_st))) (* (- 46.0) ?x12491)) 12.0)))
 (let (($x17041 (<= (+ (+ (* 69.0 (rval2 ?x2_st)) (* (- 24.0) ?x3)) (* 52.0 ?x12491)) 0.0)))
 (let ((?x12343 (- 33.0)))
 (let ((?x9133 (* 69.0 ?x3)))
 (let (($x2960 (= (+ (+ (* (- 69.0) ?x1) (* (- 75.0) (rval2 ?x2_st))) ?x9133) ?x12343)))
 (let (($x28888 (>= (+ (+ (* 100.0 ?x1) (* 47.0 ?x3)) (* (- 74.0) ?x12491)) 0.0)))
 (let (($x10839 (or (>= (+ (* (- 44.0) (rval2 ?x2_st)) (* (- 93.0) ?x3)) (- 59.0)) $x28888)))
 (let ((?x7510 (- 68.0)))
 (let ((?x15410 (+ (+ (+ (* 13.0 ?x1) (* (- 17.0) (rval2 ?x2_st))) (* 75.0 ?x3)) (* (- 49.0) ?x12491))))
 (let (($x6158 (or (or (>= ?x15410 ?x7510) (> (+ (* 3.0 ?x3) (* 100.0 ?x12491)) 47.0)) $x10839)))
 (let ((?x19822 (+ (+ (* (- 13.0) ?x1) (* 91.0 (rval2 ?x2_st))) (* (- 53.0) ?x3))))
 (let (($x1094 (or (= (+ ?x19822 (* (- 58.0) ?x12491)) 93.0) (< (* (- 70.0) ?x12491) ?x7510))))
 (let ((?x16986 (* 11.0 ?x12491)))
 (let ((?x18174 (+ (+ (+ (* (- 45.0) ?x1) (* 62.0 (rval2 ?x2_st))) (* 83.0 ?x3)) ?x16986)))
 (let (($x3824 (and (= (+ (* (- 78.0) ?x1) (* 61.0 ?x3)) 9.0) (= ?x18174 ?x14180))))
 (let ((?x6088 (+ (+ (* (- 13.0) ?x1) (* (- 18.0) (rval2 ?x2_st))) (* (- 90.0) ?x3))))
 (let (($x11002 (or (>= ?x6088 85.0) (> (+ (+ (* 69.0 ?x1) (* 38.0 ?x3)) (* 44.0 ?x12491)) 20.0))))
 (let ((?x2607 (- 92.0)))
 (let ((?x6908 (+ (+ (* (- 94.0) ?x1) (* (- 86.0) (rval2 ?x2_st))) (* (- 54.0) ?x3))))
 (let (($x3238 (and (< ?x6908 ?x2607) (not (= (+ (* 53.0 ?x1) (* (- 43.0) (rval2 ?x2_st))) 26.0)))))
 (let (($x1163 (and (and (and $x3238 $x11002) (or $x3824 $x1094)) (or $x6158 (and (and $x2960 $x17041) (and $x9927 $x19217))))))
 (let (($x636 (not (= ?x4_st (RMk1 val!517)))))
 (let (($x12990 (not (= ?x2_st (RMk1 val!516)))))
 (and $x12990 $x636 (and $x1163 (and $x3595 $x17033))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
(check-sat)
