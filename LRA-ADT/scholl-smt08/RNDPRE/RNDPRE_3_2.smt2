; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!556 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!557 Real) )(let ((?x18236 (- 21.0)))
 (let ((?x1634 (+ (+ (* 79.0 (rval2 ?x1_st)) (* (- 25.0) ?x2)) (* (- 87.0) (rval2 ?x3_st)))))
 (let ((?x10369 (- 78.0)))
 (let ((?x8602 (+ (+ (* 97.0 (rval2 ?x1_st)) (* (- 68.0) ?x2)) (* (- 92.0) (rval2 ?x3_st)))))
 (let (($x24403 (or (and (> ?x8602 ?x10369) (> ?x1634 ?x18236)) (= (+ (* 92.0 (rval2 ?x1_st)) (* 4.0 ?x2)) 3.0))))
 (let ((?x38903 (+ (+ (* 40.0 (rval2 ?x1_st)) (* 79.0 ?x2)) (* (- 5.0) (rval2 ?x3_st)))))
 (let ((?x23646 (- 33.0)))
 (let ((?x24431 (+ (+ (* 53.0 (rval2 ?x1_st)) (* (- 79.0) ?x2)) (* (- 41.0) (rval2 ?x3_st)))))
 (let ((?x24757 (+ (+ (* 33.0 (rval2 ?x1_st)) (* (- 31.0) ?x2)) (* 75.0 (rval2 ?x3_st)))))
 (let ((?x6112 (- 91.0)))
 (let (($x12219 (and (<= (+ (* (- 54.0) (rval2 ?x1_st)) (* 32.0 (rval2 ?x3_st))) ?x6112) (< ?x24757 82.0))))
 (let (($x30831 (or (not (= (* (- 86.0) ?x2) (- 90.0))) (= (* (- 47.0) (rval2 ?x1_st)) 0.0))))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x8008 (* 8.0 ?x12491)))
 (let (($x4228 (not (= (+ (+ (* 30.0 (rval2 ?x1_st)) (* 88.0 ?x2)) ?x8008) 0.0))))
 (let ((?x7338 (- 4.0)))
 (let ((?x6038 (+ (+ (* (- 92.0) (rval2 ?x1_st)) (* (- 65.0) ?x2)) (* 20.0 ?x12491))))
 (let (($x2032 (or (<= (+ (* (- 2.0) (rval2 ?x1_st)) (* 50.0 ?x2)) ?x7338) (= ?x6038 ?x7338))))
 (let (($x17366 (not (= (+ (* 63.0 ?x2) (* 15.0 ?x12491)) 69.0))))
 (let ((?x979 (+ (+ (* (- 50.0) (rval2 ?x1_st)) (* (- 80.0) ?x2)) (* (- 86.0) ?x12491))))
 (let (($x4781 (and (and (and (and (>= ?x979 19.0) $x17366) $x2032) (or $x4228 $x30831)) (or (or $x12219 (and (not (= ?x24431 ?x23646)) (> ?x38903 0.0))) $x24403))))
 (let (($x636 (not (= ?x3_st (RMk1 val!557)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!556)))))
 (and $x12990 $x636 $x4781)))))))))))))))))))))))))
 )
 )
 )
(check-sat)
