; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!578 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!579 Real) )(let (($x11958 (and (< (+ (* (- 87.0) (rval2 ?x1_st)) (* 9.0 ?x2)) 34.0) (not (= (+ (* 27.0 ?x2) (* 30.0 (rval2 ?x3_st))) (- 67.0))))))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x15716 (* 33.0 ?x12491)))
 (let (($x8973 (or (= (+ (+ (* (- 55.0) (rval2 ?x1_st)) (* 75.0 ?x2)) ?x15716) 0.0) $x11958)))
 (let ((?x3675 (+ (+ (* (- 3.0) (rval2 ?x1_st)) (* (- 74.0) ?x2)) (* 96.0 ?x12491))))
 (let (($x16428 (= (+ (+ (* 50.0 (rval2 ?x1_st)) (* 16.0 ?x2)) (* (- 46.0) ?x12491)) 63.0)))
 (let (($x39296 (or (and $x16428 (<= (+ (* 39.0 (rval2 ?x1_st)) (* 76.0 ?x2)) 51.0)) (> ?x3675 0.0))))
 (let (($x30949 (= (+ (+ (* (- 73.0) (rval2 ?x1_st)) (* 15.0 ?x2)) (* 2.0 ?x12491)) 45.0)))
 (let (($x27854 (and (not $x30949) (< (+ (* 25.0 (rval2 ?x1_st)) (* 83.0 ?x2)) 0.0))))
 (let ((?x39504 (- 39.0)))
 (let (($x12266 (> (+ (+ (* 67.0 (rval2 ?x1_st)) (* 21.0 ?x2)) (* 62.0 ?x12491)) ?x39504)))
 (let ((?x31571 (+ (+ (* (- 59.0) (rval2 ?x1_st)) (* (- 28.0) ?x2)) (* (- 83.0) ?x12491))))
 (let (($x15767 (or (= ?x31571 0.0) (<= (+ (* 7.0 (rval2 ?x1_st)) (* (- 15.0) ?x12491)) (- 22.0)))))
 (let (($x20396 (or (= (+ (* (- 62.0) (rval2 ?x1_st)) (* 17.0 ?x12491)) 12.0) $x15767)))
 (let (($x20623 (or $x20396 (and (and $x12266 (not (= (* (- 29.0) ?x12491) 54.0))) $x27854))))
 (let (($x22837 (and (<= (* (- 65.0) ?x12491) (- 88.0)) (= (+ (* 6.0 ?x2) (* (- 85.0) ?x12491)) (- 79.0)))))
 (let ((?x17881 (- 44.0)))
 (let (($x18594 (< (+ (+ (* 32.0 (rval2 ?x1_st)) (* 24.0 ?x2)) (* ?x17881 ?x12491)) ?x17881)))
 (let (($x3902 (>= (+ (* 12.0 ?x2) (* 67.0 ?x12491)) 94.0)))
 (let (($x22204 (or (< (+ (* (- 78.0) (rval2 ?x1_st)) (* 32.0 ?x2)) (- 8.0)) $x3902)))
 (let (($x11700 (or $x22204 (< (+ (* 24.0 (rval2 ?x1_st)) (* (- 2.0) ?x2)) 76.0))))
 (let (($x10085 (and (> (* 27.0 (rval2 ?x1_st)) 95.0) (< (* 89.0 (rval2 ?x1_st)) 82.0))))
 (let ((?x685 (+ (+ (* (- 40.0) (rval2 ?x1_st)) (* (- 36.0) ?x2)) (* (- 3.0) ?x12491))))
 (let (($x11347 (or (< (+ (* (- 97.0) ?x2) (* 83.0 ?x12491)) (- 59.0)) (>= ?x685 0.0))))
 (let ((?x28075 (- 23.0)))
 (let (($x25773 (< (+ (+ (* 5.0 (rval2 ?x1_st)) (* (- 83.0) ?x2)) (* 44.0 ?x12491)) ?x28075)))
 (let (($x17485 (and (> (+ (* (- 73.0) (rval2 ?x1_st)) (* (- 24.0) ?x12491)) (- 55.0)) $x25773)))
 (let (($x16715 (= (+ (+ (* 36.0 (rval2 ?x1_st)) (* 49.0 ?x2)) (* 30.0 ?x12491)) 0.0)))
 (let (($x3052 (or (and (and (>= (* (- 17.0) ?x2) 0.0) (not $x16715)) $x17485) (and $x11347 $x10085))))
 (let ((?x18913 (- 17.0)))
 (let ((?x25071 (+ (+ (* (- 36.0) (rval2 ?x1_st)) (* 42.0 ?x2)) (* (- 55.0) ?x12491))))
 (let (($x2373 (and (not (= (+ (* 98.0 (rval2 ?x1_st)) (* 7.0 ?x2)) (- 94.0))) (< ?x25071 ?x18913))))
 (let ((?x11769 (+ (+ (* (- 47.0) (rval2 ?x1_st)) (* (- 51.0) ?x2)) (* ?x39504 ?x12491))))
 (let (($x2986 (or (> ?x11769 80.0) (< (+ (* (- 95.0) ?x2) (* (- 36.0) ?x12491)) ?x18913))))
 (let ((?x35146 (- 81.0)))
 (let ((?x19654 (+ (+ (* 33.0 (rval2 ?x1_st)) (* (- 26.0) ?x2)) (* (- 68.0) ?x12491))))
 (let (($x11776 (and (= (+ (* 51.0 ?x2) (* (- 92.0) ?x12491)) (- 60.0)) (<= ?x19654 ?x35146))))
 (let (($x11100 (>= (+ (+ (* 30.0 (rval2 ?x1_st)) (* 61.0 ?x2)) (* (- 94.0) ?x12491)) 49.0)))
 (let (($x25223 (or (or (and (or $x11100 $x11776) (or $x2986 $x2373)) $x3052) (and (and (and $x11700 (and $x18594 $x22837)) $x20623) (and $x39296 $x8973)))))
 (let (($x636 (not (= ?x3_st (RMk1 val!579)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!578)))))
 (and $x12990 $x636 $x25223)))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
(check-sat)
