; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!430 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!431 Real) )(let ((?x4407 (- 24.0)))
 (let ((?x14968 (+ (+ (* (- 95.0) (rval2 ?x1_st)) (* (- 96.0) ?x2)) (* (- 74.0) (rval2 ?x3_st)))))
 (let (($x15214 (or (>= (* (- 46.0) ?x2) 37.0) (= (* (- 2.0) (rval2 ?x3_st)) 50.0))))
 (let (($x33746 (and $x15214 (and (not (= ?x14968 ?x4407)) (< (* (- 70.0) (rval2 ?x3_st)) 0.0)))))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x24695 (* 79.0 ?x12491)))
 (let (($x15374 (<= (+ (+ (* (- 86.0) (rval2 ?x1_st)) (* 77.0 ?x2)) ?x24695) 51.0)))
 (let (($x1102 (and (< (+ (* 5.0 (rval2 ?x1_st)) (* (- 33.0) ?x2)) (- 32.0)) $x15374)))
 (let (($x17288 (= (+ (+ (* (- 17.0) (rval2 ?x1_st)) (* 44.0 ?x2)) (* 27.0 ?x12491)) 0.0)))
 (let ((?x16070 (- 8.0)))
 (let (($x23460 (>= (+ (+ (* 34.0 (rval2 ?x1_st)) (* 36.0 ?x2)) (* 75.0 ?x12491)) ?x16070)))
 (let ((?x29671 (+ (+ (* (- 45.0) (rval2 ?x1_st)) (* 11.0 ?x2)) (* (- 90.0) ?x12491))))
 (let (($x33803 (or (and (not (= ?x29671 57.0)) $x23460) (and (> (* (- 7.0) (rval2 ?x1_st)) 0.0) $x17288))))
 (let ((?x11311 (- 6.0)))
 (let ((?x10258 (+ (+ (* 94.0 (rval2 ?x1_st)) (* (- 19.0) ?x2)) (* (- 86.0) ?x12491))))
 (let (($x2214 (and (not (= ?x10258 ?x11311)) (> (+ (* (- 32.0) (rval2 ?x1_st)) (* 16.0 ?x12491)) 0.0))))
 (let (($x9279 (= (+ (* 33.0 ?x2) (* 7.0 ?x12491)) 0.0)))
 (let (($x24535 (or (or $x9279 (< (+ (* 16.0 (rval2 ?x1_st)) (* 57.0 ?x2)) 40.0)) $x2214)))
 (let (($x33891 (= (+ (+ (* 47.0 (rval2 ?x1_st)) (* 73.0 ?x2)) (* 66.0 ?x12491)) 72.0)))
 (let (($x33717 (or (not $x33891) (>= (+ (* 77.0 (rval2 ?x1_st)) (* 66.0 ?x12491)) 10.0))))
 (let (($x33761 (and (<= (+ (* (- 63.0) (rval2 ?x1_st)) (* (- 4.0) ?x2)) (- 28.0)) (= (+ (* (- 98.0) (rval2 ?x1_st)) (* 87.0 ?x12491)) 0.0))))
 (let ((?x33758 (+ (+ (* (- 19.0) (rval2 ?x1_st)) (* (- 80.0) ?x2)) (* (- 66.0) ?x12491))))
 (let (($x2058 (not (= (+ (* 38.0 ?x2) (* 35.0 ?x12491)) 48.0))))
 (let ((?x33763 (+ (+ (* (- 47.0) (rval2 ?x1_st)) (* 1.0 ?x2)) (* (- 42.0) ?x12491))))
 (let (($x12939 (or (and (or (>= ?x33763 61.0) $x2058) (< ?x33758 25.0)) (and $x33761 $x33717))))
 (let (($x26037 (not (= (+ (* 61.0 (rval2 ?x1_st)) (* (- 26.0) ?x12491)) (- 18.0)))))
 (let (($x7924 (and (< (+ (* 20.0 (rval2 ?x1_st)) (* 94.0 ?x12491)) 0.0) (<= (+ (* (- 1.0) (rval2 ?x1_st)) (* 84.0 ?x2)) 5.0))))
 (let (($x15941 (or $x7924 (or $x26037 (>= (+ (* 74.0 (rval2 ?x1_st)) (* 91.0 ?x2)) 58.0)))))
 (let (($x34037 (or (not (= (+ (* 25.0 (rval2 ?x1_st)) (* (- 91.0) ?x12491)) 12.0)) (<= (+ (* 51.0 (rval2 ?x1_st)) (* 22.0 ?x2)) (- 49.0)))))
 (let (($x6802 (and (< (+ (* (- 54.0) (rval2 ?x1_st)) (* 62.0 ?x12491)) 79.0) $x34037)))
 (let (($x9795 (or (and (and $x6802 $x15941) $x12939) (and (or $x24535 $x33803) (and $x1102 $x33746)))))
 (let (($x636 (not (= ?x3_st (RMk1 val!431)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!430)))))
 (and $x12990 $x636 $x9795)))))))))))))))))))))))))))))))))))
 )
 )
 )
(check-sat)
