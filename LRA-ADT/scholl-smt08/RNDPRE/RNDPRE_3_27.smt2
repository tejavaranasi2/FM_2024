; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!390 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!391 Real) )(let ((?x1407 (+ (+ (* (- 82.0) (rval2 ?x1_st)) (* (- 9.0) ?x2)) (* 84.0 (rval2 ?x3_st)))))
 (let (($x4299 (and (< (* 68.0 (rval2 ?x1_st)) (- 8.0)) (= (+ (* 54.0 (rval2 ?x1_st)) (* (- 2.0) ?x2)) (- 99.0)))))
 (let ((?x4142 (- 33.0)))
 (let (($x7852 (or (>= (+ (* (- 59.0) (rval2 ?x1_st)) (* 47.0 ?x2)) (- 68.0)) (= (+ (* 12.0 (rval2 ?x1_st)) (* (- 62.0) (rval2 ?x3_st))) ?x4142))))
 (let ((?x9825 (+ (+ (* 93.0 (rval2 ?x1_st)) (* (- 9.0) ?x2)) (* (- 68.0) (rval2 ?x3_st)))))
 (let ((?x1071 (- 92.0)))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x23258 (* 20.0 ?x12491)))
 (let (($x3209 (and (< (+ (+ (* 85.0 (rval2 ?x1_st)) (* 26.0 ?x2)) ?x23258) ?x1071) (= ?x9825 9.0))))
 (let (($x17417 (and (and $x3209 $x7852) (and $x4299 (or (> (* 69.0 ?x12491) 74.0) (< ?x1407 19.0))))))
 (let (($x636 (not (= ?x3_st (RMk1 val!391)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!390)))))
 (and $x12990 $x636 $x17417))))))))))))))
 )
 )
 )
(check-sat)
