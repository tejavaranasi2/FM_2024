; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((?x1 Real) )(exists ((?x2_st RealState) (val!564 Real) )(forall ((?x3 Real) )(exists ((?x4_st RealState) (val!565 Real) )(let ((?x12975 (- 24.0)))
 (let ((?x31552 (+ (+ (* (- 95.0) ?x1) (* (- 96.0) (rval2 ?x2_st))) (* (- 74.0) ?x3))))
 (let (($x9195 (and (not (= (+ ?x31552 (* 59.0 (rval2 ?x4_st))) ?x12975)) (< (+ (* (- 70.0) ?x3) (* 11.0 (rval2 ?x4_st))) 0.0))))
 (let (($x39291 (or (>= (+ (* (- 46.0) (rval2 ?x2_st)) (* 11.0 (rval2 ?x4_st))) 37.0) (= (* (- 2.0) ?x3) 50.0))))
 (let (($x13081 (<= (+ (+ (* (- 86.0) ?x1) (* 77.0 (rval2 ?x2_st))) (* 79.0 ?x3)) 51.0)))
 (let ((?x39523 (- 32.0)))
 (let ((?x12491 (rval2 ?x4_st)))
 (let ((?x17477 (* 99.0 ?x12491)))
 (let (($x9538 (and (< (+ (+ (* 5.0 ?x1) (* (- 33.0) (rval2 ?x2_st))) ?x17477) ?x39523) $x13081)))
 (let (($x23456 (= (+ (+ (* (- 17.0) ?x1) (* 44.0 (rval2 ?x2_st))) (* 27.0 ?x3)) 0.0)))
 (let ((?x18370 (- 8.0)))
 (let ((?x24842 (* 67.0 ?x12491)))
 (let ((?x2498 (+ (+ (+ (* 34.0 ?x1) (* 36.0 (rval2 ?x2_st))) (* 75.0 ?x3)) ?x24842)))
 (let ((?x14899 (+ (+ (* (- 45.0) ?x1) (* 11.0 (rval2 ?x2_st))) (* (- 90.0) ?x3))))
 (let (($x19695 (or (and (not (= (+ ?x14899 (* 75.0 ?x12491)) 57.0)) (>= ?x2498 ?x18370)) (and (> (* (- 7.0) ?x1) 0.0) $x23456))))
 (let ((?x743 (- 6.0)))
 (let ((?x8179 (+ (+ (* 94.0 ?x1) (* (- 19.0) (rval2 ?x2_st))) (* (- 86.0) ?x3))))
 (let (($x6862 (and (not (= (+ ?x8179 (* (- 74.0) ?x12491)) ?x743)) (> (+ (* ?x39523 ?x1) (* 16.0 ?x3)) 0.0))))
 (let (($x4055 (= (+ (+ (* 33.0 (rval2 ?x2_st)) (* 7.0 ?x3)) (* 84.0 ?x12491)) 0.0)))
 (let (($x11929 (or (or $x4055 (< (+ (* 16.0 ?x1) (* 57.0 (rval2 ?x2_st))) 40.0)) $x6862)))
 (let ((?x2058 (+ (+ (+ (* 47.0 ?x1) (* 73.0 (rval2 ?x2_st))) (* 66.0 ?x3)) (* (- 15.0) ?x12491))))
 (let (($x39349 (or (not (= ?x2058 72.0)) (>= (+ (+ (* 77.0 ?x1) (* 66.0 ?x3)) (* 82.0 ?x12491)) 10.0))))
 (let (($x19668 (= (+ (+ (* (- 98.0) ?x1) (* 87.0 ?x3)) (* 13.0 ?x12491)) 0.0)))
 (let (($x2977 (and (<= (+ (* (- 63.0) ?x1) (* (- 4.0) (rval2 ?x2_st))) (- 28.0)) $x19668)))
 (let ((?x4591 (+ (+ (* (- 19.0) ?x1) (* (- 80.0) (rval2 ?x2_st))) (* (- 66.0) ?x3))))
 (let (($x3843 (= (+ (+ (* 38.0 (rval2 ?x2_st)) (* 35.0 ?x3)) (* (- 80.0) ?x12491)) 48.0)))
 (let ((?x6399 (+ (+ (* (- 47.0) ?x1) (* 1.0 (rval2 ?x2_st))) (* (- 42.0) ?x3))))
 (let (($x10535 (and (or (>= (+ ?x6399 (* ?x18370 ?x12491)) 61.0) (not $x3843)) (< ?x4591 25.0))))
 (let (($x11323 (>= (+ (+ (* 74.0 ?x1) (* 91.0 (rval2 ?x2_st))) (* (- 93.0) ?x12491)) 58.0)))
 (let ((?x2331 (- 18.0)))
 (let (($x21128 (= (+ (+ (* 61.0 ?x1) (* (- 26.0) ?x3)) (* 21.0 ?x12491)) ?x2331)))
 (let (($x5214 (<= (+ (+ (* (- 1.0) ?x1) (* 84.0 (rval2 ?x2_st))) (* 79.0 ?x12491)) 5.0)))
 (let (($x29121 (< (+ (+ (* 20.0 ?x1) (* 94.0 ?x3)) (* (- 42.0) ?x12491)) 0.0)))
 (let ((?x3307 (- 49.0)))
 (let (($x8156 (<= (+ (+ (* 51.0 ?x1) (* 22.0 (rval2 ?x2_st))) (* (- 35.0) ?x12491)) ?x3307)))
 (let (($x32559 (< (+ (+ (* (- 54.0) ?x1) (* 62.0 ?x3)) (* (- 53.0) ?x12491)) 79.0)))
 (let (($x39536 (and $x32559 (or (not (= (+ (* 25.0 ?x1) (* (- 91.0) ?x3)) 12.0)) $x8156))))
 (let (($x19612 (and (and $x39536 (or (and $x29121 $x5214) (or (not $x21128) $x11323))) (or $x10535 (and $x2977 $x39349)))))
 (let (($x636 (not (= ?x4_st (RMk1 val!565)))))
 (let (($x12990 (not (= ?x2_st (RMk1 val!564)))))
 (and $x12990 $x636 (or $x19612 (and (or $x11929 $x19695) (and $x9538 (and $x39291 $x9195))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
(check-sat)
