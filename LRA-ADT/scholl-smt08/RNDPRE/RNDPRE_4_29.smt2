; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (forall ((?x1 Real) )(exists ((?x2_st RealState) (val!454 Real) )(forall ((?x3 Real) )(exists ((?x4_st RealState) (val!455 Real) )(let ((?x3001 (- 29.0)))
 (let ((?x3914 (+ (+ (* (- 84.0) ?x1) (* (- 33.0) (rval2 ?x2_st))) (* 17.0 ?x3))))
 (let ((?x12525 (+ (+ (* 48.0 (rval2 ?x2_st)) (* (- 53.0) ?x3)) (* (- 28.0) (rval2 ?x4_st)))))
 (let ((?x12491 (rval2 ?x4_st)))
 (let ((?x9173 (- 85.0)))
 (let ((?x11978 (* ?x9173 ?x12491)))
 (let ((?x7236 (+ (+ (+ (* 83.0 ?x1) (* 80.0 (rval2 ?x2_st))) (* (- 46.0) ?x3)) ?x11978)))
 (let (($x4369 (or (> ?x7236 0.0) (< (+ (* 33.0 (rval2 ?x2_st)) (* 35.0 ?x12491)) (- 23.0)))))
 (let ((?x25102 (- 11.0)))
 (let ((?x8548 (+ (+ (* (- 49.0) ?x1) (* (- 32.0) (rval2 ?x2_st))) (* (- 27.0) ?x12491))))
 (let (($x1988 (> (+ (+ (* (- 9.0) ?x1) (* 55.0 (rval2 ?x2_st))) (* 80.0 ?x12491)) 0.0)))
 (let (($x13383 (and (or (and $x1988 (>= ?x8548 ?x25102)) $x4369) (or (= ?x12525 90.0) (< (+ ?x3914 (* 40.0 ?x12491)) ?x3001)))))
 (let ((?x17430 (- 96.0)))
 (let (($x7050 (= (+ (+ (* 22.0 (rval2 ?x2_st)) (* 71.0 ?x3)) (* 23.0 ?x12491)) ?x17430)))
 (let ((?x10355 (- 39.0)))
 (let (($x16764 (= (+ (+ (* (- 28.0) ?x1) (* 30.0 ?x3)) (* (- 97.0) ?x12491)) ?x10355)))
 (let ((?x4636 (* 20.0 ?x12491)))
 (let ((?x14036 (+ (+ (+ (* 75.0 ?x1) (* 1.0 (rval2 ?x2_st))) (* (- 62.0) ?x3)) ?x4636)))
 (let ((?x6089 (+ (+ (* (- 17.0) ?x1) (* (- 37.0) (rval2 ?x2_st))) (* 63.0 ?x3))))
 (let ((?x30108 (* 51.0 ?x12491)))
 (let ((?x7784 (+ (+ (+ (* 34.0 ?x1) (* 3.0 (rval2 ?x2_st))) (* (- 78.0) ?x3)) ?x30108)))
 (let (($x1382 (or (> ?x7784 51.0) (< (+ (* (- 54.0) ?x1) (* 69.0 (rval2 ?x2_st))) (- 95.0)))))
 (let (($x14827 (or (and $x1382 (and (not (= ?x6089 24.0)) (not (= ?x14036 27.0)))) (or (and (not $x16764) (not $x7050)) $x13383))))
 (let ((?x29724 (- 98.0)))
 (let (($x17043 (>= (+ (+ (* 12.0 ?x1) (* 95.0 ?x3)) (* (- 89.0) ?x12491)) ?x29724)))
 (let ((?x4499 (+ (+ (* (- 60.0) ?x1) (* (- 33.0) (rval2 ?x2_st))) (* (- 48.0) ?x3))))
 (let ((?x11553 (+ (+ (* (- 67.0) ?x1) (* (- 47.0) (rval2 ?x2_st))) (* 20.0 ?x3))))
 (let (($x8577 (not (= (+ (* 46.0 ?x1) (* 54.0 (rval2 ?x2_st))) 83.0))))
 (let (($x4170 (and (and $x8577 (not (= (+ ?x11553 (* 7.0 ?x12491)) 14.0))) (and (not (= (+ ?x4499 (* 39.0 ?x12491)) 0.0)) $x17043))))
 (let ((?x8126 (- 36.0)))
 (let ((?x16774 (* 17.0 ?x12491)))
 (let ((?x9365 (+ (+ (+ (* 89.0 ?x1) (* 99.0 (rval2 ?x2_st))) (* 73.0 ?x3)) ?x16774)))
 (let ((?x12890 (- 48.0)))
 (let ((?x15549 (+ (+ (* (- 14.0) (rval2 ?x2_st)) (* 22.0 ?x3)) (* (- 62.0) ?x12491))))
 (let ((?x33860 (- 1.0)))
 (let (($x12956 (= (+ (+ (* 67.0 (rval2 ?x2_st)) (* 13.0 ?x3)) (* (- 45.0) ?x12491)) ?x33860)))
 (let ((?x9443 (+ (+ (+ (* 4.0 ?x1) (* (- 47.0) (rval2 ?x2_st))) (* 30.0 ?x3)) (* (- 43.0) ?x12491))))
 (let ((?x30226 (+ (+ (* (- 16.0) (rval2 ?x2_st)) (* (- 24.0) ?x3)) (* (- 94.0) ?x12491))))
 (let ((?x21348 (+ (+ (* 32.0 (rval2 ?x2_st)) (* (- 6.0) ?x3)) (* (- 10.0) ?x12491))))
 (let (($x16037 (or (or (= ?x21348 0.0) (>= ?x30226 61.0)) (and (> ?x9443 0.0) (< (* 39.0 ?x3) 0.0)))))
 (let (($x3012 (or (or $x16037 (and (not $x12956) (and (not (= ?x15549 ?x12890)) (> ?x9365 ?x8126)))) $x4170)))
 (let (($x10870 (= (+ (+ (* 48.0 ?x1) (* 70.0 ?x3)) (* (- 44.0) ?x12491)) 69.0)))
 (let ((?x11683 (- 80.0)))
 (let ((?x11021 (- 44.0)))
 (let ((?x7553 (* ?x11021 ?x12491)))
 (let (($x4903 (>= (+ (+ (* (- 64.0) ?x1) (* (- 13.0) (rval2 ?x2_st))) ?x7553) ?x11683)))
 (let ((?x18776 (- 77.0)))
 (let ((?x14870 (+ (+ (+ (* (- 34.0) ?x1) (* 77.0 (rval2 ?x2_st))) (* 67.0 ?x3)) ?x11978)))
 (let (($x636 (not (= ?x4_st (RMk1 val!455)))))
 (let (($x12990 (not (= ?x2_st (RMk1 val!454)))))
 (and $x12990 $x636 (or (and (or (or (>= ?x14870 ?x18776) $x4903) $x10870) $x3012) $x14827)))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
 )
(check-sat)
