; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!574 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!575 Real) )(let (($x28967 (or (<= (+ (* 23.0 (rval2 ?x1_st)) (* (- 65.0) ?x2)) 0.0) (> (+ (* (- 71.0) (rval2 ?x1_st)) (* 15.0 (rval2 ?x3_st))) 38.0))))
 (let ((?x32001 (+ (+ (* (- 87.0) (rval2 ?x1_st)) (* (- 40.0) ?x2)) (* (- 10.0) (rval2 ?x3_st)))))
 (let (($x1708 (and (> ?x32001 92.0) (> (+ (* (- 90.0) ?x2) (* (- 18.0) (rval2 ?x3_st))) (- 79.0)))))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x13361 (- 42.0)))
 (let ((?x16436 (* ?x13361 ?x12491)))
 (let (($x13808 (and (< (+ (+ (* (- 27.0) (rval2 ?x1_st)) (* 71.0 ?x2)) ?x16436) 4.0) (= (+ (* 92.0 ?x2) (* 61.0 ?x12491)) (- 69.0)))))
 (let (($x14333 (and (= (+ (* (- 85.0) ?x2) ?x16436) 3.0) (= (+ (* 48.0 (rval2 ?x1_st)) (* 56.0 ?x12491)) 51.0))))
 (let (($x30711 (or (> (+ (* (- 74.0) ?x2) (* 70.0 ?x12491)) (- 87.0)) (> (+ (* 7.0 (rval2 ?x1_st)) (* (- 2.0) ?x2)) 0.0))))
 (let ((?x20110 (- 60.0)))
 (let ((?x2408 (* ?x20110 ?x12491)))
 (let (($x23374 (< (+ (+ (* (- 31.0) (rval2 ?x1_st)) (* (- 65.0) ?x2)) ?x2408) 79.0)))
 (let (($x5203 (and $x23374 (< (+ (* (- 3.0) (rval2 ?x1_st)) (* (- 24.0) ?x2)) 37.0))))
 (let (($x6711 (not (= (+ (* 85.0 (rval2 ?x1_st)) (* (- 79.0) ?x2)) (- 25.0)))))
 (let ((?x7015 (- 11.0)))
 (let (($x13622 (< (+ (+ (* 70.0 (rval2 ?x1_st)) (* 59.0 ?x2)) (* (- 9.0) ?x12491)) ?x7015)))
 (let ((?x13952 (- 21.0)))
 (let (($x979 (> (+ (+ (* (- 78.0) (rval2 ?x1_st)) (* 71.0 ?x2)) (* 29.0 ?x12491)) ?x13952)))
 (let ((?x2083 (- 92.0)))
 (let ((?x11203 (+ (+ (* 61.0 (rval2 ?x1_st)) (* (- 74.0) ?x2)) (* (- 3.0) ?x12491))))
 (let (($x13459 (or (< (+ (* (- 70.0) (rval2 ?x1_st)) (* 74.0 ?x12491)) 97.0) (<= (* (- 57.0) ?x12491) 5.0))))
 (let ((?x10964 (- 68.0)))
 (let (($x28214 (or (< (+ (+ (* (- 80.0) (rval2 ?x1_st)) (* 57.0 ?x2)) ?x2408) ?x10964) (> (* (- 16.0) (rval2 ?x1_st)) 27.0))))
 (let (($x7184 (or (> (* 3.0 ?x12491) (- 78.0)) (> (+ (* (- 98.0) (rval2 ?x1_st)) (* 6.0 ?x2)) 0.0))))
 (let (($x37966 (and (or (and $x7184 $x28214) (and $x13459 (< ?x11203 ?x2083))) (or (or (or $x979 $x13622) $x6711) (and $x5203 $x30711)))))
 (let ((?x24315 (- 5.0)))
 (let (($x30823 (>= (+ (+ (* 23.0 (rval2 ?x1_st)) (* (- 10.0) ?x2)) (* 59.0 ?x12491)) ?x24315)))
 (let (($x27993 (and (< (+ (* 14.0 (rval2 ?x1_st)) (* 76.0 ?x12491)) 40.0) (<= (* 75.0 ?x12491) 11.0))))
 (let ((?x5856 (+ (+ (* (- 96.0) (rval2 ?x1_st)) (* 73.0 ?x2)) (* (- 53.0) ?x12491))))
 (let (($x6089 (> (+ (+ (* 14.0 (rval2 ?x1_st)) (* 58.0 ?x2)) (* 32.0 ?x12491)) 0.0)))
 (let (($x2712 (and $x6089 (< (+ (* (- 76.0) (rval2 ?x1_st)) (* 32.0 ?x2)) 0.0))))
 (let (($x21512 (and (and $x2712 (and (>= (* (- 93.0) ?x2) 79.0) (<= ?x5856 14.0))) (or $x27993 $x30823))))
 (let ((?x18216 (- 41.0)))
 (let ((?x39589 (+ (+ (* (- 61.0) (rval2 ?x1_st)) (* (- 13.0) ?x2)) (* 71.0 ?x12491))))
 (let (($x29954 (not (= (+ (* 78.0 ?x2) (* 25.0 ?x12491)) 53.0))))
 (let ((?x28263 (- 33.0)))
 (let ((?x39592 (* 4.0 ?x12491)))
 (let (($x1818 (= (+ (+ (* (- 17.0) (rval2 ?x1_st)) (* (- 17.0) ?x2)) ?x39592) ?x28263)))
 (let (($x4118 (or (or $x1818 (> (+ (* (- 1.0) ?x2) (* 53.0 ?x12491)) (- 79.0))) (or $x29954 (>= ?x39589 ?x18216)))))
 (let ((?x10557 (+ (+ (* 23.0 (rval2 ?x1_st)) (* (- 82.0) ?x2)) (* (- 24.0) ?x12491))))
 (let ((?x39300 (- 25.0)))
 (let ((?x28778 (+ (+ (* (- 18.0) (rval2 ?x1_st)) (* (- 30.0) ?x2)) (* 82.0 ?x12491))))
 (let (($x15340 (and (not (= (+ (* 77.0 ?x2) (* 98.0 ?x12491)) (- 54.0))) (= ?x28778 ?x39300))))
 (let (($x19642 (or (= (* (- 98.0) (rval2 ?x1_st)) 0.0) (<= (+ (* 33.0 (rval2 ?x1_st)) (* 35.0 ?x2)) (- 70.0)))))
 (let ((?x38604 (- 91.0)))
 (let ((?x14392 (+ (+ (* (- 20.0) (rval2 ?x1_st)) (* 38.0 ?x2)) (* (- 61.0) ?x12491))))
 (let (($x9771 (or (and (or (<= ?x14392 ?x38604) (>= (* ?x28263 ?x12491) (- 23.0))) $x19642) (or $x15340 (> ?x10557 32.0)))))
 (let (($x3127 (or (or $x9771 (and $x4118 $x21512)) (or $x37966 (and (and $x14333 $x13808) (and $x1708 $x28967))))))
 (let (($x11723 (and (= (+ (* (- 65.0) (rval2 ?x1_st)) (* 65.0 ?x12491)) (- 4.0)) (>= (+ (* 20.0 (rval2 ?x1_st)) (* ?x13361 ?x2)) ?x2083))))
 (let ((?x13531 (+ (+ (* (- 97.0) (rval2 ?x1_st)) (* (- 24.0) ?x2)) (* 36.0 ?x12491))))
 (let ((?x7434 (+ (+ (* (- 74.0) (rval2 ?x1_st)) (* (- 30.0) ?x2)) (* 8.0 ?x12491))))
 (let ((?x16624 (- 98.0)))
 (let ((?x5357 (+ (+ (* (- 52.0) (rval2 ?x1_st)) (* (- 24.0) ?x2)) (* 64.0 ?x12491))))
 (let (($x12724 (and (and (not (= (* (- 89.0) ?x12491) 69.0)) (>= ?x5357 ?x16624)) (= (+ (* (- 94.0) (rval2 ?x1_st)) (* (- 1.0) ?x12491)) 63.0))))
 (let (($x3693 (and (< (+ (* 5.0 ?x2) (* (- 44.0) ?x12491)) (- 86.0)) (>= (* 28.0 ?x2) (- 80.0)))))
 (let ((?x39228 (+ (+ (* 46.0 (rval2 ?x1_st)) (* (- 64.0) ?x2)) (* (- 4.0) ?x12491))))
 (let (($x17398 (or (< (+ (* 32.0 (rval2 ?x1_st)) (* 20.0 ?x2)) (- 50.0)) (= ?x39228 50.0))))
 (let ((?x28075 (- 23.0)))
 (let (($x23831 (< (+ (+ (* ?x20110 (rval2 ?x1_st)) (* 53.0 ?x2)) (* ?x28263 ?x12491)) ?x28075)))
 (let ((?x9066 (- 80.0)))
 (let (($x6092 (>= (+ (+ (* (- 57.0) (rval2 ?x1_st)) (* 20.0 ?x2)) (* ?x24315 ?x12491)) ?x9066)))
 (let (($x11436 (or (< (+ (* 14.0 (rval2 ?x1_st)) (* (- 86.0) ?x2)) 19.0) (or $x6092 $x23831))))
 (let (($x2756 (and (and $x11436 (or $x17398 $x3693)) (and $x12724 (or (<= ?x7434 0.0) (not (= ?x13531 15.0)))))))
 (let (($x636 (not (= ?x3_st (RMk1 val!575)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!574)))))
 (and $x12990 $x636 (and (and $x2756 $x11723) $x3127))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
 )
 )
 )
(check-sat)
