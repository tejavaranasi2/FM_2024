; benchmark generated from python API
(set-info :status unknown)
(declare-datatypes ((RealState 0)) (((RMk1 (rval1 Real)) (RMk2 (rval2 Real)))))
 (assert
 (exists ((?x1_st RealState) (val!422 Real) )(forall ((?x2 Real) )(exists ((?x3_st RealState) (val!423 Real) )(let ((?x10051 (+ (+ (* 88.0 (rval2 ?x1_st)) (* 75.0 ?x2)) (* (- 5.0) (rval2 ?x3_st)))))
 (let (($x30388 (not (= (+ (* (- 100.0) ?x2) (* (- 19.0) (rval2 ?x3_st))) (- 12.0)))))
 (let ((?x12491 (rval2 ?x3_st)))
 (let ((?x2965 (* 65.0 ?x12491)))
 (let ((?x6406 (- 2.0)))
 (let (($x10792 (>= (+ (+ (* (- 76.0) (rval2 ?x1_st)) (* 19.0 ?x2)) (* 63.0 ?x12491)) ?x6406)))
 (let (($x6032 (and $x10792 (< (+ (+ (* 22.0 (rval2 ?x1_st)) (* 2.0 ?x2)) ?x2965) 0.0))))
 (let ((?x4219 (+ (+ (* 29.0 (rval2 ?x1_st)) (* (- 79.0) ?x2)) (* (- 70.0) ?x12491))))
 (let (($x11023 (or (> (+ (* (- 94.0) (rval2 ?x1_st)) (* (- 59.0) ?x2)) 57.0) (= ?x4219 0.0))))
 (let (($x8315 (>= (+ (+ (* (- 92.0) (rval2 ?x1_st)) (* 2.0 ?x2)) (* 27.0 ?x12491)) 4.0)))
 (let (($x10956 (or (or (or $x8315 (> (* 16.0 ?x2) 0.0)) $x11023) (or $x6032 (and $x30388 (>= ?x10051 67.0))))))
 (let (($x15892 (and (not (= (+ (* (- 67.0) ?x2) (* 84.0 ?x12491)) 3.0)) (>= (+ (* 58.0 ?x2) (* (- 41.0) ?x12491)) 7.0))))
 (let ((?x5478 (- 41.0)))
 (let ((?x1102 (* ?x5478 ?x12491)))
 (let (($x22959 (= (+ (+ (* 26.0 (rval2 ?x1_st)) (* 56.0 ?x2)) (* 28.0 ?x12491)) 93.0)))
 (let (($x11105 (or (not $x22959) (> (+ (+ (* (- 90.0) (rval2 ?x1_st)) (* 76.0 ?x2)) ?x1102) 0.0))))
 (let (($x12708 (or (>= (* (- 83.0) ?x2) (- 62.0)) (= (* 44.0 (rval2 ?x1_st)) (- 94.0)))))
 (let (($x7638 (or (or $x12708 (>= (* 53.0 (rval2 ?x1_st)) (- 80.0))) (or $x11105 $x15892))))
 (let (($x636 (not (= ?x3_st (RMk1 val!423)))))
 (let (($x12990 (not (= ?x1_st (RMk1 val!422)))))
 (and $x12990 $x636 (and $x7638 $x10956)))))))))))))))))))))))
 )
 )
 )
(check-sat)
